<?xml version="1.0" encoding="utf-8"?>
<container xmlns="http://symfony.com/schema/dic/services" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://symfony.com/schema/dic/services https://symfony.com/schema/dic/services/services-1.0.xsd">
  <parameters>
    <parameter key="kernel.project_dir">/var/www/project</parameter>
    <parameter key="kernel.environment">test</parameter>
    <parameter key="kernel.runtime_environment">%env(default:kernel.environment:APP_RUNTIME_ENV)%</parameter>
    <parameter key="kernel.runtime_mode">%env(query_string:default:container.runtime_mode:APP_RUNTIME_MODE)%</parameter>
    <parameter key="kernel.runtime_mode.web">%env(bool:default::key:web:default:kernel.runtime_mode:)%</parameter>
    <parameter key="kernel.runtime_mode.cli">%env(not:default:kernel.runtime_mode.web:)%</parameter>
    <parameter key="kernel.runtime_mode.worker">%env(bool:default::key:worker:default:kernel.runtime_mode:)%</parameter>
    <parameter key="kernel.debug">true</parameter>
    <parameter key="kernel.build_dir">/var/www/project/var/cache/test</parameter>
    <parameter key="kernel.cache_dir">/var/www/project/var/cache/test</parameter>
    <parameter key="kernel.logs_dir">/var/www/project/var/log</parameter>
    <parameter key="kernel.bundles" type="collection">
      <parameter key="FrameworkBundle">Symfony\Bundle\FrameworkBundle\FrameworkBundle</parameter>
      <parameter key="DoctrineBundle">Doctrine\Bundle\DoctrineBundle\DoctrineBundle</parameter>
      <parameter key="DoctrineMigrationsBundle">Doctrine\Bundle\MigrationsBundle\DoctrineMigrationsBundle</parameter>
      <parameter key="TwigBundle">Symfony\Bundle\TwigBundle\TwigBundle</parameter>
      <parameter key="WebProfilerBundle">Symfony\Bundle\WebProfilerBundle\WebProfilerBundle</parameter>
      <parameter key="TwigExtraBundle">Twig\Extra\TwigExtraBundle\TwigExtraBundle</parameter>
      <parameter key="SecurityBundle">Symfony\Bundle\SecurityBundle\SecurityBundle</parameter>
      <parameter key="MonologBundle">Symfony\Bundle\MonologBundle\MonologBundle</parameter>
      <parameter key="SonataTwigBundle">Sonata\Twig\Bridge\Symfony\SonataTwigBundle</parameter>
      <parameter key="SonataFormBundle">Sonata\Form\Bridge\Symfony\SonataFormBundle</parameter>
      <parameter key="SonataExporterBundle">Sonata\Exporter\Bridge\Symfony\SonataExporterBundle</parameter>
      <parameter key="SonataDoctrineBundle">Sonata\Doctrine\Bridge\Symfony\SonataDoctrineBundle</parameter>
      <parameter key="SonataBlockBundle">Sonata\BlockBundle\SonataBlockBundle</parameter>
      <parameter key="KnpMenuBundle">Knp\Bundle\MenuBundle\KnpMenuBundle</parameter>
      <parameter key="SonataAdminBundle">Sonata\AdminBundle\SonataAdminBundle</parameter>
      <parameter key="SonataDoctrineORMAdminBundle">Sonata\DoctrineORMAdminBundle\SonataDoctrineORMAdminBundle</parameter>
    </parameter>
    <parameter key="kernel.bundles_metadata" type="collection">
      <parameter key="FrameworkBundle" type="collection">
        <parameter key="path">/var/www/project/vendor/symfony/framework-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\FrameworkBundle</parameter>
      </parameter>
      <parameter key="DoctrineBundle" type="collection">
        <parameter key="path">/var/www/project/vendor/doctrine/doctrine-bundle</parameter>
        <parameter key="namespace">Doctrine\Bundle\DoctrineBundle</parameter>
      </parameter>
      <parameter key="DoctrineMigrationsBundle" type="collection">
        <parameter key="path">/var/www/project/vendor/doctrine/doctrine-migrations-bundle</parameter>
        <parameter key="namespace">Doctrine\Bundle\MigrationsBundle</parameter>
      </parameter>
      <parameter key="TwigBundle" type="collection">
        <parameter key="path">/var/www/project/vendor/symfony/twig-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\TwigBundle</parameter>
      </parameter>
      <parameter key="WebProfilerBundle" type="collection">
        <parameter key="path">/var/www/project/vendor/symfony/web-profiler-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\WebProfilerBundle</parameter>
      </parameter>
      <parameter key="TwigExtraBundle" type="collection">
        <parameter key="path">/var/www/project/vendor/twig/extra-bundle</parameter>
        <parameter key="namespace">Twig\Extra\TwigExtraBundle</parameter>
      </parameter>
      <parameter key="SecurityBundle" type="collection">
        <parameter key="path">/var/www/project/vendor/symfony/security-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\SecurityBundle</parameter>
      </parameter>
      <parameter key="MonologBundle" type="collection">
        <parameter key="path">/var/www/project/vendor/symfony/monolog-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\MonologBundle</parameter>
      </parameter>
      <parameter key="SonataTwigBundle" type="collection">
        <parameter key="path">/var/www/project/vendor/sonata-project/twig-extensions/src/Bridge/Symfony</parameter>
        <parameter key="namespace">Sonata\Twig\Bridge\Symfony</parameter>
      </parameter>
      <parameter key="SonataFormBundle" type="collection">
        <parameter key="path">/var/www/project/vendor/sonata-project/form-extensions/src/Bridge/Symfony</parameter>
        <parameter key="namespace">Sonata\Form\Bridge\Symfony</parameter>
      </parameter>
      <parameter key="SonataExporterBundle" type="collection">
        <parameter key="path">/var/www/project/vendor/sonata-project/exporter/src/Bridge/Symfony</parameter>
        <parameter key="namespace">Sonata\Exporter\Bridge\Symfony</parameter>
      </parameter>
      <parameter key="SonataDoctrineBundle" type="collection">
        <parameter key="path">/var/www/project/vendor/sonata-project/doctrine-extensions/src/Bridge/Symfony</parameter>
        <parameter key="namespace">Sonata\Doctrine\Bridge\Symfony</parameter>
      </parameter>
      <parameter key="SonataBlockBundle" type="collection">
        <parameter key="path">/var/www/project/vendor/sonata-project/block-bundle/src</parameter>
        <parameter key="namespace">Sonata\BlockBundle</parameter>
      </parameter>
      <parameter key="KnpMenuBundle" type="collection">
        <parameter key="path">/var/www/project/vendor/knplabs/knp-menu-bundle</parameter>
        <parameter key="namespace">Knp\Bundle\MenuBundle</parameter>
      </parameter>
      <parameter key="SonataAdminBundle" type="collection">
        <parameter key="path">/var/www/project/vendor/sonata-project/admin-bundle/src</parameter>
        <parameter key="namespace">Sonata\AdminBundle</parameter>
      </parameter>
      <parameter key="SonataDoctrineORMAdminBundle" type="collection">
        <parameter key="path">/var/www/project/vendor/sonata-project/doctrine-orm-admin-bundle/src</parameter>
        <parameter key="namespace">Sonata\DoctrineORMAdminBundle</parameter>
      </parameter>
    </parameter>
    <parameter key="kernel.charset">UTF-8</parameter>
    <parameter key="kernel.container_class">App_KernelTestDebugContainer</parameter>
    <parameter key="SECRET_KEY">%env(SECRET_KEY)%</parameter>
    <parameter key="event_dispatcher.event_aliases" type="collection">
      <parameter key="Symfony\Component\Console\Event\ConsoleCommandEvent">console.command</parameter>
      <parameter key="Symfony\Component\Console\Event\ConsoleErrorEvent">console.error</parameter>
      <parameter key="Symfony\Component\Console\Event\ConsoleSignalEvent">console.signal</parameter>
      <parameter key="Symfony\Component\Console\Event\ConsoleTerminateEvent">console.terminate</parameter>
      <parameter key="Symfony\Component\Form\Event\PreSubmitEvent">form.pre_submit</parameter>
      <parameter key="Symfony\Component\Form\Event\SubmitEvent">form.submit</parameter>
      <parameter key="Symfony\Component\Form\Event\PostSubmitEvent">form.post_submit</parameter>
      <parameter key="Symfony\Component\Form\Event\PreSetDataEvent">form.pre_set_data</parameter>
      <parameter key="Symfony\Component\Form\Event\PostSetDataEvent">form.post_set_data</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\ControllerArgumentsEvent">kernel.controller_arguments</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\ControllerEvent">kernel.controller</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\ResponseEvent">kernel.response</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\FinishRequestEvent">kernel.finish_request</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\RequestEvent">kernel.request</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\ViewEvent">kernel.view</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\ExceptionEvent">kernel.exception</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\TerminateEvent">kernel.terminate</parameter>
      <parameter key="Symfony\Component\Security\Core\Event\AuthenticationSuccessEvent">security.authentication.success</parameter>
      <parameter key="Symfony\Component\Security\Http\Event\InteractiveLoginEvent">security.interactive_login</parameter>
      <parameter key="Symfony\Component\Security\Http\Event\SwitchUserEvent">security.switch_user</parameter>
    </parameter>
    <parameter key="fragment.renderer.hinclude.global_template">null</parameter>
    <parameter key="fragment.path">/_fragment</parameter>
    <parameter key="kernel.secret">%env(APP_SECRET)%</parameter>
    <parameter key="kernel.http_method_override">false</parameter>
    <parameter key="kernel.trust_x_sendfile_type_header">false</parameter>
    <parameter key="kernel.trusted_hosts" type="collection"/>
    <parameter key="kernel.default_locale">en</parameter>
    <parameter key="kernel.enabled_locales" type="collection"/>
    <parameter key="kernel.error_controller">error_controller</parameter>
    <parameter key="debug.file_link_format">%env(default::SYMFONY_IDE)%</parameter>
    <parameter key="test.client.parameters" type="collection"/>
    <parameter key="asset.request_context.base_path">null</parameter>
    <parameter key="asset.request_context.secure">null</parameter>
    <parameter key="translator.logging">false</parameter>
    <parameter key="translator.default_path">/var/www/project/translations</parameter>
    <parameter key="debug.error_handler.throw_at">-1</parameter>
    <parameter key="debug.container.dump">/var/www/project/var/cache/test/App_KernelTestDebugContainer.xml</parameter>
    <parameter key="router.request_context.host">localhost</parameter>
    <parameter key="router.request_context.scheme">http</parameter>
    <parameter key="router.request_context.base_url"></parameter>
    <parameter key="router.resource">kernel::loadRoutes</parameter>
    <parameter key="router.cache_dir">/var/www/project/var/cache/test</parameter>
    <parameter key="request_listener.http_port">80</parameter>
    <parameter key="request_listener.https_port">443</parameter>
    <parameter key="serializer.mapping.cache.file">/var/www/project/var/cache/test/serialization.php</parameter>
    <parameter key="cache.prefix.seed">_/var/www/project.App_KernelTestDebugContainer</parameter>
    <parameter key="session.metadata.storage_key">_sf2_meta</parameter>
    <parameter key="session.storage.options" type="collection">
      <parameter key="cache_limiter" type="string">0</parameter>
      <parameter key="cookie_secure">auto</parameter>
      <parameter key="cookie_httponly">true</parameter>
      <parameter key="cookie_samesite">lax</parameter>
      <parameter key="gc_probability">1</parameter>
    </parameter>
    <parameter key="session.save_path">null</parameter>
    <parameter key="session.metadata.update_threshold">0</parameter>
    <parameter key="form.type_extension.csrf.enabled">true</parameter>
    <parameter key="form.type_extension.csrf.field_name">_token</parameter>
    <parameter key="validator.mapping.cache.file">/var/www/project/var/cache/test/validation.php</parameter>
    <parameter key="validator.translation_domain">validators</parameter>
    <parameter key="profiler_listener.only_exceptions">false</parameter>
    <parameter key="profiler_listener.only_main_requests">false</parameter>
    <parameter key="profiler.storage.dsn">file:/var/www/project/var/cache/test/profiler</parameter>
    <parameter key="doctrine.dbal.configuration.class">Doctrine\DBAL\Configuration</parameter>
    <parameter key="doctrine.data_collector.class">Doctrine\Bundle\DoctrineBundle\DataCollector\DoctrineDataCollector</parameter>
    <parameter key="doctrine.dbal.connection.event_manager.class">Symfony\Bridge\Doctrine\ContainerAwareEventManager</parameter>
    <parameter key="doctrine.dbal.connection_factory.class">Doctrine\Bundle\DoctrineBundle\ConnectionFactory</parameter>
    <parameter key="doctrine.dbal.events.mysql_session_init.class">Doctrine\DBAL\Event\Listeners\MysqlSessionInit</parameter>
    <parameter key="doctrine.dbal.events.oracle_session_init.class">Doctrine\DBAL\Event\Listeners\OracleSessionInit</parameter>
    <parameter key="doctrine.class">Doctrine\Bundle\DoctrineBundle\Registry</parameter>
    <parameter key="doctrine.entity_managers" type="collection">
      <parameter key="default">doctrine.orm.default_entity_manager</parameter>
    </parameter>
    <parameter key="doctrine.default_entity_manager">default</parameter>
    <parameter key="doctrine.dbal.connection_factory.types" type="collection"/>
    <parameter key="doctrine.connections" type="collection">
      <parameter key="default">doctrine.dbal.default_connection</parameter>
    </parameter>
    <parameter key="doctrine.default_connection">default</parameter>
    <parameter key="doctrine.orm.configuration.class">Doctrine\ORM\Configuration</parameter>
    <parameter key="doctrine.orm.entity_manager.class">Doctrine\ORM\EntityManager</parameter>
    <parameter key="doctrine.orm.manager_configurator.class">Doctrine\Bundle\DoctrineBundle\ManagerConfigurator</parameter>
    <parameter key="doctrine.orm.cache.array.class">Doctrine\Common\Cache\ArrayCache</parameter>
    <parameter key="doctrine.orm.cache.apc.class">Doctrine\Common\Cache\ApcCache</parameter>
    <parameter key="doctrine.orm.cache.memcache.class">Doctrine\Common\Cache\MemcacheCache</parameter>
    <parameter key="doctrine.orm.cache.memcache_host">localhost</parameter>
    <parameter key="doctrine.orm.cache.memcache_port">11211</parameter>
    <parameter key="doctrine.orm.cache.memcache_instance.class">Memcache</parameter>
    <parameter key="doctrine.orm.cache.memcached.class">Doctrine\Common\Cache\MemcachedCache</parameter>
    <parameter key="doctrine.orm.cache.memcached_host">localhost</parameter>
    <parameter key="doctrine.orm.cache.memcached_port">11211</parameter>
    <parameter key="doctrine.orm.cache.memcached_instance.class">Memcached</parameter>
    <parameter key="doctrine.orm.cache.redis.class">Doctrine\Common\Cache\RedisCache</parameter>
    <parameter key="doctrine.orm.cache.redis_host">localhost</parameter>
    <parameter key="doctrine.orm.cache.redis_port">6379</parameter>
    <parameter key="doctrine.orm.cache.redis_instance.class">Redis</parameter>
    <parameter key="doctrine.orm.cache.xcache.class">Doctrine\Common\Cache\XcacheCache</parameter>
    <parameter key="doctrine.orm.cache.wincache.class">Doctrine\Common\Cache\WinCacheCache</parameter>
    <parameter key="doctrine.orm.cache.zenddata.class">Doctrine\Common\Cache\ZendDataCache</parameter>
    <parameter key="doctrine.orm.metadata.driver_chain.class">Doctrine\Persistence\Mapping\Driver\MappingDriverChain</parameter>
    <parameter key="doctrine.orm.metadata.annotation.class">Doctrine\ORM\Mapping\Driver\AnnotationDriver</parameter>
    <parameter key="doctrine.orm.metadata.xml.class">Doctrine\ORM\Mapping\Driver\SimplifiedXmlDriver</parameter>
    <parameter key="doctrine.orm.metadata.yml.class">Doctrine\ORM\Mapping\Driver\SimplifiedYamlDriver</parameter>
    <parameter key="doctrine.orm.metadata.php.class">Doctrine\ORM\Mapping\Driver\PHPDriver</parameter>
    <parameter key="doctrine.orm.metadata.staticphp.class">Doctrine\ORM\Mapping\Driver\StaticPHPDriver</parameter>
    <parameter key="doctrine.orm.metadata.attribute.class">Doctrine\ORM\Mapping\Driver\AttributeDriver</parameter>
    <parameter key="doctrine.orm.proxy_cache_warmer.class">Symfony\Bridge\Doctrine\CacheWarmer\ProxyCacheWarmer</parameter>
    <parameter key="form.type_guesser.doctrine.class">Symfony\Bridge\Doctrine\Form\DoctrineOrmTypeGuesser</parameter>
    <parameter key="doctrine.orm.validator.unique.class">Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntityValidator</parameter>
    <parameter key="doctrine.orm.validator_initializer.class">Symfony\Bridge\Doctrine\Validator\DoctrineInitializer</parameter>
    <parameter key="doctrine.orm.security.user.provider.class">Symfony\Bridge\Doctrine\Security\User\EntityUserProvider</parameter>
    <parameter key="doctrine.orm.listeners.resolve_target_entity.class">Doctrine\ORM\Tools\ResolveTargetEntityListener</parameter>
    <parameter key="doctrine.orm.listeners.attach_entity_listeners.class">Doctrine\ORM\Tools\AttachEntityListenersListener</parameter>
    <parameter key="doctrine.orm.naming_strategy.default.class">Doctrine\ORM\Mapping\DefaultNamingStrategy</parameter>
    <parameter key="doctrine.orm.naming_strategy.underscore.class">Doctrine\ORM\Mapping\UnderscoreNamingStrategy</parameter>
    <parameter key="doctrine.orm.quote_strategy.default.class">Doctrine\ORM\Mapping\DefaultQuoteStrategy</parameter>
    <parameter key="doctrine.orm.quote_strategy.ansi.class">Doctrine\ORM\Mapping\AnsiQuoteStrategy</parameter>
    <parameter key="doctrine.orm.typed_field_mapper.default.class">Doctrine\ORM\Mapping\DefaultTypedFieldMapper</parameter>
    <parameter key="doctrine.orm.entity_listener_resolver.class">Doctrine\Bundle\DoctrineBundle\Mapping\ContainerEntityListenerResolver</parameter>
    <parameter key="doctrine.orm.second_level_cache.default_cache_factory.class">Doctrine\ORM\Cache\DefaultCacheFactory</parameter>
    <parameter key="doctrine.orm.second_level_cache.default_region.class">Doctrine\ORM\Cache\Region\DefaultRegion</parameter>
    <parameter key="doctrine.orm.second_level_cache.filelock_region.class">Doctrine\ORM\Cache\Region\FileLockRegion</parameter>
    <parameter key="doctrine.orm.second_level_cache.logger_chain.class">Doctrine\ORM\Cache\Logging\CacheLoggerChain</parameter>
    <parameter key="doctrine.orm.second_level_cache.logger_statistics.class">Doctrine\ORM\Cache\Logging\StatisticsCacheLogger</parameter>
    <parameter key="doctrine.orm.second_level_cache.cache_configuration.class">Doctrine\ORM\Cache\CacheConfiguration</parameter>
    <parameter key="doctrine.orm.second_level_cache.regions_configuration.class">Doctrine\ORM\Cache\RegionsConfiguration</parameter>
    <parameter key="doctrine.orm.auto_generate_proxy_classes">true</parameter>
    <parameter key="doctrine.orm.enable_lazy_ghost_objects">true</parameter>
    <parameter key="doctrine.orm.proxy_dir">/var/www/project/var/cache/test/doctrine/orm/Proxies</parameter>
    <parameter key="doctrine.orm.proxy_namespace">Proxies</parameter>
    <parameter key="doctrine.migrations.preferred_em">null</parameter>
    <parameter key="doctrine.migrations.preferred_connection">null</parameter>
    <parameter key="twig.form.resources" type="collection">
      <parameter>form_div_layout.html.twig</parameter>
      <parameter>@SonataForm/Form/datepicker.html.twig</parameter>
    </parameter>
    <parameter key="twig.default_path">/var/www/project/templates</parameter>
    <parameter key="security.role_hierarchy.roles" type="collection"/>
    <parameter key="security.access.denied_url">null</parameter>
    <parameter key="security.authentication.manager.erase_credentials">true</parameter>
    <parameter key="security.authentication.session_strategy.strategy">migrate</parameter>
    <parameter key="security.authentication.hide_user_not_found">true</parameter>
    <parameter key="security.firewalls" type="collection">
      <parameter>dev</parameter>
      <parameter>main</parameter>
    </parameter>
    <parameter key="security.logout_uris" type="collection"/>
    <parameter key="monolog.use_microseconds">true</parameter>
    <parameter key="monolog.swift_mailer.handlers" type="collection"/>
    <parameter key="monolog.handlers_to_channels" type="collection">
      <parameter key="monolog.handler.main" type="collection">
        <parameter key="type">exclusive</parameter>
        <parameter key="elements" type="collection">
          <parameter>event</parameter>
        </parameter>
      </parameter>
    </parameter>
    <parameter key="sonata.twig.flashmessage.manager.class">Sonata\Twig\FlashMessage\FlashManager</parameter>
    <parameter key="sonata.twig.extension.flashmessage.class">Sonata\Twig\Extension\FlashMessageExtension</parameter>
    <parameter key="sonata.twig.form_type">standard</parameter>
    <parameter key="sonata.form.form_type">standard</parameter>
    <parameter key="sonata.exporter.writer.csv.filename">php://output</parameter>
    <parameter key="sonata.exporter.writer.csv.delimiter">,</parameter>
    <parameter key="sonata.exporter.writer.csv.enclosure">"</parameter>
    <parameter key="sonata.exporter.writer.csv.escape">\</parameter>
    <parameter key="sonata.exporter.writer.csv.show_headers">true</parameter>
    <parameter key="sonata.exporter.writer.csv.with_bom">false</parameter>
    <parameter key="sonata.exporter.writer.json.filename">php://output</parameter>
    <parameter key="sonata.exporter.writer.xls.filename">php://output</parameter>
    <parameter key="sonata.exporter.writer.xls.show_headers">true</parameter>
    <parameter key="sonata.exporter.writer.xlsx.filename">php://output</parameter>
    <parameter key="sonata.exporter.writer.xlsx.show_headers">true</parameter>
    <parameter key="sonata.exporter.writer.xlsx.show_filters">true</parameter>
    <parameter key="sonata.exporter.writer.xml.filename">php://output</parameter>
    <parameter key="sonata.exporter.writer.xml.show_headers">true</parameter>
    <parameter key="sonata.exporter.writer.xml.main_element">datas</parameter>
    <parameter key="sonata.exporter.writer.xml.child_element">data</parameter>
    <parameter key="sonata.block.container.types" type="collection">
      <parameter>sonata.block.service.container</parameter>
      <parameter>sonata.page.block.container</parameter>
      <parameter>sonata.dashboard.block.container</parameter>
      <parameter>cmf.block.container</parameter>
      <parameter>cmf.block.slideshow</parameter>
    </parameter>
    <parameter key="sonata_block.blocks" type="collection">
      <parameter key="sonata.admin.block.admin_list" type="collection">
        <parameter key="contexts" type="collection">
          <parameter>admin</parameter>
        </parameter>
        <parameter key="templates" type="collection"/>
        <parameter key="settings" type="collection"/>
      </parameter>
      <parameter key="sonata.block.service.container" type="collection">
        <parameter key="contexts" type="collection"/>
        <parameter key="templates" type="collection"/>
        <parameter key="settings" type="collection"/>
      </parameter>
      <parameter key="sonata.block.service.empty" type="collection">
        <parameter key="contexts" type="collection"/>
        <parameter key="templates" type="collection"/>
        <parameter key="settings" type="collection"/>
      </parameter>
      <parameter key="sonata.block.service.text" type="collection">
        <parameter key="contexts" type="collection"/>
        <parameter key="templates" type="collection"/>
        <parameter key="settings" type="collection"/>
      </parameter>
      <parameter key="sonata.block.service.rss" type="collection">
        <parameter key="contexts" type="collection"/>
        <parameter key="templates" type="collection"/>
        <parameter key="settings" type="collection"/>
      </parameter>
      <parameter key="sonata.block.service.template" type="collection">
        <parameter key="contexts" type="collection"/>
        <parameter key="templates" type="collection"/>
        <parameter key="settings" type="collection"/>
      </parameter>
      <parameter key="sonata.block.service.menu" type="collection">
        <parameter key="contexts" type="collection"/>
        <parameter key="templates" type="collection"/>
        <parameter key="settings" type="collection"/>
      </parameter>
      <parameter key="sonata.admin.block.search_result" type="collection">
        <parameter key="contexts" type="collection"/>
        <parameter key="templates" type="collection"/>
        <parameter key="settings" type="collection"/>
      </parameter>
      <parameter key="sonata.admin.block.stats" type="collection">
        <parameter key="contexts" type="collection"/>
        <parameter key="templates" type="collection"/>
        <parameter key="settings" type="collection"/>
      </parameter>
      <parameter key="sonata.admin.block.admin_preview" type="collection">
        <parameter key="contexts" type="collection"/>
        <parameter key="templates" type="collection"/>
        <parameter key="settings" type="collection"/>
      </parameter>
    </parameter>
    <parameter key="sonata_block.blocks_by_class" type="collection"/>
    <parameter key="sonata_blocks.block_types" type="collection">
      <parameter>sonata.admin.block.admin_list</parameter>
      <parameter>sonata.block.service.container</parameter>
      <parameter>sonata.block.service.empty</parameter>
      <parameter>sonata.block.service.text</parameter>
      <parameter>sonata.block.service.rss</parameter>
      <parameter>sonata.block.service.template</parameter>
      <parameter>sonata.block.service.menu</parameter>
      <parameter>sonata.admin.block.search_result</parameter>
      <parameter>sonata.admin.block.stats</parameter>
      <parameter>sonata.admin.block.admin_preview</parameter>
    </parameter>
    <parameter key="sonata_blocks.default_contexts" type="collection"/>
    <parameter key="knp_menu.renderer.list.options" type="collection"/>
    <parameter key="knp_menu.twig.extension.class">Knp\Menu\Twig\MenuExtension</parameter>
    <parameter key="knp_menu.renderer.twig.class">Knp\Menu\Renderer\TwigRenderer</parameter>
    <parameter key="knp_menu.renderer.twig.options" type="collection"/>
    <parameter key="knp_menu.renderer.twig.template">@KnpMenu/menu.html.twig</parameter>
    <parameter key="knp_menu.default_renderer">twig</parameter>
    <parameter key="sonata.admin.twig.extension.x_editable_type_mapping" type="collection">
      <parameter key="choice">select</parameter>
      <parameter key="boolean">select</parameter>
      <parameter key="textarea">textarea</parameter>
      <parameter key="html">textarea</parameter>
      <parameter key="email">email</parameter>
      <parameter key="string">text</parameter>
      <parameter key="integer">number</parameter>
      <parameter key="float">number</parameter>
      <parameter key="currency">number</parameter>
      <parameter key="percent">number</parameter>
      <parameter key="url">url</parameter>
    </parameter>
    <parameter key="sonata.admin.configuration.global_search.empty_boxes">show</parameter>
    <parameter key="sonata.admin.configuration.global_search.admin_route">show</parameter>
    <parameter key="sonata.admin.configuration.templates" type="collection">
      <parameter key="user_block">@SonataAdmin/Core/user_block.html.twig</parameter>
      <parameter key="add_block">@SonataAdmin/Core/add_block.html.twig</parameter>
      <parameter key="layout">@SonataAdmin/standard_layout.html.twig</parameter>
      <parameter key="ajax">@SonataAdmin/ajax_layout.html.twig</parameter>
      <parameter key="dashboard">@SonataAdmin/Core/dashboard.html.twig</parameter>
      <parameter key="search">@SonataAdmin/Core/search.html.twig</parameter>
      <parameter key="list">@SonataAdmin/CRUD/list.html.twig</parameter>
      <parameter key="filter">@SonataAdmin/Form/filter_admin_fields.html.twig</parameter>
      <parameter key="show">@SonataAdmin/CRUD/show.html.twig</parameter>
      <parameter key="show_compare">@SonataAdmin/CRUD/show_compare.html.twig</parameter>
      <parameter key="edit">@SonataAdmin/CRUD/edit.html.twig</parameter>
      <parameter key="preview">@SonataAdmin/CRUD/preview.html.twig</parameter>
      <parameter key="history">@SonataAdmin/CRUD/history.html.twig</parameter>
      <parameter key="acl">@SonataAdmin/CRUD/acl.html.twig</parameter>
      <parameter key="history_revision_timestamp">@SonataAdmin/CRUD/history_revision_timestamp.html.twig</parameter>
      <parameter key="action">@SonataAdmin/CRUD/action.html.twig</parameter>
      <parameter key="select">@SonataAdmin/CRUD/list__select.html.twig</parameter>
      <parameter key="list_block">@SonataAdmin/Block/block_admin_list.html.twig</parameter>
      <parameter key="search_result_block">@SonataAdmin/Block/block_search_result.html.twig</parameter>
      <parameter key="short_object_description">@SonataAdmin/Helper/short-object-description.html.twig</parameter>
      <parameter key="delete">@SonataAdmin/CRUD/delete.html.twig</parameter>
      <parameter key="batch">@SonataAdmin/CRUD/list__batch.html.twig</parameter>
      <parameter key="batch_confirmation">@SonataAdmin/CRUD/batch_confirmation.html.twig</parameter>
      <parameter key="inner_list_row">@SonataAdmin/CRUD/list_inner_row.html.twig</parameter>
      <parameter key="outer_list_rows_mosaic">@SonataAdmin/CRUD/list_outer_rows_mosaic.html.twig</parameter>
      <parameter key="outer_list_rows_list">@SonataAdmin/CRUD/list_outer_rows_list.html.twig</parameter>
      <parameter key="outer_list_rows_tree">@SonataAdmin/CRUD/list_outer_rows_tree.html.twig</parameter>
      <parameter key="base_list_field">@SonataAdmin/CRUD/base_list_field.html.twig</parameter>
      <parameter key="pager_links">@SonataAdmin/Pager/links.html.twig</parameter>
      <parameter key="pager_results">@SonataAdmin/Pager/results.html.twig</parameter>
      <parameter key="tab_menu_template">@SonataAdmin/Core/tab_menu_template.html.twig</parameter>
      <parameter key="knp_menu_template">@SonataAdmin/Menu/sonata_menu.html.twig</parameter>
      <parameter key="action_create">@SonataAdmin/CRUD/dashboard__action_create.html.twig</parameter>
      <parameter key="button_acl">@SonataAdmin/Button/acl_button.html.twig</parameter>
      <parameter key="button_create">@SonataAdmin/Button/create_button.html.twig</parameter>
      <parameter key="button_edit">@SonataAdmin/Button/edit_button.html.twig</parameter>
      <parameter key="button_history">@SonataAdmin/Button/history_button.html.twig</parameter>
      <parameter key="button_list">@SonataAdmin/Button/list_button.html.twig</parameter>
      <parameter key="button_show">@SonataAdmin/Button/show_button.html.twig</parameter>
      <parameter key="form_theme" type="collection"/>
      <parameter key="filter_theme" type="collection"/>
    </parameter>
    <parameter key="sonata.admin.configuration.default_admin_services" type="collection">
      <parameter key="model_manager">null</parameter>
      <parameter key="data_source">null</parameter>
      <parameter key="field_description_factory">null</parameter>
      <parameter key="form_contractor">null</parameter>
      <parameter key="show_builder">null</parameter>
      <parameter key="list_builder">null</parameter>
      <parameter key="datagrid_builder">null</parameter>
      <parameter key="translator">null</parameter>
      <parameter key="configuration_pool">null</parameter>
      <parameter key="route_generator">null</parameter>
      <parameter key="security_handler">null</parameter>
      <parameter key="menu_factory">null</parameter>
      <parameter key="route_builder">null</parameter>
      <parameter key="label_translator_strategy">null</parameter>
      <parameter key="pager_type">null</parameter>
    </parameter>
    <parameter key="sonata.admin.configuration.default_controller">sonata.admin.controller.crud</parameter>
    <parameter key="sonata.admin.configuration.dashboard_groups" type="collection"/>
    <parameter key="sonata.admin.configuration.dashboard_blocks" type="collection">
      <parameter type="collection">
        <parameter key="position">left</parameter>
        <parameter key="settings" type="collection"/>
        <parameter key="type">sonata.admin.block.admin_list</parameter>
        <parameter key="roles" type="collection"/>
      </parameter>
    </parameter>
    <parameter key="sonata.admin.configuration.sort_admins">false</parameter>
    <parameter key="sonata.admin.configuration.mosaic_background">bundles/sonataadmin/images/default_mosaic_image.png</parameter>
    <parameter key="sonata.admin.configuration.default_group">default</parameter>
    <parameter key="sonata.admin.configuration.default_label_catalogue">SonataAdminBundle</parameter>
    <parameter key="sonata.admin.configuration.default_translation_domain">null</parameter>
    <parameter key="sonata.admin.configuration.default_icon">fas fa-folder</parameter>
    <parameter key="sonata.admin.configuration.breadcrumbs" type="collection">
      <parameter key="child_admin_route">show</parameter>
    </parameter>
    <parameter key="sonata.admin.configuration.security.role_admin">ROLE_SONATA_ADMIN</parameter>
    <parameter key="sonata.admin.configuration.security.role_super_admin">ROLE_SUPER_ADMIN</parameter>
    <parameter key="sonata.admin.configuration.security.information" type="collection"/>
    <parameter key="sonata.admin.configuration.security.admin_permissions" type="collection">
      <parameter>CREATE</parameter>
      <parameter>LIST</parameter>
      <parameter>DELETE</parameter>
      <parameter>UNDELETE</parameter>
      <parameter>EXPORT</parameter>
      <parameter>OPERATOR</parameter>
      <parameter>MASTER</parameter>
    </parameter>
    <parameter key="sonata.admin.configuration.security.object_permissions" type="collection">
      <parameter>VIEW</parameter>
      <parameter>EDIT</parameter>
      <parameter>HISTORY</parameter>
      <parameter>DELETE</parameter>
      <parameter>UNDELETE</parameter>
      <parameter>OPERATOR</parameter>
      <parameter>MASTER</parameter>
      <parameter>OWNER</parameter>
    </parameter>
    <parameter key="sonata.admin.security.handler.noop.class">Sonata\AdminBundle\Security\Handler\NoopSecurityHandler</parameter>
    <parameter key="sonata.admin.security.handler.role.class">Sonata\AdminBundle\Security\Handler\RoleSecurityHandler</parameter>
    <parameter key="sonata.admin.security.handler.acl.class">Sonata\AdminBundle\Security\Handler\AclSecurityHandler</parameter>
    <parameter key="sonata.admin.security.mask.builder.class">Sonata\AdminBundle\Security\Acl\Permission\MaskBuilder</parameter>
    <parameter key="sonata.admin.manipulator.acl.admin.class">Sonata\AdminBundle\Util\AdminAclManipulator</parameter>
    <parameter key="sonata.admin.object.manipulator.acl.admin.class">Sonata\AdminBundle\Util\AdminObjectAclManipulator</parameter>
    <parameter key="sonata.admin.extension.map" type="collection"/>
    <parameter key="sonata.admin.configuration.filters.persist">false</parameter>
    <parameter key="sonata.admin.configuration.filters.persister">sonata.admin.filter_persister.session</parameter>
    <parameter key="sonata.admin.configuration.show.mosaic.button">true</parameter>
    <parameter key="sonata.admin.manipulator.acl.object.orm.class">Sonata\DoctrineORMAdminBundle\Util\ObjectAclManipulator</parameter>
    <parameter key="sonata_doctrine_orm_admin.entity_manager">null</parameter>
    <parameter key="sonata_doctrine_orm_admin.templates" type="collection">
      <parameter key="types" type="collection">
        <parameter key="list" type="collection">
          <parameter key="array">@SonataAdmin/CRUD/list_array.html.twig</parameter>
          <parameter key="boolean">@SonataAdmin/CRUD/list_boolean.html.twig</parameter>
          <parameter key="date">@SonataAdmin/CRUD/list_date.html.twig</parameter>
          <parameter key="time">@SonataAdmin/CRUD/list_time.html.twig</parameter>
          <parameter key="datetime">@SonataAdmin/CRUD/list_datetime.html.twig</parameter>
          <parameter key="textarea">@SonataAdmin/CRUD/list_string.html.twig</parameter>
          <parameter key="email">@SonataAdmin/CRUD/list_email.html.twig</parameter>
          <parameter key="enum">@SonataAdmin/CRUD/list_enum.html.twig</parameter>
          <parameter key="trans">@SonataAdmin/CRUD/list_trans.html.twig</parameter>
          <parameter key="string">@SonataAdmin/CRUD/list_string.html.twig</parameter>
          <parameter key="integer">@SonataAdmin/CRUD/list_string.html.twig</parameter>
          <parameter key="float">@SonataAdmin/CRUD/list_string.html.twig</parameter>
          <parameter key="identifier">@SonataAdmin/CRUD/list_string.html.twig</parameter>
          <parameter key="currency">@SonataAdmin/CRUD/list_currency.html.twig</parameter>
          <parameter key="percent">@SonataAdmin/CRUD/list_percent.html.twig</parameter>
          <parameter key="choice">@SonataAdmin/CRUD/list_choice.html.twig</parameter>
          <parameter key="url">@SonataAdmin/CRUD/list_url.html.twig</parameter>
          <parameter key="html">@SonataAdmin/CRUD/list_html.html.twig</parameter>
          <parameter key="many_to_many">@SonataAdmin/CRUD/Association/list_many_to_many.html.twig</parameter>
          <parameter key="many_to_one">@SonataAdmin/CRUD/Association/list_many_to_one.html.twig</parameter>
          <parameter key="one_to_many">@SonataAdmin/CRUD/Association/list_one_to_many.html.twig</parameter>
          <parameter key="one_to_one">@SonataAdmin/CRUD/Association/list_one_to_one.html.twig</parameter>
        </parameter>
        <parameter key="show" type="collection">
          <parameter key="array">@SonataAdmin/CRUD/show_array.html.twig</parameter>
          <parameter key="boolean">@SonataAdmin/CRUD/show_boolean.html.twig</parameter>
          <parameter key="date">@SonataAdmin/CRUD/show_date.html.twig</parameter>
          <parameter key="time">@SonataAdmin/CRUD/show_time.html.twig</parameter>
          <parameter key="datetime">@SonataAdmin/CRUD/show_datetime.html.twig</parameter>
          <parameter key="email">@SonataAdmin/CRUD/show_email.html.twig</parameter>
          <parameter key="enum">@SonataAdmin/CRUD/show_enum.html.twig</parameter>
          <parameter key="trans">@SonataAdmin/CRUD/show_trans.html.twig</parameter>
          <parameter key="string">@SonataAdmin/CRUD/base_show_field.html.twig</parameter>
          <parameter key="integer">@SonataAdmin/CRUD/base_show_field.html.twig</parameter>
          <parameter key="float">@SonataAdmin/CRUD/base_show_field.html.twig</parameter>
          <parameter key="currency">@SonataAdmin/CRUD/show_currency.html.twig</parameter>
          <parameter key="percent">@SonataAdmin/CRUD/show_percent.html.twig</parameter>
          <parameter key="choice">@SonataAdmin/CRUD/show_choice.html.twig</parameter>
          <parameter key="url">@SonataAdmin/CRUD/show_url.html.twig</parameter>
          <parameter key="html">@SonataAdmin/CRUD/show_html.html.twig</parameter>
          <parameter key="many_to_many">@SonataAdmin/CRUD/Association/show_many_to_many.html.twig</parameter>
          <parameter key="many_to_one">@SonataAdmin/CRUD/Association/show_many_to_one.html.twig</parameter>
          <parameter key="one_to_many">@SonataAdmin/CRUD/Association/show_one_to_many.html.twig</parameter>
          <parameter key="one_to_one">@SonataAdmin/CRUD/Association/show_one_to_one.html.twig</parameter>
        </parameter>
      </parameter>
    </parameter>
    <parameter key="data_collector.templates" type="collection">
      <parameter key="data_collector.request" type="collection">
        <parameter>request</parameter>
        <parameter>@WebProfiler/Collector/request.html.twig</parameter>
      </parameter>
      <parameter key=".data_collector.command" type="collection">
        <parameter>command</parameter>
        <parameter>@WebProfiler/Collector/command.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.time" type="collection">
        <parameter>time</parameter>
        <parameter>@WebProfiler/Collector/time.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.memory" type="collection">
        <parameter>memory</parameter>
        <parameter>@WebProfiler/Collector/memory.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.validator" type="collection">
        <parameter>validator</parameter>
        <parameter>@WebProfiler/Collector/validator.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.ajax" type="collection">
        <parameter>ajax</parameter>
        <parameter>@WebProfiler/Collector/ajax.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.form" type="collection">
        <parameter>form</parameter>
        <parameter>@WebProfiler/Collector/form.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.exception" type="collection">
        <parameter>exception</parameter>
        <parameter>@WebProfiler/Collector/exception.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.logger" type="collection">
        <parameter>logger</parameter>
        <parameter>@WebProfiler/Collector/logger.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.events" type="collection">
        <parameter>events</parameter>
        <parameter>@WebProfiler/Collector/events.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.router" type="collection">
        <parameter>router</parameter>
        <parameter>@WebProfiler/Collector/router.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.cache" type="collection">
        <parameter>cache</parameter>
        <parameter>@WebProfiler/Collector/cache.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.translation" type="collection">
        <parameter>translation</parameter>
        <parameter>@WebProfiler/Collector/translation.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.security" type="collection">
        <parameter>security</parameter>
        <parameter>@Security/Collector/security.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.twig" type="collection">
        <parameter>twig</parameter>
        <parameter>@WebProfiler/Collector/twig.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.http_client" type="collection">
        <parameter>http_client</parameter>
        <parameter>@WebProfiler/Collector/http_client.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.doctrine" type="collection">
        <parameter>db</parameter>
        <parameter>@Doctrine/Collector/db.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.messenger" type="collection">
        <parameter>messenger</parameter>
        <parameter>@WebProfiler/Collector/messenger.html.twig</parameter>
      </parameter>
      <parameter key="mailer.data_collector" type="collection">
        <parameter>mailer</parameter>
        <parameter>@WebProfiler/Collector/mailer.html.twig</parameter>
      </parameter>
      <parameter key="notifier.data_collector" type="collection">
        <parameter>notifier</parameter>
        <parameter>@WebProfiler/Collector/notifier.html.twig</parameter>
      </parameter>
      <parameter key="sonata.block.data_collector" type="collection">
        <parameter>block</parameter>
        <parameter>@SonataBlock/Profiler/block.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.config" type="collection">
        <parameter>config</parameter>
        <parameter>@WebProfiler/Collector/config.html.twig</parameter>
      </parameter>
    </parameter>
    <parameter key="console.command.ids" type="collection"/>
  </parameters>
  <services>
    <service id="service_container" class="Symfony\Component\DependencyInjection\ContainerInterface" public="true" synthetic="true"/>
    <service id="kernel" class="App\Kernel" public="true" synthetic="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="routing.route_loader"/>
    </service>
    <service id="App\Entity" class="App\Entity" abstract="true">
      <tag name="container.excluded" source="in &quot;config/services.yaml&quot;"/>
    </service>
    <service id="App\Admin\CallbackAdmin" class="App\Admin\CallbackAdmin" autowire="true" autoconfigure="true"/>
    <service id="App\Admin\InvoiceAdmin" class="App\Admin\InvoiceAdmin" autowire="true" autoconfigure="true"/>
    <service id="App\Controller\CallbackController" class="App\Controller\CallbackController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="App\Service\Payment\SignatureService"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.O2p6Lk7.App\Controller\CallbackController"/>
      </call>
    </service>
    <service id="App\Controller\InvoiceController" class="App\Controller\InvoiceController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="App\Service\Payment\SignatureService"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.O2p6Lk7.App\Controller\InvoiceController"/>
      </call>
    </service>
    <service id="App\DTO\CallbackDTO" class="App\DTO\CallbackDTO" autowire="true" autoconfigure="true"/>
    <service id="App\DTO\InvoiceDTO" class="App\DTO\InvoiceDTO" autowire="true" autoconfigure="true"/>
    <service id="App\Exception\PaymentProviderException" class="App\Exception\PaymentProviderException" autowire="true" autoconfigure="true">
      <tag name="container.error" message="Cannot autowire service &quot;App\Exception\PaymentProviderException&quot;: argument &quot;$message&quot; of method &quot;__construct()&quot; is type-hinted &quot;string&quot;, you should configure its value explicitly."/>
    </service>
    <service id="App\Repository\CallbackRepository" class="App\Repository\CallbackRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\InvoiceRepository" class="App\Repository\InvoiceRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Service\Payment\Callback\CallbackAction" class="App\Service\Payment\Callback\CallbackAction" autowire="true" autoconfigure="true">
      <argument type="service" id="App\Repository\InvoiceRepository"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="serializer"/>
    </service>
    <service id="App\Service\Payment\Invoice\CreateInvoiceAction" class="App\Service\Payment\Invoice\CreateInvoiceAction" autowire="true" autoconfigure="true">
      <argument type="service" id="App\Service\Payment\SignatureService"/>
      <argument type="service" id=".debug.http_client"/>
      <argument type="service" id="App\Service\Payment\Invoice\Mock\Response\SuccessResponseResponseMock"/>
      <argument type="service" id="router.default"/>
    </service>
    <service id="App\Service\Payment\Invoice\InvoiceFactory" class="App\Service\Payment\Invoice\InvoiceFactory" autowire="true" autoconfigure="true">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="App\Service\Payment\Invoice\Mock\Response\AmountRequiredFailResponseResponseMock" class="App\Service\Payment\Invoice\Mock\Response\AmountRequiredFailResponseResponseMock" autowire="true" autoconfigure="true"/>
    <service id="App\Service\Payment\Invoice\Mock\Response\InvalidSignatureResponseResponseMock" class="App\Service\Payment\Invoice\Mock\Response\InvalidSignatureResponseResponseMock" autowire="true" autoconfigure="true"/>
    <service id="App\Service\Payment\Invoice\Mock\Response\SuccessResponseResponseMock" class="App\Service\Payment\Invoice\Mock\Response\SuccessResponseResponseMock" autowire="true" autoconfigure="true"/>
    <service id="App\Service\Payment\SignatureService" class="App\Service\Payment\SignatureService" autowire="true" autoconfigure="true">
      <argument type="service" id="parameter_bag"/>
    </service>
    <service id="admin.callback" class="App\Admin\CallbackAdmin" shared="false" autowire="true" autoconfigure="true">
      <tag name="sonata.admin" model_class="App\Entity\Callback" manager_type="orm" label="Callback"/>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setDataSource">
        <argument type="service" id="sonata.admin.data_source.orm"/>
      </call>
      <call method="setFieldDescriptionFactory">
        <argument type="service" id="sonata.admin.field_description_factory.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler.noop"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setModelClass">
        <argument>App\Entity\Callback</argument>
      </call>
      <call method="setBaseControllerName">
        <argument>sonata.admin.controller.crud</argument>
      </call>
      <call method="setCode">
        <argument>admin.callback</argument>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>Callback</argument>
      </call>
      <call method="setTranslationDomain">
        <argument>messages</argument>
      </call>
      <call method="setListModes">
        <argument type="collection">
          <argument key="list" type="collection">
            <argument key="icon">&lt;i class="fas fa-list fa-fw" aria-hidden="true"&gt;&lt;/i&gt;</argument>
            <argument key="class">fas fa-list fa-fw</argument>
          </argument>
          <argument key="mosaic" type="collection">
            <argument key="icon">&lt;i class="fas fa-th-large fa-fw" aria-hidden="true"&gt;&lt;/i&gt;</argument>
            <argument key="class">fas fa-th-large fa-fw</argument>
          </argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/filter_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setTemplateRegistry">
        <argument type="service" id="admin.callback.template_registry"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="initialize"/>
    </service>
    <service id="admin.invoice" class="App\Admin\InvoiceAdmin" shared="false" autowire="true" autoconfigure="true">
      <tag name="sonata.admin" model_class="App\Entity\Invoice" manager_type="orm" label="Invoice"/>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setDataSource">
        <argument type="service" id="sonata.admin.data_source.orm"/>
      </call>
      <call method="setFieldDescriptionFactory">
        <argument type="service" id="sonata.admin.field_description_factory.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler.noop"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setModelClass">
        <argument>App\Entity\Invoice</argument>
      </call>
      <call method="setBaseControllerName">
        <argument>sonata.admin.controller.crud</argument>
      </call>
      <call method="setCode">
        <argument>admin.invoice</argument>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>Invoice</argument>
      </call>
      <call method="setTranslationDomain">
        <argument>messages</argument>
      </call>
      <call method="setListModes">
        <argument type="collection">
          <argument key="list" type="collection">
            <argument key="icon">&lt;i class="fas fa-list fa-fw" aria-hidden="true"&gt;&lt;/i&gt;</argument>
            <argument key="class">fas fa-list fa-fw</argument>
          </argument>
          <argument key="mosaic" type="collection">
            <argument key="icon">&lt;i class="fas fa-th-large fa-fw" aria-hidden="true"&gt;&lt;/i&gt;</argument>
            <argument key="class">fas fa-th-large fa-fw</argument>
          </argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/filter_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setTemplateRegistry">
        <argument type="service" id="admin.invoice.template_registry"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="initialize"/>
    </service>
    <service id="argument_metadata_factory" class="Symfony\Component\HttpKernel\ControllerMetadata\ArgumentMetadataFactory"/>
    <service id="argument_resolver.backed_enum_resolver" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\BackedEnumValueResolver">
      <tag priority="100" name="Symfony\Component\HttpKernel\Controller\ArgumentResolver\BackedEnumValueResolver">controller.argument_value_resolver</tag>
    </service>
    <service id="argument_resolver.datetime" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\DateTimeValueResolver">
      <tag priority="100" name="Symfony\Component\HttpKernel\Controller\ArgumentResolver\DateTimeValueResolver">controller.argument_value_resolver</tag>
      <argument type="service" id="clock" on-invalid="null"/>
    </service>
    <service id="argument_resolver.request_payload" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestPayloadValueResolver" lazy="true">
      <tag name="Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestPayloadValueResolver">controller.targeted_value_resolver</tag>
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="serializer"/>
      <argument type="service" id="debug.validator" on-invalid="null"/>
      <argument type="service" id="translator.data_collector" on-invalid="null"/>
    </service>
    <service id="argument_resolver.request_attribute" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestAttributeValueResolver">
      <tag priority="100" name="Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestAttributeValueResolver">controller.argument_value_resolver</tag>
    </service>
    <service id="argument_resolver.request" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestValueResolver">
      <tag priority="50" name="Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestValueResolver">controller.argument_value_resolver</tag>
    </service>
    <service id="argument_resolver.session" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\SessionValueResolver">
      <tag priority="50" name="Symfony\Component\HttpKernel\Controller\ArgumentResolver\SessionValueResolver">controller.argument_value_resolver</tag>
    </service>
    <service id="argument_resolver.service" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\ServiceValueResolver">
      <tag priority="-50" name="Symfony\Component\HttpKernel\Controller\ArgumentResolver\ServiceValueResolver">controller.argument_value_resolver</tag>
      <argument type="service" id=".service_locator.iAuVEDq"/>
    </service>
    <service id="argument_resolver.default" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\DefaultValueResolver">
      <tag priority="-100" name="Symfony\Component\HttpKernel\Controller\ArgumentResolver\DefaultValueResolver">controller.argument_value_resolver</tag>
    </service>
    <service id="argument_resolver.variadic" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\VariadicValueResolver">
      <tag priority="-150" name="Symfony\Component\HttpKernel\Controller\ArgumentResolver\VariadicValueResolver">controller.argument_value_resolver</tag>
    </service>
    <service id="argument_resolver.query_parameter_value_resolver" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\QueryParameterValueResolver">
      <tag name="Symfony\Component\HttpKernel\Controller\ArgumentResolver\QueryParameterValueResolver">controller.targeted_value_resolver</tag>
    </service>
    <service id="response_listener" class="Symfony\Component\HttpKernel\EventListener\ResponseListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument>UTF-8</argument>
      <argument>false</argument>
    </service>
    <service id="locale_listener" class="Symfony\Component\HttpKernel\EventListener\LocaleListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="request_stack"/>
      <argument>en</argument>
      <argument type="service" id="router.default" on-invalid="ignore"/>
      <argument>false</argument>
      <argument type="collection"/>
    </service>
    <service id="validate_request_listener" class="Symfony\Component\HttpKernel\EventListener\ValidateRequestListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="disallow_search_engine_index_response_listener" class="Symfony\Component\HttpKernel\EventListener\DisallowRobotsIndexingListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="error_controller" class="Symfony\Component\HttpKernel\Controller\ErrorController" public="true">
      <argument type="service" id="http_kernel"/>
      <argument>error_controller</argument>
      <argument type="service" id="error_handler.error_renderer.serializer"/>
    </service>
    <service id="exception_listener" class="Symfony\Component\HttpKernel\EventListener\ErrorListener">
      <tag name="monolog.logger" channel="request"/>
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument>error_controller</argument>
      <argument type="service" id="monolog.logger.request" on-invalid="null"/>
      <argument>true</argument>
      <argument type="collection"/>
    </service>
    <service id="controller.cache_attribute_listener" class="Symfony\Component\HttpKernel\EventListener\CacheAttributeListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="parameter_bag" class="Symfony\Component\DependencyInjection\ParameterBag\ContainerBag">
      <argument type="service" id="service_container"/>
    </service>
    <service id="http_kernel" class="Symfony\Component\HttpKernel\HttpKernel" public="true">
      <tag name="container.hot_path"/>
      <tag name="container.preload" class="Symfony\Component\Runtime\Runner\Symfony\HttpKernelRunner"/>
      <tag name="container.preload" class="Symfony\Component\Runtime\Runner\Symfony\ResponseRunner"/>
      <tag name="container.preload" class="Symfony\Component\Runtime\SymfonyRuntime"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="debug.controller_resolver"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="debug.argument_resolver"/>
      <argument>false</argument>
    </service>
    <service id="request_stack" class="Symfony\Component\HttpFoundation\RequestStack" public="true"/>
    <service id="http_cache" class="Symfony\Bundle\FrameworkBundle\HttpCache\HttpCache">
      <tag name="container.hot_path"/>
      <argument type="service" id="kernel"/>
      <argument type="service" id="http_cache.store"/>
      <argument>null</argument>
      <argument type="collection">
        <argument key="debug">true</argument>
      </argument>
    </service>
    <service id="http_cache.store" class="Symfony\Component\HttpKernel\HttpCache\Store">
      <argument>/var/www/project/var/cache/test/http_cache</argument>
    </service>
    <service id="url_helper" class="Symfony\Component\HttpFoundation\UrlHelper">
      <argument type="service" id="request_stack"/>
      <argument type="service" id="router.default" on-invalid="ignore"/>
    </service>
    <service id="cache_warmer" class="Symfony\Component\HttpKernel\CacheWarmer\CacheWarmerAggregate" public="true">
      <tag name="container.no_preload"/>
      <argument type="tagged_iterator" tag="kernel.cache_warmer"/>
      <argument>true</argument>
      <argument>/var/www/project/var/cache/test/App_KernelTestDebugContainerDeprecations.log</argument>
    </service>
    <service id="cache_clearer" class="Symfony\Component\HttpKernel\CacheClearer\ChainCacheClearer">
      <argument type="tagged_iterator" tag="kernel.cache_clearer"/>
    </service>
    <service id="filesystem" class="Symfony\Component\Filesystem\Filesystem"/>
    <service id="file_locator" class="Symfony\Component\HttpKernel\Config\FileLocator">
      <argument type="service" id="kernel"/>
    </service>
    <service id="uri_signer" class="Symfony\Component\HttpFoundation\UriSigner">
      <argument>%env(APP_SECRET)%</argument>
    </service>
    <service id="config_cache_factory" class="Symfony\Component\Config\ResourceCheckerConfigCacheFactory">
      <argument type="tagged_iterator" tag="config_cache.resource_checker"/>
    </service>
    <service id="dependency_injection.config.container_parameters_resource_checker" class="Symfony\Component\DependencyInjection\Config\ContainerParametersResourceChecker">
      <tag name="config_cache.resource_checker" priority="-980"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="config.resource.self_checking_resource_checker" class="Symfony\Component\Config\Resource\SelfCheckingResourceChecker">
      <tag name="config_cache.resource_checker" priority="-990"/>
    </service>
    <service id="services_resetter" class="Symfony\Component\HttpKernel\DependencyInjection\ServicesResetter" public="true">
      <argument type="iterator">
        <argument key="cache.app" type="service" id="cache.app" on-invalid="ignore_uninitialized"/>
        <argument key="cache.system" type="service" id="cache.system" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator" type="service" id="cache.validator" on-invalid="ignore_uninitialized"/>
        <argument key="cache.serializer" type="service" id="cache.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="cache.annotations" type="service" id="cache.annotations" on-invalid="ignore_uninitialized"/>
        <argument key="cache.property_info" type="service" id="cache.property_info" on-invalid="ignore_uninitialized"/>
        <argument key="cache.messenger.restart_workers_signal" type="service" id="cache.messenger.restart_workers_signal" on-invalid="ignore_uninitialized"/>
        <argument key="http_client.transport" type="service" id="http_client.transport" on-invalid="ignore_uninitialized"/>
        <argument key="mailer.message_logger_listener" type="service" id="mailer.message_logger_listener" on-invalid="ignore_uninitialized"/>
        <argument key="translation.locale_switcher" type="service" id="translation.locale_switcher" on-invalid="ignore_uninitialized"/>
        <argument key="debug.stopwatch" type="service" id="debug.stopwatch" on-invalid="ignore_uninitialized"/>
        <argument key="debug.event_dispatcher" type="service" id="debug.event_dispatcher" on-invalid="ignore_uninitialized"/>
        <argument key="debug.log_processor" type="service" id="debug.log_processor" on-invalid="ignore_uninitialized"/>
        <argument key="form.choice_list_factory.cached" type="service" id="form.choice_list_factory.cached" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator_expression_language" type="service" id="cache.validator_expression_language" on-invalid="ignore_uninitialized"/>
        <argument key="messenger.transport.in_memory.factory" type="service" id="messenger.transport.in_memory.factory" on-invalid="ignore_uninitialized"/>
        <argument key="profiler" type="service" id="profiler" on-invalid="ignore_uninitialized"/>
        <argument key="debug.validator" type="service" id="debug.validator" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine" type="service" id="doctrine" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.debug_data_holder" type="service" id="doctrine.debug_data_holder" on-invalid="ignore_uninitialized"/>
        <argument key="form.type.entity" type="service" id="form.type.entity" on-invalid="ignore_uninitialized"/>
        <argument key="twig" type="service" id="twig" on-invalid="ignore_uninitialized"/>
        <argument key="twig.form.engine" type="service" id="twig.form.engine" on-invalid="ignore_uninitialized"/>
        <argument key="security.token_storage" type="service" id="security.token_storage" on-invalid="ignore_uninitialized"/>
        <argument key="cache.security_expression_language" type="service" id="cache.security_expression_language" on-invalid="ignore_uninitialized"/>
        <argument key="cache.security_is_granted_attribute_expression_language" type="service" id="cache.security_is_granted_attribute_expression_language" on-invalid="ignore_uninitialized"/>
        <argument key="debug.security.firewall" type="service" id="debug.security.firewall" on-invalid="ignore_uninitialized"/>
        <argument key="debug.security.firewall.authenticator.main" type="service" id="debug.security.firewall.authenticator.main" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.handler.main" type="service" id="monolog.handler.main" on-invalid="ignore_uninitialized"/>
        <argument key=".debug.http_client" type="service" id=".debug.http_client" on-invalid="ignore_uninitialized"/>
      </argument>
      <argument type="collection">
        <argument key="cache.app" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.system" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.validator" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.serializer" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.annotations" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.property_info" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.messenger.restart_workers_signal" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="http_client.transport" type="collection">
          <argument>?reset</argument>
        </argument>
        <argument key="mailer.message_logger_listener" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="translation.locale_switcher" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="debug.stopwatch" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="debug.event_dispatcher" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="debug.log_processor" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="form.choice_list_factory.cached" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.validator_expression_language" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="messenger.transport.in_memory.factory" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="profiler" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="debug.validator" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="doctrine" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="doctrine.debug_data_holder" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="form.type.entity" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="twig" type="collection">
          <argument>resetGlobals</argument>
        </argument>
        <argument key="twig.form.engine" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="security.token_storage" type="collection">
          <argument>disableUsageTracking</argument>
          <argument>setToken</argument>
        </argument>
        <argument key="cache.security_expression_language" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.security_is_granted_attribute_expression_language" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="debug.security.firewall" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="debug.security.firewall.authenticator.main" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="monolog.handler.main" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key=".debug.http_client" type="collection">
          <argument>reset</argument>
        </argument>
      </argument>
    </service>
    <service id="reverse_container" class="Symfony\Component\DependencyInjection\ReverseContainer">
      <argument type="service" id="service_container"/>
      <argument type="service" id=".service_locator.XXv1IfR"/>
    </service>
    <service id="locale_aware_listener" class="Symfony\Component\HttpKernel\EventListener\LocaleAwareListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="iterator">
        <argument type="service" id="slugger"/>
        <argument type="service" id="translator.default"/>
        <argument type="service" id="translation.locale_switcher"/>
        <argument type="service" id="sonata.form.type.date_picker"/>
        <argument type="service" id="sonata.form.type.datetime_picker"/>
      </argument>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="container.env_var_processor" class="Symfony\Component\DependencyInjection\EnvVarProcessor">
      <tag name="container.env_var_processor"/>
      <argument type="service" id="service_container"/>
      <argument type="tagged_iterator" tag="container.env_var_loader"/>
    </service>
    <service id="slugger" class="Symfony\Component\String\Slugger\AsciiSlugger">
      <tag name="kernel.locale_aware"/>
      <argument>en</argument>
    </service>
    <service id="container.getenv" class="Closure">
      <tag name="routing.expression_language_function" function="env"/>
      <argument type="collection">
        <argument type="service" id="service_container"/>
        <argument>getEnv</argument>
      </argument>
      <factory class="Closure" method="fromCallable"/>
    </service>
    <service id="container.get_routing_condition_service" class="Closure" public="true">
      <tag name="routing.expression_language_function" function="service"/>
      <argument type="collection">
        <argument type="service" id=".service_locator.Xbsa8iG"/>
        <argument>get</argument>
      </argument>
      <factory class="Closure" method="fromCallable"/>
    </service>
    <service id="container.env" class="Symfony\Component\String\LazyString" constructor="fromCallable" abstract="true">
      <argument type="service" id="container.getenv"/>
    </service>
    <service id="config_builder.warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\ConfigBuilderCacheWarmer">
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id="kernel"/>
      <argument type="service" id="monolog.logger" on-invalid="null"/>
    </service>
    <service id="clock" class="Symfony\Component\Clock\Clock"/>
    <service id="Symfony\Component\Config\Loader\LoaderInterface" class="Symfony\Component\Config\Loader\LoaderInterface" abstract="true">
      <tag name="container.excluded"/>
    </service>
    <service id="Symfony\Component\HttpFoundation\Request" class="Symfony\Component\HttpFoundation\Request" abstract="true">
      <tag name="container.excluded"/>
    </service>
    <service id="Symfony\Component\HttpFoundation\Response" class="Symfony\Component\HttpFoundation\Response" abstract="true">
      <tag name="container.excluded"/>
    </service>
    <service id="Symfony\Component\HttpFoundation\Session\SessionInterface" class="Symfony\Component\HttpFoundation\Session\SessionInterface" abstract="true">
      <tag name="container.excluded"/>
    </service>
    <service id="fragment.handler" class="Symfony\Component\HttpKernel\DependencyInjection\LazyLoadingFragmentHandler">
      <argument type="service" id=".service_locator.lLv4pWF"/>
      <argument type="service" id="request_stack"/>
      <argument>true</argument>
    </service>
    <service id="fragment.uri_generator" class="Symfony\Component\HttpKernel\Fragment\FragmentUriGenerator">
      <argument>/_fragment</argument>
      <argument type="service" id="uri_signer"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="fragment.renderer.inline" class="Symfony\Component\HttpKernel\Fragment\InlineFragmentRenderer">
      <tag name="kernel.fragment_renderer" alias="inline"/>
      <argument type="service" id="http_kernel"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <call method="setFragmentPath">
        <argument>/_fragment</argument>
      </call>
    </service>
    <service id="error_handler.error_renderer.html" class="Symfony\Component\ErrorHandler\ErrorRenderer\HtmlErrorRenderer">
      <argument type="service">
        <service>
          <argument type="service" id="request_stack"/>
          <argument>true</argument>
          <factory class="Symfony\Component\ErrorHandler\ErrorRenderer\HtmlErrorRenderer" method="isDebug"/>
        </service>
      </argument>
      <argument>UTF-8</argument>
      <argument type="service" id="debug.file_link_formatter" on-invalid="null"/>
      <argument>/var/www/project</argument>
      <argument type="service">
        <service>
          <argument type="service" id="request_stack"/>
          <factory class="Symfony\Component\ErrorHandler\ErrorRenderer\HtmlErrorRenderer" method="getAndCleanOutputBuffer"/>
        </service>
      </argument>
      <argument type="service" id="monolog.logger" on-invalid="null"/>
    </service>
    <service id="process.messenger.process_message_handler" class="Symfony\Component\Process\Messenger\RunProcessMessageHandler">
      <tag name="messenger.message_handler"/>
    </service>
    <service id="console.error_listener" class="Symfony\Component\Console\EventListener\ErrorListener">
      <tag name="monolog.logger" channel="console"/>
      <tag name="kernel.event_subscriber"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="monolog.logger.console" on-invalid="null"/>
    </service>
    <service id="console.suggest_missing_package_subscriber" class="Symfony\Bundle\FrameworkBundle\EventListener\SuggestMissingPackageSubscriber">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.no_preload"/>
    </service>
    <service id="console.command.about" class="Symfony\Bundle\FrameworkBundle\Command\AboutCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>about</argument>
      </call>
      <call method="setDescription">
        <argument>Display information about the current project</argument>
      </call>
    </service>
    <service id="console.command.assets_install" class="Symfony\Bundle\FrameworkBundle\Command\AssetsInstallCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="filesystem"/>
      <argument>/var/www/project</argument>
      <call method="setName">
        <argument>assets:install</argument>
      </call>
      <call method="setDescription">
        <argument>Install bundle's web assets under a public directory</argument>
      </call>
    </service>
    <service id="console.command.cache_clear" class="Symfony\Bundle\FrameworkBundle\Command\CacheClearCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="cache_clearer"/>
      <argument type="service" id="filesystem"/>
      <call method="setName">
        <argument>cache:clear</argument>
      </call>
      <call method="setDescription">
        <argument>Clear the cache</argument>
      </call>
    </service>
    <service id="console.command.cache_pool_clear" class="Symfony\Bundle\FrameworkBundle\Command\CachePoolClearCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="cache.global_clearer"/>
      <argument type="collection">
        <argument>cache.app</argument>
        <argument>cache.system</argument>
        <argument>cache.validator</argument>
        <argument>cache.serializer</argument>
        <argument>cache.annotations</argument>
        <argument>cache.property_info</argument>
        <argument>cache.messenger.restart_workers_signal</argument>
        <argument>cache.validator_expression_language</argument>
        <argument>cache.doctrine.orm.default.result</argument>
        <argument>cache.doctrine.orm.default.query</argument>
        <argument>cache.security_expression_language</argument>
        <argument>cache.security_is_granted_attribute_expression_language</argument>
      </argument>
      <call method="setName">
        <argument>cache:pool:clear</argument>
      </call>
      <call method="setDescription">
        <argument>Clear cache pools</argument>
      </call>
    </service>
    <service id="console.command.cache_pool_prune" class="Symfony\Bundle\FrameworkBundle\Command\CachePoolPruneCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="collection"/>
      <call method="setName">
        <argument>cache:pool:prune</argument>
      </call>
      <call method="setDescription">
        <argument>Prune cache pools</argument>
      </call>
    </service>
    <service id="console.command.cache_pool_invalidate_tags" class="Symfony\Bundle\FrameworkBundle\Command\CachePoolInvalidateTagsCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id=".service_locator.NBUFN6A"/>
      <call method="setName">
        <argument>cache:pool:invalidate-tags</argument>
      </call>
      <call method="setDescription">
        <argument>Invalidate cache tags for all or a specific pool</argument>
      </call>
    </service>
    <service id="console.command.cache_pool_delete" class="Symfony\Bundle\FrameworkBundle\Command\CachePoolDeleteCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="cache.global_clearer"/>
      <argument type="collection">
        <argument>cache.app</argument>
        <argument>cache.system</argument>
        <argument>cache.validator</argument>
        <argument>cache.serializer</argument>
        <argument>cache.annotations</argument>
        <argument>cache.property_info</argument>
        <argument>cache.messenger.restart_workers_signal</argument>
        <argument>cache.validator_expression_language</argument>
        <argument>cache.doctrine.orm.default.result</argument>
        <argument>cache.doctrine.orm.default.query</argument>
        <argument>cache.security_expression_language</argument>
        <argument>cache.security_is_granted_attribute_expression_language</argument>
      </argument>
      <call method="setName">
        <argument>cache:pool:delete</argument>
      </call>
      <call method="setDescription">
        <argument>Delete an item from a cache pool</argument>
      </call>
    </service>
    <service id="console.command.cache_pool_list" class="Symfony\Bundle\FrameworkBundle\Command\CachePoolListCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="collection">
        <argument>cache.app</argument>
        <argument>cache.system</argument>
        <argument>cache.validator</argument>
        <argument>cache.serializer</argument>
        <argument>cache.annotations</argument>
        <argument>cache.property_info</argument>
        <argument>cache.messenger.restart_workers_signal</argument>
        <argument>cache.validator_expression_language</argument>
        <argument>cache.doctrine.orm.default.result</argument>
        <argument>cache.doctrine.orm.default.query</argument>
        <argument>cache.security_expression_language</argument>
        <argument>cache.security_is_granted_attribute_expression_language</argument>
      </argument>
      <call method="setName">
        <argument>cache:pool:list</argument>
      </call>
      <call method="setDescription">
        <argument>List available cache pools</argument>
      </call>
    </service>
    <service id="console.command.cache_warmup" class="Symfony\Bundle\FrameworkBundle\Command\CacheWarmupCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="cache_warmer"/>
      <call method="setName">
        <argument>cache:warmup</argument>
      </call>
      <call method="setDescription">
        <argument>Warm up an empty cache</argument>
      </call>
    </service>
    <service id="console.command.config_debug" class="Symfony\Bundle\FrameworkBundle\Command\ConfigDebugCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>debug:config</argument>
      </call>
      <call method="setDescription">
        <argument>Dump the current configuration for an extension</argument>
      </call>
    </service>
    <service id="console.command.config_dump_reference" class="Symfony\Bundle\FrameworkBundle\Command\ConfigDumpReferenceCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>config:dump-reference</argument>
      </call>
      <call method="setDescription">
        <argument>Dump the default configuration for an extension</argument>
      </call>
    </service>
    <service id="console.command.container_debug" class="Symfony\Bundle\FrameworkBundle\Command\ContainerDebugCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>debug:container</argument>
      </call>
      <call method="setDescription">
        <argument>Display current services for an application</argument>
      </call>
    </service>
    <service id="console.command.container_lint" class="Symfony\Bundle\FrameworkBundle\Command\ContainerLintCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>lint:container</argument>
      </call>
      <call method="setDescription">
        <argument>Ensure that arguments injected into services match type declarations</argument>
      </call>
    </service>
    <service id="console.command.debug_autowiring" class="Symfony\Bundle\FrameworkBundle\Command\DebugAutowiringCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument>null</argument>
      <argument type="service" id="debug.file_link_formatter" on-invalid="null"/>
      <call method="setName">
        <argument>debug:autowiring</argument>
      </call>
      <call method="setDescription">
        <argument>List classes/interfaces you can use for autowiring</argument>
      </call>
    </service>
    <service id="console.command.dotenv_debug" class="Symfony\Component\Dotenv\Command\DebugCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument>test</argument>
      <argument>/var/www/project</argument>
      <call method="setName">
        <argument>debug:dotenv</argument>
      </call>
      <call method="setDescription">
        <argument>List all dotenv files with variables and values</argument>
      </call>
    </service>
    <service id="console.command.event_dispatcher_debug" class="Symfony\Bundle\FrameworkBundle\Command\EventDispatcherDebugCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id=".service_locator._1SGciK"/>
      <call method="setName">
        <argument>debug:event-dispatcher</argument>
      </call>
      <call method="setDescription">
        <argument>Display configured listeners for an application</argument>
      </call>
    </service>
    <service id="console.command.messenger_consume_messages" class="Symfony\Component\Messenger\Command\ConsumeMessagesCommand">
      <tag name="console.command"/>
      <tag name="monolog.logger" channel="messenger"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="messenger.routable_message_bus"/>
      <argument type="service" id="messenger.receiver_locator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="monolog.logger.messenger" on-invalid="null"/>
      <argument type="collection">
        <argument>async</argument>
        <argument>failed</argument>
      </argument>
      <argument type="service" id="messenger.listener.reset_services" on-invalid="null"/>
      <argument type="collection">
        <argument>messenger.bus.default</argument>
      </argument>
      <argument>null</argument>
      <argument>null</argument>
      <call method="setName">
        <argument>messenger:consume</argument>
      </call>
      <call method="setDescription">
        <argument>Consume messages</argument>
      </call>
    </service>
    <service id="console.command.messenger_setup_transports" class="Symfony\Component\Messenger\Command\SetupTransportsCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="messenger.receiver_locator"/>
      <argument type="collection">
        <argument>async</argument>
        <argument>failed</argument>
      </argument>
      <call method="setName">
        <argument>messenger:setup-transports</argument>
      </call>
      <call method="setDescription">
        <argument>Prepare the required infrastructure for the transport</argument>
      </call>
    </service>
    <service id="console.command.messenger_debug" class="Symfony\Component\Messenger\Command\DebugCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="collection">
        <argument key="messenger.bus.default" type="collection">
          <argument key="Symfony\Component\Process\Messenger\RunProcessMessage" type="collection">
            <argument type="collection">
              <argument>process.messenger.process_message_handler</argument>
              <argument type="collection"/>
            </argument>
          </argument>
          <argument key="Symfony\Component\Console\Messenger\RunCommandMessage" type="collection">
            <argument type="collection">
              <argument>console.messenger.execute_command_handler</argument>
              <argument type="collection"/>
            </argument>
          </argument>
          <argument key="Symfony\Component\HttpClient\Messenger\PingWebhookMessage" type="collection">
            <argument type="collection">
              <argument>http_client.messenger.ping_webhook_handler</argument>
              <argument type="collection"/>
            </argument>
          </argument>
          <argument key="Symfony\Component\Mailer\Messenger\SendEmailMessage" type="collection">
            <argument type="collection">
              <argument>mailer.messenger.message_handler</argument>
              <argument type="collection"/>
            </argument>
          </argument>
          <argument key="Symfony\Component\Messenger\Message\RedispatchMessage" type="collection">
            <argument type="collection">
              <argument>messenger.redispatch_message_handler</argument>
              <argument type="collection"/>
            </argument>
          </argument>
          <argument key="Symfony\Component\Notifier\Message\ChatMessage" type="collection">
            <argument type="collection">
              <argument>chatter.messenger.chat_handler</argument>
              <argument type="collection"/>
            </argument>
          </argument>
          <argument key="Symfony\Component\Notifier\Message\SmsMessage" type="collection">
            <argument type="collection">
              <argument>texter.messenger.sms_handler</argument>
              <argument type="collection"/>
            </argument>
          </argument>
          <argument key="Symfony\Component\Notifier\Message\PushMessage" type="collection">
            <argument type="collection">
              <argument>texter.messenger.push_handler</argument>
              <argument type="collection"/>
            </argument>
          </argument>
        </argument>
      </argument>
      <call method="setName">
        <argument>debug:messenger</argument>
      </call>
      <call method="setDescription">
        <argument>List messages you can dispatch using the message buses</argument>
      </call>
    </service>
    <service id="console.command.messenger_stop_workers" class="Symfony\Component\Messenger\Command\StopWorkersCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="cache.messenger.restart_workers_signal"/>
      <call method="setName">
        <argument>messenger:stop-workers</argument>
      </call>
      <call method="setDescription">
        <argument>Stop workers after their current message</argument>
      </call>
    </service>
    <service id="console.command.messenger_failed_messages_retry" class="Symfony\Component\Messenger\Command\FailedMessagesRetryCommand">
      <tag name="console.command"/>
      <tag name="monolog.logger" channel="messenger"/>
      <tag name="container.no_preload"/>
      <argument>failed</argument>
      <argument type="service" id=".service_locator.Y4J.A.e"/>
      <argument type="service" id="messenger.routable_message_bus"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="monolog.logger.messenger" on-invalid="null"/>
      <argument type="service" id="messenger.transport.native_php_serializer" on-invalid="null"/>
      <argument>null</argument>
      <call method="setName">
        <argument>messenger:failed:retry</argument>
      </call>
      <call method="setDescription">
        <argument>Retry one or more messages from the failure transport</argument>
      </call>
    </service>
    <service id="console.command.messenger_failed_messages_show" class="Symfony\Component\Messenger\Command\FailedMessagesShowCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument>failed</argument>
      <argument type="service" id=".service_locator.Y4J.A.e"/>
      <argument type="service" id="messenger.transport.native_php_serializer" on-invalid="null"/>
      <call method="setName">
        <argument>messenger:failed:show</argument>
      </call>
      <call method="setDescription">
        <argument>Show one or more messages from the failure transport</argument>
      </call>
    </service>
    <service id="console.command.messenger_failed_messages_remove" class="Symfony\Component\Messenger\Command\FailedMessagesRemoveCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument>failed</argument>
      <argument type="service" id=".service_locator.Y4J.A.e"/>
      <argument type="service" id="messenger.transport.native_php_serializer" on-invalid="null"/>
      <call method="setName">
        <argument>messenger:failed:remove</argument>
      </call>
      <call method="setDescription">
        <argument>Remove given messages from the failure transport</argument>
      </call>
    </service>
    <service id="console.command.messenger_stats" class="Symfony\Component\Messenger\Command\StatsCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="messenger.receiver_locator"/>
      <argument type="collection">
        <argument>async</argument>
        <argument>failed</argument>
      </argument>
      <call method="setName">
        <argument>messenger:stats</argument>
      </call>
      <call method="setDescription">
        <argument>Show the message count for one or more transports</argument>
      </call>
    </service>
    <service id="console.command.router_debug" class="Symfony\Bundle\FrameworkBundle\Command\RouterDebugCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="debug.file_link_formatter" on-invalid="null"/>
      <call method="setName">
        <argument>debug:router</argument>
      </call>
      <call method="setDescription">
        <argument>Display current routes for an application</argument>
      </call>
    </service>
    <service id="console.command.router_match" class="Symfony\Bundle\FrameworkBundle\Command\RouterMatchCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="router.default"/>
      <argument type="tagged_iterator" tag="routing.expression_language_provider"/>
      <call method="setName">
        <argument>router:match</argument>
      </call>
      <call method="setDescription">
        <argument>Help debug routes by simulating a path info match</argument>
      </call>
    </service>
    <service id="console.command.serializer_debug" class="Symfony\Component\Serializer\Command\DebugCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="serializer.mapping.class_metadata_factory"/>
      <call method="setName">
        <argument>debug:serializer</argument>
      </call>
      <call method="setDescription">
        <argument>Display serialization information for classes</argument>
      </call>
    </service>
    <service id="console.command.translation_debug" class="Symfony\Bundle\FrameworkBundle\Command\TranslationDebugCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="translator.data_collector"/>
      <argument type="service" id="translation.reader"/>
      <argument type="service" id="translation.extractor"/>
      <argument>/var/www/project/translations</argument>
      <argument>/var/www/project/templates</argument>
      <argument type="collection">
        <argument>/var/www/project/vendor/symfony/validator/Resources/translations</argument>
        <argument>/var/www/project/vendor/symfony/form/Resources/translations</argument>
        <argument>/var/www/project/vendor/symfony/security-core/Resources/translations</argument>
        <argument>/var/www/project/vendor/sonata-project/twig-extensions/src/Bridge/Symfony/Resources/translations</argument>
        <argument>/var/www/project/vendor/sonata-project/form-extensions/src/Bridge/Symfony/Resources/translations</argument>
        <argument>/var/www/project/vendor/sonata-project/block-bundle/src/Resources/translations</argument>
        <argument>/var/www/project/vendor/sonata-project/admin-bundle/src/Resources/translations</argument>
      </argument>
      <argument type="collection">
        <argument>/var/www/project/vendor/knplabs/knp-menu/src/Knp/Menu/Resources/views</argument>
        <argument>/var/www/project/vendor/symfony/twig-bridge/Resources/views/Email</argument>
        <argument>/var/www/project/vendor/symfony/twig-bridge/Resources/views/Form</argument>
      </argument>
      <argument type="collection"/>
      <call method="setName">
        <argument>debug:translation</argument>
      </call>
      <call method="setDescription">
        <argument>Display translation messages information</argument>
      </call>
    </service>
    <service id="console.command.translation_extract" class="Symfony\Bundle\FrameworkBundle\Command\TranslationUpdateCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="translation.writer"/>
      <argument type="service" id="translation.reader"/>
      <argument type="service" id="translation.extractor"/>
      <argument>en</argument>
      <argument>/var/www/project/translations</argument>
      <argument>/var/www/project/templates</argument>
      <argument type="collection">
        <argument>/var/www/project/vendor/symfony/validator/Resources/translations</argument>
        <argument>/var/www/project/vendor/symfony/form/Resources/translations</argument>
        <argument>/var/www/project/vendor/symfony/security-core/Resources/translations</argument>
        <argument>/var/www/project/vendor/sonata-project/twig-extensions/src/Bridge/Symfony/Resources/translations</argument>
        <argument>/var/www/project/vendor/sonata-project/form-extensions/src/Bridge/Symfony/Resources/translations</argument>
        <argument>/var/www/project/vendor/sonata-project/block-bundle/src/Resources/translations</argument>
        <argument>/var/www/project/vendor/sonata-project/admin-bundle/src/Resources/translations</argument>
      </argument>
      <argument type="collection">
        <argument>/var/www/project/vendor/knplabs/knp-menu/src/Knp/Menu/Resources/views</argument>
        <argument>/var/www/project/vendor/symfony/twig-bridge/Resources/views/Email</argument>
        <argument>/var/www/project/vendor/symfony/twig-bridge/Resources/views/Form</argument>
      </argument>
      <argument type="collection"/>
      <call method="setName">
        <argument>translation:extract</argument>
      </call>
      <call method="setDescription">
        <argument>Extract missing translations keys from code to translation files</argument>
      </call>
    </service>
    <service id="console.command.validator_debug" class="Symfony\Component\Validator\Command\DebugCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="debug.validator"/>
      <call method="setName">
        <argument>debug:validator</argument>
      </call>
      <call method="setDescription">
        <argument>Display validation constraints for classes</argument>
      </call>
    </service>
    <service id="console.command.translation_pull" class="Symfony\Component\Translation\Command\TranslationPullCommand">
      <tag name="console.command" command="translation:pull"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="translation.provider_collection"/>
      <argument type="service" id="translation.writer"/>
      <argument type="service" id="translation.reader"/>
      <argument>en</argument>
      <argument type="collection"/>
      <argument type="collection"/>
      <call method="setName">
        <argument>translation:pull</argument>
      </call>
      <call method="setDescription">
        <argument>Pull translations from a given provider.</argument>
      </call>
    </service>
    <service id="console.command.translation_push" class="Symfony\Component\Translation\Command\TranslationPushCommand">
      <tag name="console.command" command="translation:push"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="translation.provider_collection"/>
      <argument type="service" id="translation.reader"/>
      <argument type="collection"/>
      <argument type="collection"/>
      <call method="setName">
        <argument>translation:push</argument>
      </call>
      <call method="setDescription">
        <argument>Push translations to a given provider.</argument>
      </call>
    </service>
    <service id="console.command.xliff_lint" class="Symfony\Component\Translation\Command\XliffLintCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>lint:xliff</argument>
      </call>
      <call method="setDescription">
        <argument>Lint an XLIFF file and outputs encountered errors</argument>
      </call>
    </service>
    <service id="console.command.yaml_lint" class="Symfony\Bundle\FrameworkBundle\Command\YamlLintCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>lint:yaml</argument>
      </call>
      <call method="setDescription">
        <argument>Lint a YAML file and outputs encountered errors</argument>
      </call>
    </service>
    <service id="console.command.form_debug" class="Symfony\Component\Form\Command\DebugCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="form.registry"/>
      <argument type="collection">
        <argument>Symfony\Component\Form\Extension\Core\Type</argument>
        <argument>Symfony\Bridge\Doctrine\Form\Type</argument>
        <argument>Sonata\Form\Type</argument>
        <argument>Sonata\BlockBundle\Form\Type</argument>
        <argument>Sonata\AdminBundle\Form\Type</argument>
        <argument>Sonata\AdminBundle\Form\Type\Filter</argument>
      </argument>
      <argument type="collection">
        <argument>Symfony\Component\Form\Extension\Core\Type\FormType</argument>
        <argument>Symfony\Component\Form\Extension\Core\Type\ChoiceType</argument>
        <argument>Symfony\Component\Form\Extension\Core\Type\FileType</argument>
        <argument>Symfony\Component\Form\Extension\Core\Type\ColorType</argument>
        <argument>Symfony\Bridge\Doctrine\Form\Type\EntityType</argument>
        <argument>Sonata\Form\Type\ImmutableArrayType</argument>
        <argument>Sonata\Form\Type\BooleanType</argument>
        <argument>Sonata\Form\Type\CollectionType</argument>
        <argument>Sonata\Form\Type\DateRangeType</argument>
        <argument>Sonata\Form\Type\DateTimeRangeType</argument>
        <argument>Sonata\Form\Type\DatePickerType</argument>
        <argument>Sonata\Form\Type\DateTimePickerType</argument>
        <argument>Sonata\Form\Type\DateRangePickerType</argument>
        <argument>Sonata\Form\Type\DateTimeRangePickerType</argument>
        <argument>Sonata\BlockBundle\Form\Type\ServiceListType</argument>
        <argument>Sonata\BlockBundle\Form\Type\ContainerTemplateType</argument>
        <argument>Sonata\AdminBundle\Form\Type\AdminType</argument>
        <argument>Sonata\AdminBundle\Form\Type\ModelType</argument>
        <argument>Sonata\AdminBundle\Form\Type\ModelListType</argument>
        <argument>Sonata\AdminBundle\Form\Type\ModelReferenceType</argument>
        <argument>Sonata\AdminBundle\Form\Type\ModelHiddenType</argument>
        <argument>Sonata\AdminBundle\Form\Type\ModelAutocompleteType</argument>
        <argument>Sonata\AdminBundle\Form\Type\CollectionType</argument>
        <argument>Sonata\AdminBundle\Form\Type\ChoiceFieldMaskType</argument>
        <argument>Sonata\AdminBundle\Form\Type\Filter\NumberType</argument>
        <argument>Sonata\AdminBundle\Form\Type\Filter\ChoiceType</argument>
        <argument>Sonata\AdminBundle\Form\Type\Filter\DefaultType</argument>
        <argument>Sonata\AdminBundle\Form\Type\Filter\DateType</argument>
        <argument>Sonata\AdminBundle\Form\Type\Filter\DateRangeType</argument>
        <argument>Sonata\AdminBundle\Form\Type\Filter\DateTimeType</argument>
        <argument>Sonata\AdminBundle\Form\Type\Filter\DateTimeRangeType</argument>
      </argument>
      <argument type="collection">
        <argument>Symfony\Component\Form\Extension\Core\Type\TransformationFailureExtension</argument>
        <argument>Symfony\Component\Form\Extension\HttpFoundation\Type\FormTypeHttpFoundationExtension</argument>
        <argument>Symfony\Component\Form\Extension\Validator\Type\FormTypeValidatorExtension</argument>
        <argument>Symfony\Component\Form\Extension\Validator\Type\RepeatedTypeValidatorExtension</argument>
        <argument>Symfony\Component\Form\Extension\Validator\Type\SubmitTypeValidatorExtension</argument>
        <argument>Symfony\Component\Form\Extension\Validator\Type\UploadValidatorExtension</argument>
        <argument>Symfony\Component\Form\Extension\Csrf\Type\FormTypeCsrfExtension</argument>
        <argument>Symfony\Component\Form\Extension\DataCollector\Type\DataCollectorTypeExtension</argument>
        <argument>Symfony\Component\Form\Extension\PasswordHasher\Type\FormTypePasswordHasherExtension</argument>
        <argument>Symfony\Component\Form\Extension\PasswordHasher\Type\PasswordTypePasswordHasherExtension</argument>
        <argument>Sonata\AdminBundle\Form\Extension\Field\Type\FormTypeFieldExtension</argument>
        <argument>Sonata\AdminBundle\Form\Extension\Field\Type\MopaCompatibilityTypeFieldExtension</argument>
        <argument>Sonata\AdminBundle\Form\Extension\ChoiceTypeExtension</argument>
      </argument>
      <argument type="collection">
        <argument>Symfony\Component\Form\Extension\Validator\ValidatorTypeGuesser</argument>
        <argument>Symfony\Bridge\Doctrine\Form\DoctrineOrmTypeGuesser</argument>
      </argument>
      <argument type="service" id="debug.file_link_formatter" on-invalid="null"/>
      <call method="setName">
        <argument>debug:form</argument>
      </call>
      <call method="setDescription">
        <argument>Display form type information</argument>
      </call>
    </service>
    <service id="console.command.secrets_set" class="Symfony\Bundle\FrameworkBundle\Command\SecretsSetCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="null"/>
      <call method="setName">
        <argument>secrets:set</argument>
      </call>
      <call method="setDescription">
        <argument>Set a secret in the vault</argument>
      </call>
    </service>
    <service id="console.command.secrets_remove" class="Symfony\Bundle\FrameworkBundle\Command\SecretsRemoveCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="null"/>
      <call method="setName">
        <argument>secrets:remove</argument>
      </call>
      <call method="setDescription">
        <argument>Remove a secret from the vault</argument>
      </call>
    </service>
    <service id="console.command.secrets_generate_key" class="Symfony\Bundle\FrameworkBundle\Command\SecretsGenerateKeysCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="ignore"/>
      <call method="setName">
        <argument>secrets:generate-keys</argument>
      </call>
      <call method="setDescription">
        <argument>Generate new encryption keys</argument>
      </call>
    </service>
    <service id="console.command.secrets_list" class="Symfony\Bundle\FrameworkBundle\Command\SecretsListCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="ignore"/>
      <call method="setName">
        <argument>secrets:list</argument>
      </call>
      <call method="setDescription">
        <argument>List all secrets</argument>
      </call>
    </service>
    <service id="console.command.secrets_decrypt_to_local" class="Symfony\Bundle\FrameworkBundle\Command\SecretsDecryptToLocalCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="ignore"/>
      <call method="setName">
        <argument>secrets:decrypt-to-local</argument>
      </call>
      <call method="setDescription">
        <argument>Decrypt all secrets and stores them in the local vault</argument>
      </call>
    </service>
    <service id="console.command.secrets_encrypt_from_local" class="Symfony\Bundle\FrameworkBundle\Command\SecretsEncryptFromLocalCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="ignore"/>
      <call method="setName">
        <argument>secrets:encrypt-from-local</argument>
      </call>
      <call method="setDescription">
        <argument>Encrypt all local secrets to the vault</argument>
      </call>
    </service>
    <service id="console.messenger.application" class="Symfony\Bundle\FrameworkBundle\Console\Application" shared="false">
      <argument type="service" id="kernel"/>
      <call method="setAutoExit">
        <argument>false</argument>
      </call>
    </service>
    <service id="console.messenger.execute_command_handler" class="Symfony\Component\Console\Messenger\RunCommandMessageHandler">
      <tag name="messenger.message_handler"/>
      <argument type="service" id="console.messenger.application"/>
    </service>
    <service id="cache.app" class="Symfony\Component\Cache\Adapter\TraceableAdapter" public="true">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="cache.app.recorder_inner"/>
    </service>
    <service id="cache.app.taggable" class="Symfony\Component\Cache\Adapter\TagAwareAdapter">
      <tag name="cache.taggable" pool="cache.app"/>
      <argument type="service" id="cache.app"/>
    </service>
    <service id="cache.system" class="Symfony\Component\Cache\Adapter\TraceableAdapter" public="true">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="cache.system.recorder_inner"/>
    </service>
    <service id="cache.validator" class="Symfony\Component\Cache\Adapter\TraceableAdapter">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="cache.validator.recorder_inner"/>
    </service>
    <service id="cache.serializer" class="Symfony\Component\Cache\Adapter\TraceableAdapter">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="cache.serializer.recorder_inner"/>
    </service>
    <service id="cache.annotations" class="Symfony\Component\Cache\Adapter\TraceableAdapter">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="cache.annotations.recorder_inner"/>
    </service>
    <service id="cache.property_info" class="Symfony\Component\Cache\Adapter\TraceableAdapter">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="cache.property_info.recorder_inner"/>
    </service>
    <service id="cache.messenger.restart_workers_signal" class="Symfony\Component\Cache\Adapter\TraceableAdapter">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="cache.messenger.restart_workers_signal.recorder_inner"/>
    </service>
    <service id="cache.adapter.system" class="Symfony\Component\Cache\Adapter\AdapterInterface" abstract="true">
      <tag name="cache.pool" clearer="cache.system_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/var/www/project/var/cache/test/pools/system</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.adapter.apcu" class="Symfony\Component\Cache\Adapter\ApcuAdapter" abstract="true">
      <tag name="cache.pool" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.filesystem" class="Symfony\Component\Cache\Adapter\FilesystemAdapter" abstract="true">
      <tag name="cache.pool" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument>0</argument>
      <argument>/var/www/project/var/cache/test/pools/app</argument>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.psr6" class="Symfony\Component\Cache\Adapter\ProxyAdapter" abstract="true">
      <tag name="cache.pool" provider="cache.default_psr6_provider" clearer="cache.default_clearer" reset="reset"/>
      <argument type="abstract">PSR-6 provider service</argument>
      <argument></argument>
      <argument>0</argument>
    </service>
    <service id="cache.adapter.redis" class="Symfony\Component\Cache\Adapter\RedisAdapter" abstract="true">
      <tag name="cache.pool" provider="cache.default_redis_provider" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument type="abstract">Redis connection service</argument>
      <argument></argument>
      <argument>0</argument>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.redis_tag_aware" class="Symfony\Component\Cache\Adapter\RedisTagAwareAdapter" abstract="true">
      <tag name="cache.pool" provider="cache.default_redis_provider" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument type="abstract">Redis connection service</argument>
      <argument></argument>
      <argument>0</argument>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.memcached" class="Symfony\Component\Cache\Adapter\MemcachedAdapter" abstract="true">
      <tag name="cache.pool" provider="cache.default_memcached_provider" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument type="abstract">Memcached connection service</argument>
      <argument></argument>
      <argument>0</argument>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.doctrine_dbal" class="Symfony\Component\Cache\Adapter\DoctrineDbalAdapter" abstract="true">
      <tag name="cache.pool" provider="cache.default_doctrine_dbal_provider" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument type="abstract">DBAL connection service</argument>
      <argument></argument>
      <argument>0</argument>
      <argument type="collection"/>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.pdo" class="Symfony\Component\Cache\Adapter\PdoAdapter" abstract="true">
      <tag name="cache.pool" provider="cache.default_pdo_provider" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument type="abstract">PDO connection service</argument>
      <argument></argument>
      <argument>0</argument>
      <argument type="collection"/>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.array" class="Symfony\Component\Cache\Adapter\ArrayAdapter" abstract="true">
      <tag name="cache.pool" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument>0</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.default_marshaller" class="Symfony\Component\Cache\Marshaller\DefaultMarshaller">
      <argument>null</argument>
      <argument>true</argument>
    </service>
    <service id="cache.default_clearer" class="Symfony\Component\HttpKernel\CacheClearer\Psr6CacheClearer">
      <tag name="cache.pool.clearer"/>
      <argument type="collection">
        <argument key="cache.app" type="service" id="cache.app" on-invalid="ignore_uninitialized"/>
        <argument key="cache.messenger.restart_workers_signal" type="service" id="cache.messenger.restart_workers_signal" on-invalid="ignore_uninitialized"/>
      </argument>
    </service>
    <service id="cache.system_clearer" class="Symfony\Component\HttpKernel\CacheClearer\Psr6CacheClearer" public="true">
      <tag name="cache.pool.clearer"/>
      <tag name="kernel.cache_clearer"/>
      <argument type="collection">
        <argument key="cache.system" type="service" id="cache.system" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator" type="service" id="cache.validator" on-invalid="ignore_uninitialized"/>
        <argument key="cache.serializer" type="service" id="cache.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="cache.annotations" type="service" id="cache.annotations" on-invalid="ignore_uninitialized"/>
        <argument key="cache.property_info" type="service" id="cache.property_info" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator_expression_language" type="service" id="cache.validator_expression_language" on-invalid="ignore_uninitialized"/>
        <argument key="cache.security_expression_language" type="service" id="cache.security_expression_language" on-invalid="ignore_uninitialized"/>
        <argument key="cache.security_is_granted_attribute_expression_language" type="service" id="cache.security_is_granted_attribute_expression_language" on-invalid="ignore_uninitialized"/>
      </argument>
    </service>
    <service id="cache.global_clearer" class="Symfony\Component\HttpKernel\CacheClearer\Psr6CacheClearer" public="true">
      <tag name="cache.pool.clearer"/>
      <argument type="collection">
        <argument key="cache.app" type="service" id="cache.app" on-invalid="ignore_uninitialized"/>
        <argument key="cache.system" type="service" id="cache.system" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator" type="service" id="cache.validator" on-invalid="ignore_uninitialized"/>
        <argument key="cache.serializer" type="service" id="cache.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="cache.annotations" type="service" id="cache.annotations" on-invalid="ignore_uninitialized"/>
        <argument key="cache.property_info" type="service" id="cache.property_info" on-invalid="ignore_uninitialized"/>
        <argument key="cache.messenger.restart_workers_signal" type="service" id="cache.messenger.restart_workers_signal" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator_expression_language" type="service" id="cache.validator_expression_language" on-invalid="ignore_uninitialized"/>
        <argument key="cache.doctrine.orm.default.result" type="service" id="cache.doctrine.orm.default.result" on-invalid="ignore_uninitialized"/>
        <argument key="cache.doctrine.orm.default.query" type="service" id="cache.doctrine.orm.default.query" on-invalid="ignore_uninitialized"/>
        <argument key="cache.security_expression_language" type="service" id="cache.security_expression_language" on-invalid="ignore_uninitialized"/>
        <argument key="cache.security_is_granted_attribute_expression_language" type="service" id="cache.security_is_granted_attribute_expression_language" on-invalid="ignore_uninitialized"/>
      </argument>
    </service>
    <service id="identity_translator" class="Symfony\Component\Translation\IdentityTranslator"/>
    <service id="test.client" class="Symfony\Bundle\FrameworkBundle\KernelBrowser" shared="false" public="true">
      <argument type="service" id="kernel"/>
      <argument type="collection"/>
      <argument type="service" id="test.client.history"/>
      <argument type="service" id="test.client.cookiejar"/>
    </service>
    <service id="test.client.history" class="Symfony\Component\BrowserKit\History" shared="false"/>
    <service id="test.client.cookiejar" class="Symfony\Component\BrowserKit\CookieJar" shared="false"/>
    <service id="test.session.listener" class="Symfony\Component\HttpKernel\EventListener\SessionListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id=".service_locator.AQBflHD"/>
      <argument>true</argument>
      <argument>%session.storage.options%</argument>
    </service>
    <service id="test.service_container" class="Symfony\Bundle\FrameworkBundle\Test\TestContainer" public="true">
      <argument type="service" id="kernel"/>
      <argument>test.private_services_locator</argument>
    </service>
    <service id="test.private_services_locator" class="Symfony\Component\DependencyInjection\ServiceLocator" public="true">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="App\Admin\CallbackAdmin" type="service_closure" id="App\Admin\CallbackAdmin" on-invalid="ignore_uninitialized"/>
        <argument key="App\Admin\InvoiceAdmin" type="service_closure" id="App\Admin\InvoiceAdmin" on-invalid="ignore_uninitialized"/>
        <argument key="App\DTO\CallbackDTO" type="service_closure" id="App\DTO\CallbackDTO" on-invalid="ignore_uninitialized"/>
        <argument key="App\DTO\InvoiceDTO" type="service_closure" id="App\DTO\InvoiceDTO" on-invalid="ignore_uninitialized"/>
        <argument key="App\Repository\CallbackRepository" type="service_closure" id="App\Repository\CallbackRepository" on-invalid="ignore_uninitialized"/>
        <argument key="App\Repository\InvoiceRepository" type="service_closure" id="App\Repository\InvoiceRepository" on-invalid="ignore_uninitialized"/>
        <argument key="App\Service\Payment\Callback\CallbackAction" type="service_closure" id="App\Service\Payment\Callback\CallbackAction" on-invalid="ignore_uninitialized"/>
        <argument key="App\Service\Payment\Invoice\CreateInvoiceAction" type="service_closure" id="App\Service\Payment\Invoice\CreateInvoiceAction" on-invalid="ignore_uninitialized"/>
        <argument key="App\Service\Payment\Invoice\InvoiceFactory" type="service_closure" id="App\Service\Payment\Invoice\InvoiceFactory" on-invalid="ignore_uninitialized"/>
        <argument key="App\Service\Payment\Invoice\Mock\Response\AmountRequiredFailResponseResponseMock" type="service_closure" id="App\Service\Payment\Invoice\Mock\Response\AmountRequiredFailResponseResponseMock" on-invalid="ignore_uninitialized"/>
        <argument key="App\Service\Payment\Invoice\Mock\Response\InvalidSignatureResponseResponseMock" type="service_closure" id="App\Service\Payment\Invoice\Mock\Response\InvalidSignatureResponseResponseMock" on-invalid="ignore_uninitialized"/>
        <argument key="App\Service\Payment\Invoice\Mock\Response\SuccessResponseResponseMock" type="service_closure" id="App\Service\Payment\Invoice\Mock\Response\SuccessResponseResponseMock" on-invalid="ignore_uninitialized"/>
        <argument key="App\Service\Payment\SignatureService" type="service_closure" id="App\Service\Payment\SignatureService" on-invalid="ignore_uninitialized"/>
        <argument key="admin.callback" type="service_closure" id="admin.callback" on-invalid="ignore_uninitialized"/>
        <argument key="admin.invoice" type="service_closure" id="admin.invoice" on-invalid="ignore_uninitialized"/>
        <argument key="argument_metadata_factory" type="service_closure" id="argument_metadata_factory" on-invalid="ignore_uninitialized"/>
        <argument key="argument_resolver.backed_enum_resolver" type="service_closure" id="argument_resolver.backed_enum_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="argument_resolver.datetime" type="service_closure" id="argument_resolver.datetime" on-invalid="ignore_uninitialized"/>
        <argument key="argument_resolver.request_payload" type="service_closure" id="argument_resolver.request_payload" on-invalid="ignore_uninitialized"/>
        <argument key="argument_resolver.request_attribute" type="service_closure" id="argument_resolver.request_attribute" on-invalid="ignore_uninitialized"/>
        <argument key="argument_resolver.request" type="service_closure" id="argument_resolver.request" on-invalid="ignore_uninitialized"/>
        <argument key="argument_resolver.session" type="service_closure" id="argument_resolver.session" on-invalid="ignore_uninitialized"/>
        <argument key="argument_resolver.service" type="service_closure" id="argument_resolver.service" on-invalid="ignore_uninitialized"/>
        <argument key="argument_resolver.default" type="service_closure" id="argument_resolver.default" on-invalid="ignore_uninitialized"/>
        <argument key="argument_resolver.variadic" type="service_closure" id="argument_resolver.variadic" on-invalid="ignore_uninitialized"/>
        <argument key="argument_resolver.query_parameter_value_resolver" type="service_closure" id="argument_resolver.query_parameter_value_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="response_listener" type="service_closure" id="response_listener" on-invalid="ignore_uninitialized"/>
        <argument key="locale_listener" type="service_closure" id="locale_listener" on-invalid="ignore_uninitialized"/>
        <argument key="validate_request_listener" type="service_closure" id="validate_request_listener" on-invalid="ignore_uninitialized"/>
        <argument key="disallow_search_engine_index_response_listener" type="service_closure" id="disallow_search_engine_index_response_listener" on-invalid="ignore_uninitialized"/>
        <argument key="exception_listener" type="service_closure" id="exception_listener" on-invalid="ignore_uninitialized"/>
        <argument key="controller.cache_attribute_listener" type="service_closure" id="controller.cache_attribute_listener" on-invalid="ignore_uninitialized"/>
        <argument key="parameter_bag" type="service_closure" id="parameter_bag" on-invalid="ignore_uninitialized"/>
        <argument key="http_cache" type="service_closure" id="http_cache" on-invalid="ignore_uninitialized"/>
        <argument key="http_cache.store" type="service_closure" id="http_cache.store" on-invalid="ignore_uninitialized"/>
        <argument key="url_helper" type="service_closure" id="url_helper" on-invalid="ignore_uninitialized"/>
        <argument key="cache_clearer" type="service_closure" id="cache_clearer" on-invalid="ignore_uninitialized"/>
        <argument key="filesystem" type="service_closure" id="filesystem" on-invalid="ignore_uninitialized"/>
        <argument key="file_locator" type="service_closure" id="file_locator" on-invalid="ignore_uninitialized"/>
        <argument key="uri_signer" type="service_closure" id="uri_signer" on-invalid="ignore_uninitialized"/>
        <argument key="config_cache_factory" type="service_closure" id="config_cache_factory" on-invalid="ignore_uninitialized"/>
        <argument key="dependency_injection.config.container_parameters_resource_checker" type="service_closure" id="dependency_injection.config.container_parameters_resource_checker" on-invalid="ignore_uninitialized"/>
        <argument key="config.resource.self_checking_resource_checker" type="service_closure" id="config.resource.self_checking_resource_checker" on-invalid="ignore_uninitialized"/>
        <argument key="reverse_container" type="service_closure" id="reverse_container" on-invalid="ignore_uninitialized"/>
        <argument key="locale_aware_listener" type="service_closure" id="locale_aware_listener" on-invalid="ignore_uninitialized"/>
        <argument key="container.env_var_processor" type="service_closure" id="container.env_var_processor" on-invalid="ignore_uninitialized"/>
        <argument key="slugger" type="service_closure" id="slugger" on-invalid="ignore_uninitialized"/>
        <argument key="container.getenv" type="service_closure" id="container.getenv" on-invalid="ignore_uninitialized"/>
        <argument key="config_builder.warmer" type="service_closure" id="config_builder.warmer" on-invalid="ignore_uninitialized"/>
        <argument key="clock" type="service_closure" id="clock" on-invalid="ignore_uninitialized"/>
        <argument key="fragment.handler" type="service_closure" id="fragment.handler" on-invalid="ignore_uninitialized"/>
        <argument key="fragment.uri_generator" type="service_closure" id="fragment.uri_generator" on-invalid="ignore_uninitialized"/>
        <argument key="fragment.renderer.inline" type="service_closure" id="fragment.renderer.inline" on-invalid="ignore_uninitialized"/>
        <argument key="error_handler.error_renderer.html" type="service_closure" id="error_handler.error_renderer.html" on-invalid="ignore_uninitialized"/>
        <argument key="process.messenger.process_message_handler" type="service_closure" id="process.messenger.process_message_handler" on-invalid="ignore_uninitialized"/>
        <argument key="console.error_listener" type="service_closure" id="console.error_listener" on-invalid="ignore_uninitialized"/>
        <argument key="console.suggest_missing_package_subscriber" type="service_closure" id="console.suggest_missing_package_subscriber" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.about" type="service_closure" id="console.command.about" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.assets_install" type="service_closure" id="console.command.assets_install" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.cache_clear" type="service_closure" id="console.command.cache_clear" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.cache_pool_clear" type="service_closure" id="console.command.cache_pool_clear" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.cache_pool_prune" type="service_closure" id="console.command.cache_pool_prune" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.cache_pool_invalidate_tags" type="service_closure" id="console.command.cache_pool_invalidate_tags" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.cache_pool_delete" type="service_closure" id="console.command.cache_pool_delete" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.cache_pool_list" type="service_closure" id="console.command.cache_pool_list" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.cache_warmup" type="service_closure" id="console.command.cache_warmup" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.config_debug" type="service_closure" id="console.command.config_debug" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.config_dump_reference" type="service_closure" id="console.command.config_dump_reference" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.container_debug" type="service_closure" id="console.command.container_debug" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.container_lint" type="service_closure" id="console.command.container_lint" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.debug_autowiring" type="service_closure" id="console.command.debug_autowiring" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.dotenv_debug" type="service_closure" id="console.command.dotenv_debug" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.event_dispatcher_debug" type="service_closure" id="console.command.event_dispatcher_debug" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.messenger_consume_messages" type="service_closure" id="console.command.messenger_consume_messages" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.messenger_setup_transports" type="service_closure" id="console.command.messenger_setup_transports" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.messenger_debug" type="service_closure" id="console.command.messenger_debug" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.messenger_stop_workers" type="service_closure" id="console.command.messenger_stop_workers" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.messenger_failed_messages_retry" type="service_closure" id="console.command.messenger_failed_messages_retry" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.messenger_failed_messages_show" type="service_closure" id="console.command.messenger_failed_messages_show" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.messenger_failed_messages_remove" type="service_closure" id="console.command.messenger_failed_messages_remove" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.messenger_stats" type="service_closure" id="console.command.messenger_stats" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.router_debug" type="service_closure" id="console.command.router_debug" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.router_match" type="service_closure" id="console.command.router_match" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.serializer_debug" type="service_closure" id="console.command.serializer_debug" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.translation_debug" type="service_closure" id="console.command.translation_debug" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.translation_extract" type="service_closure" id="console.command.translation_extract" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.validator_debug" type="service_closure" id="console.command.validator_debug" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.translation_pull" type="service_closure" id="console.command.translation_pull" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.translation_push" type="service_closure" id="console.command.translation_push" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.xliff_lint" type="service_closure" id="console.command.xliff_lint" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.yaml_lint" type="service_closure" id="console.command.yaml_lint" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.form_debug" type="service_closure" id="console.command.form_debug" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.secrets_set" type="service_closure" id="console.command.secrets_set" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.secrets_remove" type="service_closure" id="console.command.secrets_remove" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.secrets_generate_key" type="service_closure" id="console.command.secrets_generate_key" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.secrets_list" type="service_closure" id="console.command.secrets_list" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.secrets_decrypt_to_local" type="service_closure" id="console.command.secrets_decrypt_to_local" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.secrets_encrypt_from_local" type="service_closure" id="console.command.secrets_encrypt_from_local" on-invalid="ignore_uninitialized"/>
        <argument key="console.messenger.application" type="service_closure" id="console.messenger.application" on-invalid="ignore_uninitialized"/>
        <argument key="console.messenger.execute_command_handler" type="service_closure" id="console.messenger.execute_command_handler" on-invalid="ignore_uninitialized"/>
        <argument key="cache.app.taggable" type="service_closure" id="cache.app.taggable" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator" type="service_closure" id="cache.validator" on-invalid="ignore_uninitialized"/>
        <argument key="cache.serializer" type="service_closure" id="cache.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="cache.annotations" type="service_closure" id="cache.annotations" on-invalid="ignore_uninitialized"/>
        <argument key="cache.property_info" type="service_closure" id="cache.property_info" on-invalid="ignore_uninitialized"/>
        <argument key="cache.messenger.restart_workers_signal" type="service_closure" id="cache.messenger.restart_workers_signal" on-invalid="ignore_uninitialized"/>
        <argument key="cache.default_marshaller" type="service_closure" id="cache.default_marshaller" on-invalid="ignore_uninitialized"/>
        <argument key="cache.default_clearer" type="service_closure" id="cache.default_clearer" on-invalid="ignore_uninitialized"/>
        <argument key="identity_translator" type="service_closure" id="identity_translator" on-invalid="ignore_uninitialized"/>
        <argument key="test.client.history" type="service_closure" id="test.client.history" on-invalid="ignore_uninitialized"/>
        <argument key="test.client.cookiejar" type="service_closure" id="test.client.cookiejar" on-invalid="ignore_uninitialized"/>
        <argument key="test.session.listener" type="service_closure" id="test.session.listener" on-invalid="ignore_uninitialized"/>
        <argument key="assets.packages" type="service_closure" id="assets.packages" on-invalid="ignore_uninitialized"/>
        <argument key="assets.empty_package" type="service_closure" id="assets.empty_package" on-invalid="ignore_uninitialized"/>
        <argument key="assets.context" type="service_closure" id="assets.context" on-invalid="ignore_uninitialized"/>
        <argument key="assets.empty_version_strategy" type="service_closure" id="assets.empty_version_strategy" on-invalid="ignore_uninitialized"/>
        <argument key="assets._default_package" type="service_closure" id="assets._default_package" on-invalid="ignore_uninitialized"/>
        <argument key="http_client.transport" type="service_closure" id="http_client.transport" on-invalid="ignore_uninitialized"/>
        <argument key="http_client.uri_template" type="service_closure" id="http_client.uri_template" on-invalid="ignore_uninitialized"/>
        <argument key="http_client.uri_template_expander.guzzle" type="service_closure" id="http_client.uri_template_expander.guzzle" on-invalid="ignore_uninitialized"/>
        <argument key="http_client.uri_template_expander.rize" type="service_closure" id="http_client.uri_template_expander.rize" on-invalid="ignore_uninitialized"/>
        <argument key="http_client.messenger.ping_webhook_handler" type="service_closure" id="http_client.messenger.ping_webhook_handler" on-invalid="ignore_uninitialized"/>
        <argument key="mailer.mailer" type="service_closure" id="mailer.mailer" on-invalid="ignore_uninitialized"/>
        <argument key="mailer.transports" type="service_closure" id="mailer.transports" on-invalid="ignore_uninitialized"/>
        <argument key="mailer.transport_factory" type="service_closure" id="mailer.transport_factory" on-invalid="ignore_uninitialized"/>
        <argument key="mailer.default_transport" type="service_closure" id="mailer.default_transport" on-invalid="ignore_uninitialized"/>
        <argument key="mailer.messenger.message_handler" type="service_closure" id="mailer.messenger.message_handler" on-invalid="ignore_uninitialized"/>
        <argument key="mailer.envelope_listener" type="service_closure" id="mailer.envelope_listener" on-invalid="ignore_uninitialized"/>
        <argument key="mailer.message_logger_listener" type="service_closure" id="mailer.message_logger_listener" on-invalid="ignore_uninitialized"/>
        <argument key="mailer.messenger_transport_listener" type="service_closure" id="mailer.messenger_transport_listener" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.mailer_test" type="service_closure" id="console.command.mailer_test" on-invalid="ignore_uninitialized"/>
        <argument key="mailer.transport_factory.null" type="service_closure" id="mailer.transport_factory.null" on-invalid="ignore_uninitialized"/>
        <argument key="mailer.transport_factory.sendmail" type="service_closure" id="mailer.transport_factory.sendmail" on-invalid="ignore_uninitialized"/>
        <argument key="mailer.transport_factory.smtp" type="service_closure" id="mailer.transport_factory.smtp" on-invalid="ignore_uninitialized"/>
        <argument key="mailer.transport_factory.native" type="service_closure" id="mailer.transport_factory.native" on-invalid="ignore_uninitialized"/>
        <argument key="translator.default" type="service_closure" id="translator.default" on-invalid="ignore_uninitialized"/>
        <argument key="translator.logging" type="service_closure" id="translator.logging" on-invalid="ignore_uninitialized"/>
        <argument key="translator.formatter.default" type="service_closure" id="translator.formatter.default" on-invalid="ignore_uninitialized"/>
        <argument key="translation.loader.php" type="service_closure" id="translation.loader.php" on-invalid="ignore_uninitialized"/>
        <argument key="translation.loader.yml" type="service_closure" id="translation.loader.yml" on-invalid="ignore_uninitialized"/>
        <argument key="translation.loader.xliff" type="service_closure" id="translation.loader.xliff" on-invalid="ignore_uninitialized"/>
        <argument key="translation.loader.po" type="service_closure" id="translation.loader.po" on-invalid="ignore_uninitialized"/>
        <argument key="translation.loader.mo" type="service_closure" id="translation.loader.mo" on-invalid="ignore_uninitialized"/>
        <argument key="translation.loader.qt" type="service_closure" id="translation.loader.qt" on-invalid="ignore_uninitialized"/>
        <argument key="translation.loader.csv" type="service_closure" id="translation.loader.csv" on-invalid="ignore_uninitialized"/>
        <argument key="translation.loader.res" type="service_closure" id="translation.loader.res" on-invalid="ignore_uninitialized"/>
        <argument key="translation.loader.dat" type="service_closure" id="translation.loader.dat" on-invalid="ignore_uninitialized"/>
        <argument key="translation.loader.ini" type="service_closure" id="translation.loader.ini" on-invalid="ignore_uninitialized"/>
        <argument key="translation.loader.json" type="service_closure" id="translation.loader.json" on-invalid="ignore_uninitialized"/>
        <argument key="translation.dumper.php" type="service_closure" id="translation.dumper.php" on-invalid="ignore_uninitialized"/>
        <argument key="translation.dumper.xliff" type="service_closure" id="translation.dumper.xliff" on-invalid="ignore_uninitialized"/>
        <argument key="translation.dumper.xliff.xliff" type="service_closure" id="translation.dumper.xliff.xliff" on-invalid="ignore_uninitialized"/>
        <argument key="translation.dumper.po" type="service_closure" id="translation.dumper.po" on-invalid="ignore_uninitialized"/>
        <argument key="translation.dumper.mo" type="service_closure" id="translation.dumper.mo" on-invalid="ignore_uninitialized"/>
        <argument key="translation.dumper.yml" type="service_closure" id="translation.dumper.yml" on-invalid="ignore_uninitialized"/>
        <argument key="translation.dumper.yaml" type="service_closure" id="translation.dumper.yaml" on-invalid="ignore_uninitialized"/>
        <argument key="translation.dumper.qt" type="service_closure" id="translation.dumper.qt" on-invalid="ignore_uninitialized"/>
        <argument key="translation.dumper.csv" type="service_closure" id="translation.dumper.csv" on-invalid="ignore_uninitialized"/>
        <argument key="translation.dumper.ini" type="service_closure" id="translation.dumper.ini" on-invalid="ignore_uninitialized"/>
        <argument key="translation.dumper.json" type="service_closure" id="translation.dumper.json" on-invalid="ignore_uninitialized"/>
        <argument key="translation.dumper.res" type="service_closure" id="translation.dumper.res" on-invalid="ignore_uninitialized"/>
        <argument key="translation.extractor.php_ast" type="service_closure" id="translation.extractor.php_ast" on-invalid="ignore_uninitialized"/>
        <argument key="translation.extractor.visitor.trans_method" type="service_closure" id="translation.extractor.visitor.trans_method" on-invalid="ignore_uninitialized"/>
        <argument key="translation.extractor.visitor.translatable_message" type="service_closure" id="translation.extractor.visitor.translatable_message" on-invalid="ignore_uninitialized"/>
        <argument key="translation.extractor.visitor.constraint" type="service_closure" id="translation.extractor.visitor.constraint" on-invalid="ignore_uninitialized"/>
        <argument key="translation.reader" type="service_closure" id="translation.reader" on-invalid="ignore_uninitialized"/>
        <argument key="translation.extractor" type="service_closure" id="translation.extractor" on-invalid="ignore_uninitialized"/>
        <argument key="translation.writer" type="service_closure" id="translation.writer" on-invalid="ignore_uninitialized"/>
        <argument key="translation.warmer" type="service_closure" id="translation.warmer" on-invalid="ignore_uninitialized"/>
        <argument key="translation.locale_switcher" type="service_closure" id="translation.locale_switcher" on-invalid="ignore_uninitialized"/>
        <argument key="translation.provider_collection" type="service_closure" id="translation.provider_collection" on-invalid="ignore_uninitialized"/>
        <argument key="translation.provider_collection_factory" type="service_closure" id="translation.provider_collection_factory" on-invalid="ignore_uninitialized"/>
        <argument key="translation.provider_factory.null" type="service_closure" id="translation.provider_factory.null" on-invalid="ignore_uninitialized"/>
        <argument key="debug.debug_handlers_listener" type="service_closure" id="debug.debug_handlers_listener" on-invalid="ignore_uninitialized"/>
        <argument key="debug.file_link_formatter" type="service_closure" id="debug.file_link_formatter" on-invalid="ignore_uninitialized"/>
        <argument key="debug.event_dispatcher" type="service_closure" id="debug.event_dispatcher" on-invalid="ignore_uninitialized"/>
        <argument key="debug.controller_resolver" type="service_closure" id="debug.controller_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="debug.argument_resolver" type="service_closure" id="debug.argument_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="argument_resolver.not_tagged_controller" type="service_closure" id="argument_resolver.not_tagged_controller" on-invalid="ignore_uninitialized"/>
        <argument key="debug.log_processor" type="service_closure" id="debug.log_processor" on-invalid="ignore_uninitialized"/>
        <argument key="debug.debug_logger_configurator" type="service_closure" id="debug.debug_logger_configurator" on-invalid="ignore_uninitialized"/>
        <argument key="routing.resolver" type="service_closure" id="routing.resolver" on-invalid="ignore_uninitialized"/>
        <argument key="routing.loader.xml" type="service_closure" id="routing.loader.xml" on-invalid="ignore_uninitialized"/>
        <argument key="routing.loader.yml" type="service_closure" id="routing.loader.yml" on-invalid="ignore_uninitialized"/>
        <argument key="routing.loader.php" type="service_closure" id="routing.loader.php" on-invalid="ignore_uninitialized"/>
        <argument key="routing.loader.glob" type="service_closure" id="routing.loader.glob" on-invalid="ignore_uninitialized"/>
        <argument key="routing.loader.directory" type="service_closure" id="routing.loader.directory" on-invalid="ignore_uninitialized"/>
        <argument key="routing.loader.container" type="service_closure" id="routing.loader.container" on-invalid="ignore_uninitialized"/>
        <argument key="routing.loader.attribute" type="service_closure" id="routing.loader.attribute" on-invalid="ignore_uninitialized"/>
        <argument key="routing.loader.attribute.directory" type="service_closure" id="routing.loader.attribute.directory" on-invalid="ignore_uninitialized"/>
        <argument key="routing.loader.attribute.file" type="service_closure" id="routing.loader.attribute.file" on-invalid="ignore_uninitialized"/>
        <argument key="routing.loader.psr4" type="service_closure" id="routing.loader.psr4" on-invalid="ignore_uninitialized"/>
        <argument key="router.default" type="service_closure" id="router.default" on-invalid="ignore_uninitialized"/>
        <argument key="router.request_context" type="service_closure" id="router.request_context" on-invalid="ignore_uninitialized"/>
        <argument key="router.expression_language_provider" type="service_closure" id="router.expression_language_provider" on-invalid="ignore_uninitialized"/>
        <argument key="router.cache_warmer" type="service_closure" id="router.cache_warmer" on-invalid="ignore_uninitialized"/>
        <argument key="router_listener" type="service_closure" id="router_listener" on-invalid="ignore_uninitialized"/>
        <argument key="property_accessor" type="service_closure" id="property_accessor" on-invalid="ignore_uninitialized"/>
        <argument key="secrets.vault" type="service_closure" id="secrets.vault" on-invalid="ignore_uninitialized"/>
        <argument key="secrets.decryption_key" type="service_closure" id="secrets.decryption_key" on-invalid="ignore_uninitialized"/>
        <argument key="secrets.local_vault" type="service_closure" id="secrets.local_vault" on-invalid="ignore_uninitialized"/>
        <argument key="serializer" type="service_closure" id="serializer" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.mapping.class_discriminator_resolver" type="service_closure" id="serializer.mapping.class_discriminator_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.normalizer.constraint_violation_list" type="service_closure" id="serializer.normalizer.constraint_violation_list" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.normalizer.mime_message" type="service_closure" id="serializer.normalizer.mime_message" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.normalizer.datetimezone" type="service_closure" id="serializer.normalizer.datetimezone" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.normalizer.dateinterval" type="service_closure" id="serializer.normalizer.dateinterval" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.normalizer.data_uri" type="service_closure" id="serializer.normalizer.data_uri" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.normalizer.datetime" type="service_closure" id="serializer.normalizer.datetime" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.normalizer.json_serializable" type="service_closure" id="serializer.normalizer.json_serializable" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.normalizer.problem" type="service_closure" id="serializer.normalizer.problem" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.denormalizer.unwrapping" type="service_closure" id="serializer.denormalizer.unwrapping" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.normalizer.uid" type="service_closure" id="serializer.normalizer.uid" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.normalizer.translatable" type="service_closure" id="serializer.normalizer.translatable" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.normalizer.form_error" type="service_closure" id="serializer.normalizer.form_error" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.normalizer.object" type="service_closure" id="serializer.normalizer.object" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.normalizer.property" type="service_closure" id="serializer.normalizer.property" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.denormalizer.array" type="service_closure" id="serializer.denormalizer.array" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.mapping.chain_loader" type="service_closure" id="serializer.mapping.chain_loader" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.mapping.class_metadata_factory" type="service_closure" id="serializer.mapping.class_metadata_factory" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.mapping.cache_warmer" type="service_closure" id="serializer.mapping.cache_warmer" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.mapping.cache.symfony" type="service_closure" id="serializer.mapping.cache.symfony" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.encoder.xml" type="service_closure" id="serializer.encoder.xml" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.encoder.json" type="service_closure" id="serializer.encoder.json" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.encoder.yaml" type="service_closure" id="serializer.encoder.yaml" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.encoder.csv" type="service_closure" id="serializer.encoder.csv" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.name_converter.camel_case_to_snake_case" type="service_closure" id="serializer.name_converter.camel_case_to_snake_case" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.name_converter.metadata_aware" type="service_closure" id="serializer.name_converter.metadata_aware" on-invalid="ignore_uninitialized"/>
        <argument key="property_info.serializer_extractor" type="service_closure" id="property_info.serializer_extractor" on-invalid="ignore_uninitialized"/>
        <argument key="error_handler.error_renderer.serializer" type="service_closure" id="error_handler.error_renderer.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.normalizer.backed_enum" type="service_closure" id="serializer.normalizer.backed_enum" on-invalid="ignore_uninitialized"/>
        <argument key="property_info" type="service_closure" id="property_info" on-invalid="ignore_uninitialized"/>
        <argument key="property_info.reflection_extractor" type="service_closure" id="property_info.reflection_extractor" on-invalid="ignore_uninitialized"/>
        <argument key="property_info.phpstan_extractor" type="service_closure" id="property_info.phpstan_extractor" on-invalid="ignore_uninitialized"/>
        <argument key="property_info.php_doc_extractor" type="service_closure" id="property_info.php_doc_extractor" on-invalid="ignore_uninitialized"/>
        <argument key="web_link.http_header_serializer" type="service_closure" id="web_link.http_header_serializer" on-invalid="ignore_uninitialized"/>
        <argument key="web_link.add_link_header_listener" type="service_closure" id="web_link.add_link_header_listener" on-invalid="ignore_uninitialized"/>
        <argument key="cache.property_access" type="service_closure" id="cache.property_access" on-invalid="ignore_uninitialized"/>
        <argument key="session.factory" type="service_closure" id="session.factory" on-invalid="ignore_uninitialized"/>
        <argument key="session.storage.factory.native" type="service_closure" id="session.storage.factory.native" on-invalid="ignore_uninitialized"/>
        <argument key="session.storage.factory.php_bridge" type="service_closure" id="session.storage.factory.php_bridge" on-invalid="ignore_uninitialized"/>
        <argument key="session.storage.factory.mock_file" type="service_closure" id="session.storage.factory.mock_file" on-invalid="ignore_uninitialized"/>
        <argument key="session.handler.native" type="service_closure" id="session.handler.native" on-invalid="ignore_uninitialized"/>
        <argument key="session.handler.native_file" type="service_closure" id="session.handler.native_file" on-invalid="ignore_uninitialized"/>
        <argument key="session.abstract_handler" type="service_closure" id="session.abstract_handler" on-invalid="ignore_uninitialized"/>
        <argument key="session.marshaller" type="service_closure" id="session.marshaller" on-invalid="ignore_uninitialized"/>
        <argument key="security.csrf.token_generator" type="service_closure" id="security.csrf.token_generator" on-invalid="ignore_uninitialized"/>
        <argument key="security.csrf.token_storage" type="service_closure" id="security.csrf.token_storage" on-invalid="ignore_uninitialized"/>
        <argument key="security.csrf.token_manager" type="service_closure" id="security.csrf.token_manager" on-invalid="ignore_uninitialized"/>
        <argument key="twig.runtime.security_csrf" type="service_closure" id="twig.runtime.security_csrf" on-invalid="ignore_uninitialized"/>
        <argument key="twig.extension.security_csrf" type="service_closure" id="twig.extension.security_csrf" on-invalid="ignore_uninitialized"/>
        <argument key="form.resolved_type_factory" type="service_closure" id="form.resolved_type_factory" on-invalid="ignore_uninitialized"/>
        <argument key="form.registry" type="service_closure" id="form.registry" on-invalid="ignore_uninitialized"/>
        <argument key="form.factory" type="service_closure" id="form.factory" on-invalid="ignore_uninitialized"/>
        <argument key="form.extension" type="service_closure" id="form.extension" on-invalid="ignore_uninitialized"/>
        <argument key="form.type_guesser.validator" type="service_closure" id="form.type_guesser.validator" on-invalid="ignore_uninitialized"/>
        <argument key="form.choice_list_factory.default" type="service_closure" id="form.choice_list_factory.default" on-invalid="ignore_uninitialized"/>
        <argument key="form.choice_list_factory.property_access" type="service_closure" id="form.choice_list_factory.property_access" on-invalid="ignore_uninitialized"/>
        <argument key="form.choice_list_factory.cached" type="service_closure" id="form.choice_list_factory.cached" on-invalid="ignore_uninitialized"/>
        <argument key="form.type.form" type="service_closure" id="form.type.form" on-invalid="ignore_uninitialized"/>
        <argument key="form.type.choice" type="service_closure" id="form.type.choice" on-invalid="ignore_uninitialized"/>
        <argument key="form.type.file" type="service_closure" id="form.type.file" on-invalid="ignore_uninitialized"/>
        <argument key="form.type.color" type="service_closure" id="form.type.color" on-invalid="ignore_uninitialized"/>
        <argument key="form.type_extension.form.transformation_failure_handling" type="service_closure" id="form.type_extension.form.transformation_failure_handling" on-invalid="ignore_uninitialized"/>
        <argument key="form.type_extension.form.http_foundation" type="service_closure" id="form.type_extension.form.http_foundation" on-invalid="ignore_uninitialized"/>
        <argument key="form.type_extension.form.request_handler" type="service_closure" id="form.type_extension.form.request_handler" on-invalid="ignore_uninitialized"/>
        <argument key="form.server_params" type="service_closure" id="form.server_params" on-invalid="ignore_uninitialized"/>
        <argument key="form.type_extension.form.validator" type="service_closure" id="form.type_extension.form.validator" on-invalid="ignore_uninitialized"/>
        <argument key="form.type_extension.repeated.validator" type="service_closure" id="form.type_extension.repeated.validator" on-invalid="ignore_uninitialized"/>
        <argument key="form.type_extension.submit.validator" type="service_closure" id="form.type_extension.submit.validator" on-invalid="ignore_uninitialized"/>
        <argument key="form.type_extension.upload.validator" type="service_closure" id="form.type_extension.upload.validator" on-invalid="ignore_uninitialized"/>
        <argument key="form.type_extension.csrf" type="service_closure" id="form.type_extension.csrf" on-invalid="ignore_uninitialized"/>
        <argument key="validator.builder" type="service_closure" id="validator.builder" on-invalid="ignore_uninitialized"/>
        <argument key="validator.mapping.cache_warmer" type="service_closure" id="validator.mapping.cache_warmer" on-invalid="ignore_uninitialized"/>
        <argument key="validator.mapping.cache.adapter" type="service_closure" id="validator.mapping.cache.adapter" on-invalid="ignore_uninitialized"/>
        <argument key="validator.validator_factory" type="service_closure" id="validator.validator_factory" on-invalid="ignore_uninitialized"/>
        <argument key="validator.expression" type="service_closure" id="validator.expression" on-invalid="ignore_uninitialized"/>
        <argument key="validator.expression_language" type="service_closure" id="validator.expression_language" on-invalid="ignore_uninitialized"/>
        <argument key="validator.expression_language_provider" type="service_closure" id="validator.expression_language_provider" on-invalid="ignore_uninitialized"/>
        <argument key="validator.email" type="service_closure" id="validator.email" on-invalid="ignore_uninitialized"/>
        <argument key="validator.not_compromised_password" type="service_closure" id="validator.not_compromised_password" on-invalid="ignore_uninitialized"/>
        <argument key="validator.when" type="service_closure" id="validator.when" on-invalid="ignore_uninitialized"/>
        <argument key="validator.no_suspicious_characters" type="service_closure" id="validator.no_suspicious_characters" on-invalid="ignore_uninitialized"/>
        <argument key="validator.property_info_loader" type="service_closure" id="validator.property_info_loader" on-invalid="ignore_uninitialized"/>
        <argument key="messenger.senders_locator" type="service_closure" id="messenger.senders_locator" on-invalid="ignore_uninitialized"/>
        <argument key="messenger.transport.symfony_serializer" type="service_closure" id="messenger.transport.symfony_serializer" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.normalizer.flatten_exception" type="service_closure" id="serializer.normalizer.flatten_exception" on-invalid="ignore_uninitialized"/>
        <argument key="messenger.transport.native_php_serializer" type="service_closure" id="messenger.transport.native_php_serializer" on-invalid="ignore_uninitialized"/>
        <argument key="messenger.middleware.dispatch_after_current_bus" type="service_closure" id="messenger.middleware.dispatch_after_current_bus" on-invalid="ignore_uninitialized"/>
        <argument key="messenger.middleware.validation" type="service_closure" id="messenger.middleware.validation" on-invalid="ignore_uninitialized"/>
        <argument key="messenger.middleware.reject_redelivered_message_middleware" type="service_closure" id="messenger.middleware.reject_redelivered_message_middleware" on-invalid="ignore_uninitialized"/>
        <argument key="messenger.middleware.failed_message_processing_middleware" type="service_closure" id="messenger.middleware.failed_message_processing_middleware" on-invalid="ignore_uninitialized"/>
        <argument key="messenger.middleware.router_context" type="service_closure" id="messenger.middleware.router_context" on-invalid="ignore_uninitialized"/>
        <argument key="messenger.receiver_locator" type="service_closure" id="messenger.receiver_locator" on-invalid="ignore_uninitialized"/>
        <argument key="messenger.transport_factory" type="service_closure" id="messenger.transport_factory" on-invalid="ignore_uninitialized"/>
        <argument key="messenger.transport.amqp.factory" type="service_closure" id="messenger.transport.amqp.factory" on-invalid="ignore_uninitialized"/>
        <argument key="messenger.transport.redis.factory" type="service_closure" id="messenger.transport.redis.factory" on-invalid="ignore_uninitialized"/>
        <argument key="messenger.transport.sync.factory" type="service_closure" id="messenger.transport.sync.factory" on-invalid="ignore_uninitialized"/>
        <argument key="messenger.transport.in_memory.factory" type="service_closure" id="messenger.transport.in_memory.factory" on-invalid="ignore_uninitialized"/>
        <argument key="messenger.transport.beanstalkd.factory" type="service_closure" id="messenger.transport.beanstalkd.factory" on-invalid="ignore_uninitialized"/>
        <argument key="messenger.retry_strategy_locator" type="service_closure" id="messenger.retry_strategy_locator" on-invalid="ignore_uninitialized"/>
        <argument key="messenger.retry.send_failed_message_for_retry_listener" type="service_closure" id="messenger.retry.send_failed_message_for_retry_listener" on-invalid="ignore_uninitialized"/>
        <argument key="messenger.failure.add_error_details_stamp_listener" type="service_closure" id="messenger.failure.add_error_details_stamp_listener" on-invalid="ignore_uninitialized"/>
        <argument key="messenger.failure.send_failed_message_to_failure_transport_listener" type="service_closure" id="messenger.failure.send_failed_message_to_failure_transport_listener" on-invalid="ignore_uninitialized"/>
        <argument key="messenger.listener.dispatch_pcntl_signal_listener" type="service_closure" id="messenger.listener.dispatch_pcntl_signal_listener" on-invalid="ignore_uninitialized"/>
        <argument key="messenger.listener.stop_worker_on_restart_signal_listener" type="service_closure" id="messenger.listener.stop_worker_on_restart_signal_listener" on-invalid="ignore_uninitialized"/>
        <argument key="messenger.listener.stop_worker_signals_listener" type="service_closure" id="messenger.listener.stop_worker_signals_listener" on-invalid="ignore_uninitialized"/>
        <argument key="messenger.listener.stop_worker_on_stop_exception_listener" type="service_closure" id="messenger.listener.stop_worker_on_stop_exception_listener" on-invalid="ignore_uninitialized"/>
        <argument key="messenger.listener.reset_services" type="service_closure" id="messenger.listener.reset_services" on-invalid="ignore_uninitialized"/>
        <argument key="messenger.routable_message_bus" type="service_closure" id="messenger.routable_message_bus" on-invalid="ignore_uninitialized"/>
        <argument key="messenger.redispatch_message_handler" type="service_closure" id="messenger.redispatch_message_handler" on-invalid="ignore_uninitialized"/>
        <argument key="messenger.transport.async" type="service_closure" id="messenger.transport.async" on-invalid="ignore_uninitialized"/>
        <argument key="messenger.retry.multiplier_retry_strategy.async" type="service_closure" id="messenger.retry.multiplier_retry_strategy.async" on-invalid="ignore_uninitialized"/>
        <argument key="messenger.transport.failed" type="service_closure" id="messenger.transport.failed" on-invalid="ignore_uninitialized"/>
        <argument key="messenger.retry.multiplier_retry_strategy.failed" type="service_closure" id="messenger.retry.multiplier_retry_strategy.failed" on-invalid="ignore_uninitialized"/>
        <argument key="notifier" type="service_closure" id="notifier" on-invalid="ignore_uninitialized"/>
        <argument key="notifier.channel_policy" type="service_closure" id="notifier.channel_policy" on-invalid="ignore_uninitialized"/>
        <argument key="notifier.flash_message_importance_mapper" type="service_closure" id="notifier.flash_message_importance_mapper" on-invalid="ignore_uninitialized"/>
        <argument key="notifier.channel.browser" type="service_closure" id="notifier.channel.browser" on-invalid="ignore_uninitialized"/>
        <argument key="notifier.channel.chat" type="service_closure" id="notifier.channel.chat" on-invalid="ignore_uninitialized"/>
        <argument key="notifier.channel.sms" type="service_closure" id="notifier.channel.sms" on-invalid="ignore_uninitialized"/>
        <argument key="notifier.channel.email" type="service_closure" id="notifier.channel.email" on-invalid="ignore_uninitialized"/>
        <argument key="notifier.channel.push" type="service_closure" id="notifier.channel.push" on-invalid="ignore_uninitialized"/>
        <argument key="notifier.monolog_handler" type="service_closure" id="notifier.monolog_handler" on-invalid="ignore_uninitialized"/>
        <argument key="notifier.failed_message_listener" type="service_closure" id="notifier.failed_message_listener" on-invalid="ignore_uninitialized"/>
        <argument key="chatter.transports" type="service_closure" id="chatter.transports" on-invalid="ignore_uninitialized"/>
        <argument key="chatter.transport_factory" type="service_closure" id="chatter.transport_factory" on-invalid="ignore_uninitialized"/>
        <argument key="chatter.messenger.chat_handler" type="service_closure" id="chatter.messenger.chat_handler" on-invalid="ignore_uninitialized"/>
        <argument key="texter.transports" type="service_closure" id="texter.transports" on-invalid="ignore_uninitialized"/>
        <argument key="texter.transport_factory" type="service_closure" id="texter.transport_factory" on-invalid="ignore_uninitialized"/>
        <argument key="texter.messenger.sms_handler" type="service_closure" id="texter.messenger.sms_handler" on-invalid="ignore_uninitialized"/>
        <argument key="texter.messenger.push_handler" type="service_closure" id="texter.messenger.push_handler" on-invalid="ignore_uninitialized"/>
        <argument key="notifier.notification_logger_listener" type="service_closure" id="notifier.notification_logger_listener" on-invalid="ignore_uninitialized"/>
        <argument key="notifier.transport_factory.null" type="service_closure" id="notifier.transport_factory.null" on-invalid="ignore_uninitialized"/>
        <argument key="notifier.admin_recipient.0" type="service_closure" id="notifier.admin_recipient.0" on-invalid="ignore_uninitialized"/>
        <argument key="profiler" type="service_closure" id="profiler" on-invalid="ignore_uninitialized"/>
        <argument key="profiler.storage" type="service_closure" id="profiler.storage" on-invalid="ignore_uninitialized"/>
        <argument key="profiler_listener" type="service_closure" id="profiler_listener" on-invalid="ignore_uninitialized"/>
        <argument key="console_profiler_listener" type="service_closure" id="console_profiler_listener" on-invalid="ignore_uninitialized"/>
        <argument key="data_collector.config" type="service_closure" id="data_collector.config" on-invalid="ignore_uninitialized"/>
        <argument key="data_collector.request" type="service_closure" id="data_collector.request" on-invalid="ignore_uninitialized"/>
        <argument key="data_collector.request.session_collector" type="service_closure" id="data_collector.request.session_collector" on-invalid="ignore_uninitialized"/>
        <argument key="data_collector.ajax" type="service_closure" id="data_collector.ajax" on-invalid="ignore_uninitialized"/>
        <argument key="data_collector.exception" type="service_closure" id="data_collector.exception" on-invalid="ignore_uninitialized"/>
        <argument key="data_collector.events" type="service_closure" id="data_collector.events" on-invalid="ignore_uninitialized"/>
        <argument key="data_collector.logger" type="service_closure" id="data_collector.logger" on-invalid="ignore_uninitialized"/>
        <argument key="data_collector.time" type="service_closure" id="data_collector.time" on-invalid="ignore_uninitialized"/>
        <argument key="data_collector.memory" type="service_closure" id="data_collector.memory" on-invalid="ignore_uninitialized"/>
        <argument key="data_collector.router" type="service_closure" id="data_collector.router" on-invalid="ignore_uninitialized"/>
        <argument key="cache_pool_clearer.cache_warmer" type="service_closure" id="cache_pool_clearer.cache_warmer" on-invalid="ignore_uninitialized"/>
        <argument key="form.type_extension.form.data_collector" type="service_closure" id="form.type_extension.form.data_collector" on-invalid="ignore_uninitialized"/>
        <argument key="data_collector.form.extractor" type="service_closure" id="data_collector.form.extractor" on-invalid="ignore_uninitialized"/>
        <argument key="data_collector.form" type="service_closure" id="data_collector.form" on-invalid="ignore_uninitialized"/>
        <argument key="debug.validator" type="service_closure" id="debug.validator" on-invalid="ignore_uninitialized"/>
        <argument key="data_collector.validator" type="service_closure" id="data_collector.validator" on-invalid="ignore_uninitialized"/>
        <argument key="translator.data_collector" type="service_closure" id="translator.data_collector" on-invalid="ignore_uninitialized"/>
        <argument key="data_collector.translation" type="service_closure" id="data_collector.translation" on-invalid="ignore_uninitialized"/>
        <argument key="data_collector.messenger" type="service_closure" id="data_collector.messenger" on-invalid="ignore_uninitialized"/>
        <argument key="mailer.data_collector" type="service_closure" id="mailer.data_collector" on-invalid="ignore_uninitialized"/>
        <argument key="data_collector.http_client" type="service_closure" id="data_collector.http_client" on-invalid="ignore_uninitialized"/>
        <argument key="notifier.data_collector" type="service_closure" id="notifier.data_collector" on-invalid="ignore_uninitialized"/>
        <argument key="mime_types" type="service_closure" id="mime_types" on-invalid="ignore_uninitialized"/>
        <argument key="data_collector.doctrine" type="service_closure" id="data_collector.doctrine" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.dbal.connection_factory" type="service_closure" id="doctrine.dbal.connection_factory" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.dbal.connection_factory.dsn_parser" type="service_closure" id="doctrine.dbal.connection_factory.dsn_parser" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.twig.doctrine_extension" type="service_closure" id="doctrine.twig.doctrine_extension" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.dbal.well_known_schema_asset_filter" type="service_closure" id="doctrine.dbal.well_known_schema_asset_filter" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.database_create_command" type="service_closure" id="doctrine.database_create_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.database_drop_command" type="service_closure" id="doctrine.database_drop_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.query_sql_command" type="service_closure" id="doctrine.query_sql_command" on-invalid="ignore_uninitialized"/>
        <argument key="Doctrine\DBAL\Tools\Console\Command\RunSqlCommand" type="service_closure" id="Doctrine\DBAL\Tools\Console\Command\RunSqlCommand" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.dbal.default_schema_manager_factory" type="service_closure" id="doctrine.dbal.default_schema_manager_factory" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.dbal.legacy_schema_manager_factory" type="service_closure" id="doctrine.dbal.legacy_schema_manager_factory" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.dbal.default_connection.configuration" type="service_closure" id="doctrine.dbal.default_connection.configuration" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.dbal.default_connection.event_manager" type="service_closure" id="doctrine.dbal.default_connection.event_manager" on-invalid="ignore_uninitialized"/>
        <argument key="Doctrine\Bundle\DoctrineBundle\Dbal\ManagerRegistryAwareConnectionProvider" type="service_closure" id="Doctrine\Bundle\DoctrineBundle\Dbal\ManagerRegistryAwareConnectionProvider" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.dbal.connection_expiries" type="service_closure" id="doctrine.dbal.connection_expiries" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.debug_data_holder" type="service_closure" id="doctrine.debug_data_holder" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.messenger.event_subscriber.doctrine_clear_entity_manager" type="service_closure" id="doctrine.orm.messenger.event_subscriber.doctrine_clear_entity_manager" on-invalid="ignore_uninitialized"/>
        <argument key="messenger.transport.doctrine.factory" type="service_closure" id="messenger.transport.doctrine.factory" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.messenger.doctrine_schema_listener" type="service_closure" id="doctrine.orm.messenger.doctrine_schema_listener" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.proxy_cache_warmer" type="service_closure" id="doctrine.orm.proxy_cache_warmer" on-invalid="ignore_uninitialized"/>
        <argument key="form.type_guesser.doctrine" type="service_closure" id="form.type_guesser.doctrine" on-invalid="ignore_uninitialized"/>
        <argument key="form.type.entity" type="service_closure" id="form.type.entity" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.container_repository_factory" type="service_closure" id="doctrine.orm.container_repository_factory" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.validator.unique" type="service_closure" id="doctrine.orm.validator.unique" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.validator_initializer" type="service_closure" id="doctrine.orm.validator_initializer" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.listeners.resolve_target_entity" type="service_closure" id="doctrine.orm.listeners.resolve_target_entity" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.listeners.doctrine_dbal_cache_adapter_schema_listener" type="service_closure" id="doctrine.orm.listeners.doctrine_dbal_cache_adapter_schema_listener" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.listeners.doctrine_token_provider_schema_listener" type="service_closure" id="doctrine.orm.listeners.doctrine_token_provider_schema_listener" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.listeners.pdo_session_handler_schema_listener" type="service_closure" id="doctrine.orm.listeners.pdo_session_handler_schema_listener" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.listeners.lock_store_schema_listener" type="service_closure" id="doctrine.orm.listeners.lock_store_schema_listener" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.naming_strategy.default" type="service_closure" id="doctrine.orm.naming_strategy.default" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.naming_strategy.underscore" type="service_closure" id="doctrine.orm.naming_strategy.underscore" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.naming_strategy.underscore_number_aware" type="service_closure" id="doctrine.orm.naming_strategy.underscore_number_aware" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.quote_strategy.default" type="service_closure" id="doctrine.orm.quote_strategy.default" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.quote_strategy.ansi" type="service_closure" id="doctrine.orm.quote_strategy.ansi" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.typed_field_mapper.default" type="service_closure" id="doctrine.orm.typed_field_mapper.default" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.ulid_generator" type="service_closure" id="doctrine.ulid_generator" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.uuid_generator" type="service_closure" id="doctrine.uuid_generator" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.command.entity_manager_provider" type="service_closure" id="doctrine.orm.command.entity_manager_provider" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.entity_value_resolver" type="service_closure" id="doctrine.orm.entity_value_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.entity_value_resolver.expression_language" type="service_closure" id="doctrine.orm.entity_value_resolver.expression_language" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.cache_clear_metadata_command" type="service_closure" id="doctrine.cache_clear_metadata_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.cache_clear_query_cache_command" type="service_closure" id="doctrine.cache_clear_query_cache_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.cache_clear_result_command" type="service_closure" id="doctrine.cache_clear_result_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.cache_collection_region_command" type="service_closure" id="doctrine.cache_collection_region_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.schema_create_command" type="service_closure" id="doctrine.schema_create_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.schema_drop_command" type="service_closure" id="doctrine.schema_drop_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.clear_entity_region_command" type="service_closure" id="doctrine.clear_entity_region_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.mapping_info_command" type="service_closure" id="doctrine.mapping_info_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.clear_query_region_command" type="service_closure" id="doctrine.clear_query_region_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.query_dql_command" type="service_closure" id="doctrine.query_dql_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.schema_update_command" type="service_closure" id="doctrine.schema_update_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.schema_validate_command" type="service_closure" id="doctrine.schema_validate_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.default_configuration" type="service_closure" id="doctrine.orm.default_configuration" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.default_attribute_metadata_driver" type="service_closure" id="doctrine.orm.default_attribute_metadata_driver" on-invalid="ignore_uninitialized"/>
        <argument key="cache.doctrine.orm.default.metadata" type="service_closure" id="cache.doctrine.orm.default.metadata" on-invalid="ignore_uninitialized"/>
        <argument key="cache.doctrine.orm.default.result" type="service_closure" id="cache.doctrine.orm.default.result" on-invalid="ignore_uninitialized"/>
        <argument key="cache.doctrine.orm.default.query" type="service_closure" id="cache.doctrine.orm.default.query" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.default_entity_listener_resolver" type="service_closure" id="doctrine.orm.default_entity_listener_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.default_listeners.attach_entity_listeners" type="service_closure" id="doctrine.orm.default_listeners.attach_entity_listeners" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.default_manager_configurator" type="service_closure" id="doctrine.orm.default_manager_configurator" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.default_entity_manager.property_info_extractor" type="service_closure" id="doctrine.orm.default_entity_manager.property_info_extractor" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.default_entity_manager.validator_loader" type="service_closure" id="doctrine.orm.default_entity_manager.validator_loader" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.migrations.dependency_factory" type="service_closure" id="doctrine.migrations.dependency_factory" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.migrations.configuration_loader" type="service_closure" id="doctrine.migrations.configuration_loader" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.migrations.connection_loader" type="service_closure" id="doctrine.migrations.connection_loader" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.migrations.em_loader" type="service_closure" id="doctrine.migrations.em_loader" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.migrations.entity_manager_registry_loader" type="service_closure" id="doctrine.migrations.entity_manager_registry_loader" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.migrations.connection_registry_loader" type="service_closure" id="doctrine.migrations.connection_registry_loader" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.migrations.configuration" type="service_closure" id="doctrine.migrations.configuration" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.migrations.container_aware_migrations_factory" type="service_closure" id="doctrine.migrations.container_aware_migrations_factory" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine_migrations.diff_command" type="service_closure" id="doctrine_migrations.diff_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine_migrations.sync_metadata_command" type="service_closure" id="doctrine_migrations.sync_metadata_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine_migrations.versions_command" type="service_closure" id="doctrine_migrations.versions_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine_migrations.current_command" type="service_closure" id="doctrine_migrations.current_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine_migrations.dump_schema_command" type="service_closure" id="doctrine_migrations.dump_schema_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine_migrations.execute_command" type="service_closure" id="doctrine_migrations.execute_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine_migrations.generate_command" type="service_closure" id="doctrine_migrations.generate_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine_migrations.latest_command" type="service_closure" id="doctrine_migrations.latest_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine_migrations.migrate_command" type="service_closure" id="doctrine_migrations.migrate_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine_migrations.rollup_command" type="service_closure" id="doctrine_migrations.rollup_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine_migrations.status_command" type="service_closure" id="doctrine_migrations.status_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine_migrations.up_to_date_command" type="service_closure" id="doctrine_migrations.up_to_date_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine_migrations.version_command" type="service_closure" id="doctrine_migrations.version_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.migrations.storage.table_storage" type="service_closure" id="doctrine.migrations.storage.table_storage" on-invalid="ignore_uninitialized"/>
        <argument key="twig" type="service_closure" id="twig" on-invalid="ignore_uninitialized"/>
        <argument key="twig.app_variable" type="service_closure" id="twig.app_variable" on-invalid="ignore_uninitialized"/>
        <argument key="twig.template_iterator" type="service_closure" id="twig.template_iterator" on-invalid="ignore_uninitialized"/>
        <argument key="twig.template_cache_warmer" type="service_closure" id="twig.template_cache_warmer" on-invalid="ignore_uninitialized"/>
        <argument key="twig.loader.native_filesystem" type="service_closure" id="twig.loader.native_filesystem" on-invalid="ignore_uninitialized"/>
        <argument key="twig.loader.chain" type="service_closure" id="twig.loader.chain" on-invalid="ignore_uninitialized"/>
        <argument key="twig.extension.profiler" type="service_closure" id="twig.extension.profiler" on-invalid="ignore_uninitialized"/>
        <argument key="twig.profile" type="service_closure" id="twig.profile" on-invalid="ignore_uninitialized"/>
        <argument key="data_collector.twig" type="service_closure" id="data_collector.twig" on-invalid="ignore_uninitialized"/>
        <argument key="twig.extension.trans" type="service_closure" id="twig.extension.trans" on-invalid="ignore_uninitialized"/>
        <argument key="twig.extension.assets" type="service_closure" id="twig.extension.assets" on-invalid="ignore_uninitialized"/>
        <argument key="twig.extension.code" type="service_closure" id="twig.extension.code" on-invalid="ignore_uninitialized"/>
        <argument key="twig.extension.routing" type="service_closure" id="twig.extension.routing" on-invalid="ignore_uninitialized"/>
        <argument key="twig.extension.yaml" type="service_closure" id="twig.extension.yaml" on-invalid="ignore_uninitialized"/>
        <argument key="twig.extension.debug.stopwatch" type="service_closure" id="twig.extension.debug.stopwatch" on-invalid="ignore_uninitialized"/>
        <argument key="twig.extension.expression" type="service_closure" id="twig.extension.expression" on-invalid="ignore_uninitialized"/>
        <argument key="twig.extension.htmlsanitizer" type="service_closure" id="twig.extension.htmlsanitizer" on-invalid="ignore_uninitialized"/>
        <argument key="twig.extension.httpkernel" type="service_closure" id="twig.extension.httpkernel" on-invalid="ignore_uninitialized"/>
        <argument key="twig.runtime.httpkernel" type="service_closure" id="twig.runtime.httpkernel" on-invalid="ignore_uninitialized"/>
        <argument key="twig.extension.httpfoundation" type="service_closure" id="twig.extension.httpfoundation" on-invalid="ignore_uninitialized"/>
        <argument key="twig.extension.debug" type="service_closure" id="twig.extension.debug" on-invalid="ignore_uninitialized"/>
        <argument key="twig.extension.weblink" type="service_closure" id="twig.extension.weblink" on-invalid="ignore_uninitialized"/>
        <argument key="twig.translation.extractor" type="service_closure" id="twig.translation.extractor" on-invalid="ignore_uninitialized"/>
        <argument key="twig.configurator.environment" type="service_closure" id="twig.configurator.environment" on-invalid="ignore_uninitialized"/>
        <argument key="twig.runtime_loader" type="service_closure" id="twig.runtime_loader" on-invalid="ignore_uninitialized"/>
        <argument key="twig.error_renderer.html" type="service_closure" id="twig.error_renderer.html" on-invalid="ignore_uninitialized"/>
        <argument key="twig.runtime.serializer" type="service_closure" id="twig.runtime.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="twig.extension.serializer" type="service_closure" id="twig.extension.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="controller.template_attribute_listener" type="service_closure" id="controller.template_attribute_listener" on-invalid="ignore_uninitialized"/>
        <argument key="twig.extension.form" type="service_closure" id="twig.extension.form" on-invalid="ignore_uninitialized"/>
        <argument key="twig.form.engine" type="service_closure" id="twig.form.engine" on-invalid="ignore_uninitialized"/>
        <argument key="twig.form.renderer" type="service_closure" id="twig.form.renderer" on-invalid="ignore_uninitialized"/>
        <argument key="twig.command.debug" type="service_closure" id="twig.command.debug" on-invalid="ignore_uninitialized"/>
        <argument key="twig.command.lint" type="service_closure" id="twig.command.lint" on-invalid="ignore_uninitialized"/>
        <argument key="twig.mailer.message_listener" type="service_closure" id="twig.mailer.message_listener" on-invalid="ignore_uninitialized"/>
        <argument key="twig.mime_body_renderer" type="service_closure" id="twig.mime_body_renderer" on-invalid="ignore_uninitialized"/>
        <argument key="web_profiler.csp.handler" type="service_closure" id="web_profiler.csp.handler" on-invalid="ignore_uninitialized"/>
        <argument key="twig.extension.webprofiler" type="service_closure" id="twig.extension.webprofiler" on-invalid="ignore_uninitialized"/>
        <argument key="debug.file_link_formatter.url_format" type="service_closure" id="debug.file_link_formatter.url_format" on-invalid="ignore_uninitialized"/>
        <argument key="twig.missing_extension_suggestor" type="service_closure" id="twig.missing_extension_suggestor" on-invalid="ignore_uninitialized"/>
        <argument key="twig.extension.string" type="service_closure" id="twig.extension.string" on-invalid="ignore_uninitialized"/>
        <argument key="security.authorization_checker" type="service_closure" id="security.authorization_checker" on-invalid="ignore_uninitialized"/>
        <argument key="security.token_storage" type="service_closure" id="security.token_storage" on-invalid="ignore_uninitialized"/>
        <argument key="security.untracked_token_storage" type="service_closure" id="security.untracked_token_storage" on-invalid="ignore_uninitialized"/>
        <argument key="security.helper" type="service_closure" id="security.helper" on-invalid="ignore_uninitialized"/>
        <argument key="security.user_value_resolver" type="service_closure" id="security.user_value_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="security.security_token_value_resolver" type="service_closure" id="security.security_token_value_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="security.authentication.trust_resolver" type="service_closure" id="security.authentication.trust_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="security.authentication.session_strategy" type="service_closure" id="security.authentication.session_strategy" on-invalid="ignore_uninitialized"/>
        <argument key="security.authentication.session_strategy_noop" type="service_closure" id="security.authentication.session_strategy_noop" on-invalid="ignore_uninitialized"/>
        <argument key="security.user_checker" type="service_closure" id="security.user_checker" on-invalid="ignore_uninitialized"/>
        <argument key="security.user_checker_locator" type="service_closure" id="security.user_checker_locator" on-invalid="ignore_uninitialized"/>
        <argument key="security.expression_language" type="service_closure" id="security.expression_language" on-invalid="ignore_uninitialized"/>
        <argument key="security.authentication_utils" type="service_closure" id="security.authentication_utils" on-invalid="ignore_uninitialized"/>
        <argument key="security.role_hierarchy" type="service_closure" id="security.role_hierarchy" on-invalid="ignore_uninitialized"/>
        <argument key="security.access.simple_role_voter" type="service_closure" id="security.access.simple_role_voter" on-invalid="ignore_uninitialized"/>
        <argument key="security.access.authenticated_voter" type="service_closure" id="security.access.authenticated_voter" on-invalid="ignore_uninitialized"/>
        <argument key="security.access.expression_voter" type="service_closure" id="security.access.expression_voter" on-invalid="ignore_uninitialized"/>
        <argument key="security.impersonate_url_generator" type="service_closure" id="security.impersonate_url_generator" on-invalid="ignore_uninitialized"/>
        <argument key="security.firewall.map" type="service_closure" id="security.firewall.map" on-invalid="ignore_uninitialized"/>
        <argument key="security.logout_url_generator" type="service_closure" id="security.logout_url_generator" on-invalid="ignore_uninitialized"/>
        <argument key="security.route_loader.logout" type="service_closure" id="security.route_loader.logout" on-invalid="ignore_uninitialized"/>
        <argument key="security.http_utils" type="service_closure" id="security.http_utils" on-invalid="ignore_uninitialized"/>
        <argument key="security.validator.user_password" type="service_closure" id="security.validator.user_password" on-invalid="ignore_uninitialized"/>
        <argument key="cache.security_expression_language" type="service_closure" id="cache.security_expression_language" on-invalid="ignore_uninitialized"/>
        <argument key="controller.is_granted_attribute_listener" type="service_closure" id="controller.is_granted_attribute_listener" on-invalid="ignore_uninitialized"/>
        <argument key="security.is_granted_attribute_expression_language" type="service_closure" id="security.is_granted_attribute_expression_language" on-invalid="ignore_uninitialized"/>
        <argument key="security.password_hasher_factory" type="service_closure" id="security.password_hasher_factory" on-invalid="ignore_uninitialized"/>
        <argument key="security.user_password_hasher" type="service_closure" id="security.user_password_hasher" on-invalid="ignore_uninitialized"/>
        <argument key="form.listener.password_hasher" type="service_closure" id="form.listener.password_hasher" on-invalid="ignore_uninitialized"/>
        <argument key="form.type_extension.form.password_hasher" type="service_closure" id="form.type_extension.form.password_hasher" on-invalid="ignore_uninitialized"/>
        <argument key="form.type_extension.password.password_hasher" type="service_closure" id="form.type_extension.password.password_hasher" on-invalid="ignore_uninitialized"/>
        <argument key="security.channel_listener" type="service_closure" id="security.channel_listener" on-invalid="ignore_uninitialized"/>
        <argument key="security.access_map" type="service_closure" id="security.access_map" on-invalid="ignore_uninitialized"/>
        <argument key="security.context_listener" type="service_closure" id="security.context_listener" on-invalid="ignore_uninitialized"/>
        <argument key="security.access_listener" type="service_closure" id="security.access_listener" on-invalid="ignore_uninitialized"/>
        <argument key="security.firewall.event_dispatcher_locator" type="service_closure" id="security.firewall.event_dispatcher_locator" on-invalid="ignore_uninitialized"/>
        <argument key="security.authenticator.managers_locator" type="service_closure" id="security.authenticator.managers_locator" on-invalid="ignore_uninitialized"/>
        <argument key="security.user_authenticator" type="service_closure" id="security.user_authenticator" on-invalid="ignore_uninitialized"/>
        <argument key="security.listener.check_authenticator_credentials" type="service_closure" id="security.listener.check_authenticator_credentials" on-invalid="ignore_uninitialized"/>
        <argument key="security.listener.user_provider" type="service_closure" id="security.listener.user_provider" on-invalid="ignore_uninitialized"/>
        <argument key="security.listener.password_migrating" type="service_closure" id="security.listener.password_migrating" on-invalid="ignore_uninitialized"/>
        <argument key="security.access_token_extractor.header" type="service_closure" id="security.access_token_extractor.header" on-invalid="ignore_uninitialized"/>
        <argument key="security.access_token_extractor.query_string" type="service_closure" id="security.access_token_extractor.query_string" on-invalid="ignore_uninitialized"/>
        <argument key="security.access_token_extractor.request_body" type="service_closure" id="security.access_token_extractor.request_body" on-invalid="ignore_uninitialized"/>
        <argument key="security.access_token_handler.oidc.signature.ES256" type="service_closure" id="security.access_token_handler.oidc.signature.ES256" on-invalid="ignore_uninitialized"/>
        <argument key="security.access_token_handler.oidc.signature.ES384" type="service_closure" id="security.access_token_handler.oidc.signature.ES384" on-invalid="ignore_uninitialized"/>
        <argument key="security.access_token_handler.oidc.signature.ES512" type="service_closure" id="security.access_token_handler.oidc.signature.ES512" on-invalid="ignore_uninitialized"/>
        <argument key="twig.extension.logout_url" type="service_closure" id="twig.extension.logout_url" on-invalid="ignore_uninitialized"/>
        <argument key="twig.extension.security" type="service_closure" id="twig.extension.security" on-invalid="ignore_uninitialized"/>
        <argument key="data_collector.security" type="service_closure" id="data_collector.security" on-invalid="ignore_uninitialized"/>
        <argument key="debug.security.access.decision_manager" type="service_closure" id="debug.security.access.decision_manager" on-invalid="ignore_uninitialized"/>
        <argument key="debug.security.voter.vote_listener" type="service_closure" id="debug.security.voter.vote_listener" on-invalid="ignore_uninitialized"/>
        <argument key="debug.security.firewall" type="service_closure" id="debug.security.firewall" on-invalid="ignore_uninitialized"/>
        <argument key="security.command.debug_firewall" type="service_closure" id="security.command.debug_firewall" on-invalid="ignore_uninitialized"/>
        <argument key="security.user.provider.concrete.users_in_memory" type="service_closure" id="security.user.provider.concrete.users_in_memory" on-invalid="ignore_uninitialized"/>
        <argument key="security.firewall.map.config.dev" type="service_closure" id="security.firewall.map.config.dev" on-invalid="ignore_uninitialized"/>
        <argument key="security.firewall.map.context.dev" type="service_closure" id="security.firewall.map.context.dev" on-invalid="ignore_uninitialized"/>
        <argument key="security.firewall.map.config.main" type="service_closure" id="security.firewall.map.config.main" on-invalid="ignore_uninitialized"/>
        <argument key="security.listener.main.user_provider" type="service_closure" id="security.listener.main.user_provider" on-invalid="ignore_uninitialized"/>
        <argument key="security.user_checker.chain.main" type="service_closure" id="security.user_checker.chain.main" on-invalid="ignore_uninitialized"/>
        <argument key="security.context_listener.0" type="service_closure" id="security.context_listener.0" on-invalid="ignore_uninitialized"/>
        <argument key="security.listener.session.main" type="service_closure" id="security.listener.session.main" on-invalid="ignore_uninitialized"/>
        <argument key="security.authenticator.manager.main" type="service_closure" id="security.authenticator.manager.main" on-invalid="ignore_uninitialized"/>
        <argument key="debug.security.firewall.authenticator.main" type="service_closure" id="debug.security.firewall.authenticator.main" on-invalid="ignore_uninitialized"/>
        <argument key="security.listener.user_checker.main" type="service_closure" id="security.listener.user_checker.main" on-invalid="ignore_uninitialized"/>
        <argument key="security.exception_listener.main" type="service_closure" id="security.exception_listener.main" on-invalid="ignore_uninitialized"/>
        <argument key="security.firewall.map.context.main" type="service_closure" id="security.firewall.map.context.main" on-invalid="ignore_uninitialized"/>
        <argument key="security.command.user_password_hash" type="service_closure" id="security.command.user_password_hash" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.logger" type="service_closure" id="monolog.logger" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.formatter.chrome_php" type="service_closure" id="monolog.formatter.chrome_php" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.formatter.gelf_message" type="service_closure" id="monolog.formatter.gelf_message" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.formatter.html" type="service_closure" id="monolog.formatter.html" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.formatter.json" type="service_closure" id="monolog.formatter.json" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.formatter.line" type="service_closure" id="monolog.formatter.line" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.formatter.loggly" type="service_closure" id="monolog.formatter.loggly" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.formatter.normalizer" type="service_closure" id="monolog.formatter.normalizer" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.formatter.scalar" type="service_closure" id="monolog.formatter.scalar" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.formatter.wildfire" type="service_closure" id="monolog.formatter.wildfire" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.formatter.logstash" type="service_closure" id="monolog.formatter.logstash" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.http_client" type="service_closure" id="monolog.http_client" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.handler.main.http_code_strategy" type="service_closure" id="monolog.handler.main.http_code_strategy" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.handler.main" type="service_closure" id="monolog.handler.main" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.processor.psr_log_message" type="service_closure" id="monolog.processor.psr_log_message" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.handler.nested" type="service_closure" id="monolog.handler.nested" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.twig.flashmessage.twig.runtime" type="service_closure" id="sonata.twig.flashmessage.twig.runtime" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.twig.extension.wrapping" type="service_closure" id="sonata.twig.extension.wrapping" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.twig.status_runtime" type="service_closure" id="sonata.twig.status_runtime" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.twig.status_extension" type="service_closure" id="sonata.twig.status_extension" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.twig.template_extension" type="service_closure" id="sonata.twig.template_extension" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.form.date.javascript_format_converter" type="service_closure" id="sonata.form.date.javascript_format_converter" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.form.type.array" type="service_closure" id="sonata.form.type.array" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.form.type.boolean" type="service_closure" id="sonata.form.type.boolean" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.form.type.collection" type="service_closure" id="sonata.form.type.collection" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.form.type.date_range" type="service_closure" id="sonata.form.type.date_range" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.form.type.datetime_range" type="service_closure" id="sonata.form.type.datetime_range" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.form.type.date_picker" type="service_closure" id="sonata.form.type.date_picker" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.form.type.datetime_picker" type="service_closure" id="sonata.form.type.datetime_picker" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.form.type.date_range_picker" type="service_closure" id="sonata.form.type.date_range_picker" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.form.type.datetime_range_picker" type="service_closure" id="sonata.form.type.datetime_range_picker" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.form.validator.inline" type="service_closure" id="sonata.form.validator.inline" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.exporter.writer.csv" type="service_closure" id="sonata.exporter.writer.csv" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.exporter.writer.json" type="service_closure" id="sonata.exporter.writer.json" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.exporter.writer.xls" type="service_closure" id="sonata.exporter.writer.xls" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.exporter.writer.xml" type="service_closure" id="sonata.exporter.writer.xml" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.doctrine.adapter.doctrine_orm" type="service_closure" id="sonata.doctrine.adapter.doctrine_orm" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.doctrine.mapper" type="service_closure" id="sonata.doctrine.mapper" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.block.service.container" type="service_closure" id="sonata.block.service.container" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.block.service.empty" type="service_closure" id="sonata.block.service.empty" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.block.service.text" type="service_closure" id="sonata.block.service.text" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.block.service.rss" type="service_closure" id="sonata.block.service.rss" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.block.service.template" type="service_closure" id="sonata.block.service.template" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.block.service.menu" type="service_closure" id="sonata.block.service.menu" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.block.form.type.block" type="service_closure" id="sonata.block.form.type.block" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.block.form.type.container_template" type="service_closure" id="sonata.block.form.type.container_template" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.block.twig.extension" type="service_closure" id="sonata.block.twig.extension" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.block.templating.helper" type="service_closure" id="sonata.block.templating.helper" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.block.loader.chain" type="service_closure" id="sonata.block.loader.chain" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.block.loader.service" type="service_closure" id="sonata.block.loader.service" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.block.twig.global" type="service_closure" id="sonata.block.twig.global" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.block.exception.strategy.manager" type="service_closure" id="sonata.block.exception.strategy.manager" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.block.command.debug_blocks" type="service_closure" id="sonata.block.command.debug_blocks" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.block.data_collector" type="service_closure" id="sonata.block.data_collector" on-invalid="ignore_uninitialized"/>
        <argument key="knp_menu.factory_extension.routing" type="service_closure" id="knp_menu.factory_extension.routing" on-invalid="ignore_uninitialized"/>
        <argument key="knp_menu.helper" type="service_closure" id="knp_menu.helper" on-invalid="ignore_uninitialized"/>
        <argument key="knp_menu.menu_provider.chain" type="service_closure" id="knp_menu.menu_provider.chain" on-invalid="ignore_uninitialized"/>
        <argument key="knp_menu.menu_provider.lazy" type="service_closure" id="knp_menu.menu_provider.lazy" on-invalid="ignore_uninitialized"/>
        <argument key="knp_menu.menu_provider.builder_alias" type="service_closure" id="knp_menu.menu_provider.builder_alias" on-invalid="ignore_uninitialized"/>
        <argument key="knp_menu.renderer_provider" type="service_closure" id="knp_menu.renderer_provider" on-invalid="ignore_uninitialized"/>
        <argument key="knp_menu.renderer.list" type="service_closure" id="knp_menu.renderer.list" on-invalid="ignore_uninitialized"/>
        <argument key="knp_menu.voter.router" type="service_closure" id="knp_menu.voter.router" on-invalid="ignore_uninitialized"/>
        <argument key="knp_menu.manipulator" type="service_closure" id="knp_menu.manipulator" on-invalid="ignore_uninitialized"/>
        <argument key="knp_menu.twig.extension" type="service_closure" id="knp_menu.twig.extension" on-invalid="ignore_uninitialized"/>
        <argument key="knp_menu.renderer.twig" type="service_closure" id="knp_menu.renderer.twig" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.admin.command.explain" type="service_closure" id="sonata.admin.command.explain" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.admin.command.generate_object_acl" type="service_closure" id="sonata.admin.command.generate_object_acl" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.admin.command.list" type="service_closure" id="sonata.admin.command.list" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.admin.command.setup_acl" type="service_closure" id="sonata.admin.command.setup_acl" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.admin.pool" type="service_closure" id="sonata.admin.pool" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.admin.configuration" type="service_closure" id="sonata.admin.configuration" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.admin.route_loader" type="service_closure" id="sonata.admin.route_loader" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.admin.helper" type="service_closure" id="sonata.admin.helper" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.admin.builder.filter.factory" type="service_closure" id="sonata.admin.builder.filter.factory" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.admin.breadcrumbs_builder" type="service_closure" id="sonata.admin.breadcrumbs_builder" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.admin.label.strategy.bc" type="service_closure" id="sonata.admin.label.strategy.bc" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.admin.label.strategy.native" type="service_closure" id="sonata.admin.label.strategy.native" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.admin.label.strategy.noop" type="service_closure" id="sonata.admin.label.strategy.noop" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.admin.label.strategy.underscore" type="service_closure" id="sonata.admin.label.strategy.underscore" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.admin.label.strategy.form_component" type="service_closure" id="sonata.admin.label.strategy.form_component" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.admin.translation_extractor" type="service_closure" id="sonata.admin.translation_extractor" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.admin.audit.manager" type="service_closure" id="sonata.admin.audit.manager" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.admin.search.handler" type="service_closure" id="sonata.admin.search.handler" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.admin.event.extension" type="service_closure" id="sonata.admin.event.extension" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.admin.filter_persister.session" type="service_closure" id="sonata.admin.filter_persister.session" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.admin.global_template_registry" type="service_closure" id="sonata.admin.global_template_registry" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.admin.request.fetcher" type="service_closure" id="sonata.admin.request.fetcher" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.admin.argument_resolver.admin" type="service_closure" id="sonata.admin.argument_resolver.admin" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.admin.argument_resolver.proxy_query" type="service_closure" id="sonata.admin.argument_resolver.proxy_query" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.admin.event_listener.configure_crud_controller" type="service_closure" id="sonata.admin.event_listener.configure_crud_controller" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.admin.form.type.admin" type="service_closure" id="sonata.admin.form.type.admin" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.admin.form.type.model_choice" type="service_closure" id="sonata.admin.form.type.model_choice" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.admin.form.type.model_list" type="service_closure" id="sonata.admin.form.type.model_list" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.admin.form.type.model_reference" type="service_closure" id="sonata.admin.form.type.model_reference" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.admin.form.type.model_hidden" type="service_closure" id="sonata.admin.form.type.model_hidden" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.admin.form.type.model_autocomplete" type="service_closure" id="sonata.admin.form.type.model_autocomplete" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.admin.form.type.collection" type="service_closure" id="sonata.admin.form.type.collection" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.admin.doctrine_orm.form.type.choice_field_mask" type="service_closure" id="sonata.admin.doctrine_orm.form.type.choice_field_mask" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.admin.form.extension.field" type="service_closure" id="sonata.admin.form.extension.field" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.admin.form.extension.field.mopa" type="service_closure" id="sonata.admin.form.extension.field.mopa" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.admin.form.extension.choice" type="service_closure" id="sonata.admin.form.extension.choice" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.admin.form.filter.type.number" type="service_closure" id="sonata.admin.form.filter.type.number" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.admin.form.filter.type.choice" type="service_closure" id="sonata.admin.form.filter.type.choice" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.admin.form.filter.type.default" type="service_closure" id="sonata.admin.form.filter.type.default" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.admin.form.filter.type.date" type="service_closure" id="sonata.admin.form.filter.type.date" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.admin.form.filter.type.daterange" type="service_closure" id="sonata.admin.form.filter.type.daterange" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.admin.form.filter.type.datetime" type="service_closure" id="sonata.admin.form.filter.type.datetime" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.admin.form.filter.type.datetime_range" type="service_closure" id="sonata.admin.form.filter.type.datetime_range" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.admin.form.data_transformer.boolean_to_string" type="service_closure" id="sonata.admin.form.data_transformer.boolean_to_string" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.admin.form.data_transformer_resolver" type="service_closure" id="sonata.admin.form.data_transformer_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.admin.menu_builder" type="service_closure" id="sonata.admin.menu_builder" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.admin.sidebar_menu" type="service_closure" id="sonata.admin.sidebar_menu" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.admin.menu.group_provider" type="service_closure" id="sonata.admin.menu.group_provider" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.admin.menu.matcher.voter.admin" type="service_closure" id="sonata.admin.menu.matcher.voter.admin" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.admin.menu.matcher.voter.active" type="service_closure" id="sonata.admin.menu.matcher.voter.active" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.admin.route.path_info" type="service_closure" id="sonata.admin.route.path_info" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.admin.route.default_generator" type="service_closure" id="sonata.admin.route.default_generator" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.admin.route.cache" type="service_closure" id="sonata.admin.route.cache" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.admin.route.cache_warmup" type="service_closure" id="sonata.admin.route.cache_warmup" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.admin.twig.sonata_admin_extension" type="service_closure" id="sonata.admin.twig.sonata_admin_extension" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.admin.twig.sonata_admin_runtime" type="service_closure" id="sonata.admin.twig.sonata_admin_runtime" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.admin.twig.template_registry_extension" type="service_closure" id="sonata.admin.twig.template_registry_extension" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.admin.twig.template_registry_runtime" type="service_closure" id="sonata.admin.twig.template_registry_runtime" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.admin.twig.group_extension" type="service_closure" id="sonata.admin.twig.group_extension" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.admin.twig.group_runtime" type="service_closure" id="sonata.admin.twig.group_runtime" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.admin.twig.icon_extension" type="service_closure" id="sonata.admin.twig.icon_extension" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.admin.twig.icon_runtime" type="service_closure" id="sonata.admin.twig.icon_runtime" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.admin.twig.security_extension" type="service_closure" id="sonata.admin.twig.security_extension" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.admin.twig.security_runtime" type="service_closure" id="sonata.admin.twig.security_runtime" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.admin.twig.canonicalize_extension" type="service_closure" id="sonata.admin.twig.canonicalize_extension" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.admin.twig.canonicalize_runtime" type="service_closure" id="sonata.admin.twig.canonicalize_runtime" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.admin.twig.xeditable_extension" type="service_closure" id="sonata.admin.twig.xeditable_extension" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.admin.twig.xeditable_runtime" type="service_closure" id="sonata.admin.twig.xeditable_runtime" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.admin.twig.render_element_extension" type="service_closure" id="sonata.admin.twig.render_element_extension" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.admin.twig.render_element_runtime" type="service_closure" id="sonata.admin.twig.render_element_runtime" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.admin.twig.breadcrumbs_extension" type="service_closure" id="sonata.admin.twig.breadcrumbs_extension" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.admin.twig.breadcrumbs_runtime" type="service_closure" id="sonata.admin.twig.breadcrumbs_runtime" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.admin.admin_exporter" type="service_closure" id="sonata.admin.admin_exporter" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.admin.security.handler.noop" type="service_closure" id="sonata.admin.security.handler.noop" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.admin.security.handler.role" type="service_closure" id="sonata.admin.security.handler.role" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.admin.security.handler.acl" type="service_closure" id="sonata.admin.security.handler.acl" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.admin.manipulator.acl.admin" type="service_closure" id="sonata.admin.manipulator.acl.admin" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.admin.object.manipulator.acl.admin" type="service_closure" id="sonata.admin.object.manipulator.acl.admin" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.admin.entity_manager" type="service_closure" id="sonata.admin.entity_manager" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.admin.builder.orm_form" type="service_closure" id="sonata.admin.builder.orm_form" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.admin.builder.orm_list" type="service_closure" id="sonata.admin.builder.orm_list" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.admin.guesser.orm_list" type="service_closure" id="sonata.admin.guesser.orm_list" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.admin.guesser.orm_list_chain" type="service_closure" id="sonata.admin.guesser.orm_list_chain" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.admin.builder.orm_show" type="service_closure" id="sonata.admin.builder.orm_show" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.admin.guesser.orm_show" type="service_closure" id="sonata.admin.guesser.orm_show" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.admin.guesser.orm_show_chain" type="service_closure" id="sonata.admin.guesser.orm_show_chain" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.admin.builder.orm_datagrid" type="service_closure" id="sonata.admin.builder.orm_datagrid" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.admin.guesser.orm_datagrid" type="service_closure" id="sonata.admin.guesser.orm_datagrid" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.admin.guesser.orm_datagrid_chain" type="service_closure" id="sonata.admin.guesser.orm_datagrid_chain" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.admin.data_source.orm" type="service_closure" id="sonata.admin.data_source.orm" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.admin.field_description_factory.orm" type="service_closure" id="sonata.admin.field_description_factory.orm" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.admin.orm.filter.type.boolean" type="service_closure" id="sonata.admin.orm.filter.type.boolean" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.admin.orm.filter.type.callback" type="service_closure" id="sonata.admin.orm.filter.type.callback" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.admin.orm.filter.type.choice" type="service_closure" id="sonata.admin.orm.filter.type.choice" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.admin.orm.filter.type.class" type="service_closure" id="sonata.admin.orm.filter.type.class" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.admin.orm.filter.type.count" type="service_closure" id="sonata.admin.orm.filter.type.count" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.admin.orm.filter.type.date" type="service_closure" id="sonata.admin.orm.filter.type.date" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.admin.orm.filter.type.date_range" type="service_closure" id="sonata.admin.orm.filter.type.date_range" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.admin.orm.filter.type.datetime" type="service_closure" id="sonata.admin.orm.filter.type.datetime" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.admin.orm.filter.type.datetime_range" type="service_closure" id="sonata.admin.orm.filter.type.datetime_range" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.admin.orm.filter.type.empty" type="service_closure" id="sonata.admin.orm.filter.type.empty" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.admin.orm.filter.type.model" type="service_closure" id="sonata.admin.orm.filter.type.model" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.admin.orm.filter.type.null" type="service_closure" id="sonata.admin.orm.filter.type.null" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.admin.orm.filter.type.number" type="service_closure" id="sonata.admin.orm.filter.type.number" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.admin.orm.filter.type.string" type="service_closure" id="sonata.admin.orm.filter.type.string" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.admin.orm.filter.type.string_list" type="service_closure" id="sonata.admin.orm.filter.type.string_list" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.admin.orm.filter.type.time" type="service_closure" id="sonata.admin.orm.filter.type.time" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.admin.orm.filter.type.uid" type="service_closure" id="sonata.admin.orm.filter.type.uid" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.admin.orm.filter.type.model_autocomplete" type="service_closure" id="sonata.admin.orm.filter.type.model_autocomplete" on-invalid="ignore_uninitialized"/>
        <argument key="messenger.bus.default.middleware.traceable" type="service_closure" id="messenger.bus.default.middleware.traceable" on-invalid="ignore_uninitialized"/>
        <argument key="messenger.bus.default.middleware.add_bus_name_stamp_middleware" type="service_closure" id="messenger.bus.default.middleware.add_bus_name_stamp_middleware" on-invalid="ignore_uninitialized"/>
        <argument key="messenger.bus.default.middleware.send_message" type="service_closure" id="messenger.bus.default.middleware.send_message" on-invalid="ignore_uninitialized"/>
        <argument key="messenger.bus.default.middleware.handle_message" type="service_closure" id="messenger.bus.default.middleware.handle_message" on-invalid="ignore_uninitialized"/>
        <argument key="debug.traced.messenger.bus.default" type="service_closure" id="debug.traced.messenger.bus.default" on-invalid="ignore_uninitialized"/>
        <argument key="messenger.bus.default.messenger.handlers_locator" type="service_closure" id="messenger.bus.default.messenger.handlers_locator" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.dbal.logging_middleware.default" type="service_closure" id="doctrine.dbal.logging_middleware.default" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.dbal.debug_middleware.default" type="service_closure" id="doctrine.dbal.debug_middleware.default" on-invalid="ignore_uninitialized"/>
        <argument key="security.listener.csrf_protection" type="service_closure" id="security.listener.csrf_protection" on-invalid="ignore_uninitialized"/>
        <argument key="security.logout.listener.csrf_token_clearing" type="service_closure" id="security.logout.listener.csrf_token_clearing" on-invalid="ignore_uninitialized"/>
        <argument key="security.ldap_locator" type="service_closure" id="security.ldap_locator" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.logger.request" type="service_closure" id="monolog.logger.request" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.logger.console" type="service_closure" id="monolog.logger.console" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.logger.messenger" type="service_closure" id="monolog.logger.messenger" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.logger.cache" type="service_closure" id="monolog.logger.cache" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.logger.http_client" type="service_closure" id="monolog.logger.http_client" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.logger.mailer" type="service_closure" id="monolog.logger.mailer" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.logger.translation" type="service_closure" id="monolog.logger.translation" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.logger.php" type="service_closure" id="monolog.logger.php" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.logger.event" type="service_closure" id="monolog.logger.event" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.logger.router" type="service_closure" id="monolog.logger.router" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.logger.profiler" type="service_closure" id="monolog.logger.profiler" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.logger.doctrine" type="service_closure" id="monolog.logger.doctrine" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.logger.security" type="service_closure" id="monolog.logger.security" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.handler.null_internal" type="service_closure" id="monolog.handler.null_internal" on-invalid="ignore_uninitialized"/>
        <argument key="debug.security.event_dispatcher.main" type="service_closure" id="debug.security.event_dispatcher.main" on-invalid="ignore_uninitialized"/>
        <argument key="debug.validator.inner" type="service_closure" id="debug.validator.inner" on-invalid="ignore_uninitialized"/>
        <argument key="http_client.uri_template.inner" type="service_closure" id="http_client.uri_template.inner" on-invalid="ignore_uninitialized"/>
        <argument key="debug.event_dispatcher.inner" type="service_closure" id="debug.event_dispatcher.inner" on-invalid="ignore_uninitialized"/>
        <argument key="debug.controller_resolver.inner" type="service_closure" id="debug.controller_resolver.inner" on-invalid="ignore_uninitialized"/>
        <argument key="debug.argument_resolver.inner" type="service_closure" id="debug.argument_resolver.inner" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.migrations.container_aware_migrations_factory.inner" type="service_closure" id="doctrine.migrations.container_aware_migrations_factory.inner" on-invalid="ignore_uninitialized"/>
        <argument key="debug.security.access.decision_manager.inner" type="service_closure" id="debug.security.access.decision_manager.inner" on-invalid="ignore_uninitialized"/>
        <argument key="debug.security.firewall.authenticator.main.inner" type="service_closure" id="debug.security.firewall.authenticator.main.inner" on-invalid="ignore_uninitialized"/>
        <argument key="debug.traced.messenger.bus.default.inner" type="service_closure" id="debug.traced.messenger.bus.default.inner" on-invalid="ignore_uninitialized"/>
        <argument key="debug.security.event_dispatcher.main.inner" type="service_closure" id="debug.security.event_dispatcher.main.inner" on-invalid="ignore_uninitialized"/>
        <argument key="cache.app.recorder_inner" type="service_closure" id="cache.app.recorder_inner" on-invalid="ignore_uninitialized"/>
        <argument key="cache.system.recorder_inner" type="service_closure" id="cache.system.recorder_inner" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator.recorder_inner" type="service_closure" id="cache.validator.recorder_inner" on-invalid="ignore_uninitialized"/>
        <argument key="cache.serializer.recorder_inner" type="service_closure" id="cache.serializer.recorder_inner" on-invalid="ignore_uninitialized"/>
        <argument key="cache.annotations.recorder_inner" type="service_closure" id="cache.annotations.recorder_inner" on-invalid="ignore_uninitialized"/>
        <argument key="cache.property_info.recorder_inner" type="service_closure" id="cache.property_info.recorder_inner" on-invalid="ignore_uninitialized"/>
        <argument key="cache.messenger.restart_workers_signal.recorder_inner" type="service_closure" id="cache.messenger.restart_workers_signal.recorder_inner" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator_expression_language.recorder_inner" type="service_closure" id="cache.validator_expression_language.recorder_inner" on-invalid="ignore_uninitialized"/>
        <argument key="cache.doctrine.orm.default.result.recorder_inner" type="service_closure" id="cache.doctrine.orm.default.result.recorder_inner" on-invalid="ignore_uninitialized"/>
        <argument key="cache.doctrine.orm.default.query.recorder_inner" type="service_closure" id="cache.doctrine.orm.default.query.recorder_inner" on-invalid="ignore_uninitialized"/>
        <argument key="cache.security_expression_language.recorder_inner" type="service_closure" id="cache.security_expression_language.recorder_inner" on-invalid="ignore_uninitialized"/>
        <argument key="cache.security_is_granted_attribute_expression_language.recorder_inner" type="service_closure" id="cache.security_is_granted_attribute_expression_language.recorder_inner" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\DependencyInjection\ParameterBag\ContainerBagInterface" type="service_closure" id="parameter_bag" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface" type="service_closure" id="parameter_bag" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\EventDispatcher\EventDispatcherInterface" type="service_closure" id="debug.event_dispatcher" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Contracts\EventDispatcher\EventDispatcherInterface" type="service_closure" id="debug.event_dispatcher" on-invalid="ignore_uninitialized"/>
        <argument key="Psr\EventDispatcher\EventDispatcherInterface" type="service_closure" id="debug.event_dispatcher" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\HttpKernel\HttpKernelInterface" type="service_closure" id="http_kernel" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\HttpFoundation\RequestStack" type="service_closure" id="request_stack" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\HttpKernel\HttpCache\StoreInterface" type="service_closure" id="http_cache.store" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\HttpFoundation\UrlHelper" type="service_closure" id="url_helper" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\HttpKernel\KernelInterface" type="service_closure" id="kernel" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Filesystem\Filesystem" type="service_closure" id="filesystem" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\HttpKernel\Config\FileLocator" type="service_closure" id="file_locator" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\HttpFoundation\UriSigner" type="service_closure" id="uri_signer" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\HttpKernel\UriSigner" type="service_closure" id="uri_signer" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\DependencyInjection\ReverseContainer" type="service_closure" id="reverse_container" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\String\Slugger\SluggerInterface" type="service_closure" id="slugger" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Clock\ClockInterface" type="service_closure" id="clock" on-invalid="ignore_uninitialized"/>
        <argument key="Psr\Clock\ClockInterface" type="service_closure" id="clock" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\HttpKernel\Fragment\FragmentUriGeneratorInterface" type="service_closure" id="fragment.uri_generator" on-invalid="ignore_uninitialized"/>
        <argument key="error_renderer.html" type="service_closure" id="twig.error_renderer.html" on-invalid="ignore_uninitialized"/>
        <argument key="error_renderer" type="service_closure" id="error_handler.error_renderer.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="Psr\Container\ContainerInterface $parameterBag" type="service_closure" id="parameter_bag" on-invalid="ignore_uninitialized"/>
        <argument key="Psr\Cache\CacheItemPoolInterface" type="service_closure" id="cache.app" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Contracts\Cache\CacheInterface" type="service_closure" id="cache.app" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Contracts\Cache\TagAwareCacheInterface" type="service_closure" id="cache.app.taggable" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Contracts\Translation\TranslatorInterface" type="service_closure" id="translator.data_collector" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Asset\Packages" type="service_closure" id="assets.packages" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Contracts\HttpClient\HttpClientInterface" type="service_closure" id=".debug.http_client" on-invalid="ignore_uninitialized"/>
        <argument key="mailer" type="service_closure" id="mailer.mailer" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Mailer\MailerInterface" type="service_closure" id="mailer.mailer" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Mailer\Transport\TransportInterface" type="service_closure" id="mailer.default_transport" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Translation\Reader\TranslationReaderInterface" type="service_closure" id="translation.reader" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Translation\Extractor\ExtractorInterface" type="service_closure" id="translation.extractor" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Translation\Writer\TranslationWriterInterface" type="service_closure" id="translation.writer" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Contracts\Translation\LocaleAwareInterface" type="service_closure" id="translation.locale_switcher" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Translation\LocaleSwitcher" type="service_closure" id="translation.locale_switcher" on-invalid="ignore_uninitialized"/>
        <argument key="translator.formatter" type="service_closure" id="translator.formatter.default" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\ErrorHandler\ErrorRenderer\FileLinkFormatter" type="service_closure" id="debug.file_link_formatter" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Stopwatch\Stopwatch" type="service_closure" id="debug.stopwatch" on-invalid="ignore_uninitialized"/>
        <argument key="routing.loader.annotation" type="service_closure" id="routing.loader.attribute" on-invalid="ignore_uninitialized"/>
        <argument key="routing.loader.annotation.directory" type="service_closure" id="routing.loader.attribute.directory" on-invalid="ignore_uninitialized"/>
        <argument key="routing.loader.annotation.file" type="service_closure" id="routing.loader.attribute.file" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Routing\RouterInterface" type="service_closure" id="router.default" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Routing\Generator\UrlGeneratorInterface" type="service_closure" id="router.default" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Routing\Matcher\UrlMatcherInterface" type="service_closure" id="router.default" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Routing\RequestContextAwareInterface" type="service_closure" id="router.default" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Routing\RequestContext" type="service_closure" id="router.request_context" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\PropertyAccess\PropertyAccessorInterface" type="service_closure" id="property_accessor" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Serializer\SerializerInterface" type="service_closure" id="serializer" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Serializer\Normalizer\NormalizerInterface" type="service_closure" id="serializer" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Serializer\Normalizer\DenormalizerInterface" type="service_closure" id="serializer" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Serializer\Encoder\EncoderInterface" type="service_closure" id="serializer" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Serializer\Encoder\DecoderInterface" type="service_closure" id="serializer" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.property_accessor" type="service_closure" id="property_accessor" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Serializer\Mapping\ClassDiscriminatorResolverInterface" type="service_closure" id="serializer.mapping.class_discriminator_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Serializer\Normalizer\ObjectNormalizer" type="service_closure" id="serializer.normalizer.object" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Serializer\Normalizer\PropertyNormalizer" type="service_closure" id="serializer.normalizer.property" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Serializer\Mapping\Factory\ClassMetadataFactoryInterface" type="service_closure" id="serializer.mapping.class_metadata_factory" on-invalid="ignore_uninitialized"/>
        <argument key="error_renderer.serializer" type="service_closure" id="error_handler.error_renderer.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\PropertyInfo\PropertyAccessExtractorInterface" type="service_closure" id="property_info" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\PropertyInfo\PropertyDescriptionExtractorInterface" type="service_closure" id="property_info" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\PropertyInfo\PropertyInfoExtractorInterface" type="service_closure" id="property_info" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\PropertyInfo\PropertyTypeExtractorInterface" type="service_closure" id="property_info" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\PropertyInfo\PropertyListExtractorInterface" type="service_closure" id="property_info" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\PropertyInfo\PropertyInitializableExtractorInterface" type="service_closure" id="property_info" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\PropertyInfo\PropertyReadInfoExtractorInterface" type="service_closure" id="property_info.reflection_extractor" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\PropertyInfo\PropertyWriteInfoExtractorInterface" type="service_closure" id="property_info.reflection_extractor" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\WebLink\HttpHeaderSerializer" type="service_closure" id="web_link.http_header_serializer" on-invalid="ignore_uninitialized"/>
        <argument key="cache.default_redis_provider" type="service_closure" id=".cache_connection.GD_MSZC" on-invalid="ignore_uninitialized"/>
        <argument key="cache.default_memcached_provider" type="service_closure" id=".cache_connection.JKE6keX" on-invalid="ignore_uninitialized"/>
        <argument key="cache.default_doctrine_dbal_provider" type="service_closure" id="doctrine.dbal.default_connection" on-invalid="ignore_uninitialized"/>
        <argument key="SessionHandlerInterface" type="service_closure" id="session.handler.native" on-invalid="ignore_uninitialized"/>
        <argument key="session.storage.factory" type="service_closure" id="session.storage.factory.mock_file" on-invalid="ignore_uninitialized"/>
        <argument key="session.handler" type="service_closure" id="session.handler.native" on-invalid="ignore_uninitialized"/>
        <argument key="session_listener" type="service_closure" id="test.session.listener" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Security\Csrf\TokenGenerator\TokenGeneratorInterface" type="service_closure" id="security.csrf.token_generator" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Security\Csrf\TokenStorage\TokenStorageInterface" type="service_closure" id="security.csrf.token_storage" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Security\Csrf\CsrfTokenManagerInterface" type="service_closure" id="security.csrf.token_manager" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Form\ResolvedFormTypeFactoryInterface" type="service_closure" id="form.resolved_type_factory" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Form\FormRegistryInterface" type="service_closure" id="form.registry" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Form\FormFactoryInterface" type="service_closure" id="form.factory" on-invalid="ignore_uninitialized"/>
        <argument key="form.property_accessor" type="service_closure" id="property_accessor" on-invalid="ignore_uninitialized"/>
        <argument key="form.choice_list_factory" type="service_closure" id="form.choice_list_factory.cached" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Validator\Validator\ValidatorInterface" type="service_closure" id="debug.validator" on-invalid="ignore_uninitialized"/>
        <argument key="validator.mapping.class_metadata_factory" type="service_closure" id="debug.validator" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Messenger\Transport\Serialization\SerializerInterface" type="service_closure" id="messenger.transport.native_php_serializer" on-invalid="ignore_uninitialized"/>
        <argument key="messenger.default_serializer" type="service_closure" id="messenger.transport.native_php_serializer" on-invalid="ignore_uninitialized"/>
        <argument key="messenger.listener.stop_worker_on_sigterm_signal_listener" type="service_closure" id="messenger.listener.stop_worker_signals_listener" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Messenger\MessageBusInterface" type="service_closure" id="debug.traced.messenger.bus.default" on-invalid="ignore_uninitialized"/>
        <argument key="messenger.failure_transports.default" type="service_closure" id="messenger.transport.failed" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Notifier\NotifierInterface" type="service_closure" id="notifier" on-invalid="ignore_uninitialized"/>
        <argument key="notifier.logger_notification_listener" type="service_closure" id="notifier.notification_logger_listener" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Mime\MimeTypesInterface" type="service_closure" id="mime_types" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Mime\MimeTypeGuesserInterface" type="service_closure" id="mime_types" on-invalid="ignore_uninitialized"/>
        <argument key="Doctrine\DBAL\Connection" type="service_closure" id="doctrine.dbal.default_connection" on-invalid="ignore_uninitialized"/>
        <argument key="Doctrine\Persistence\ManagerRegistry" type="service_closure" id="doctrine" on-invalid="ignore_uninitialized"/>
        <argument key="Doctrine\Common\Persistence\ManagerRegistry" type="service_closure" id="doctrine" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.dbal.event_manager" type="service_closure" id="doctrine.dbal.default_connection.event_manager" on-invalid="ignore_uninitialized"/>
        <argument key="Doctrine\DBAL\Connection $defaultConnection" type="service_closure" id="doctrine.dbal.default_connection" on-invalid="ignore_uninitialized"/>
        <argument key="Doctrine\ORM\EntityManagerInterface" type="service_closure" id="doctrine.orm.default_entity_manager" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.default_metadata_cache" type="service_closure" id="cache.doctrine.orm.default.metadata" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.default_result_cache" type="service_closure" id="cache.doctrine.orm.default.result" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.default_query_cache" type="service_closure" id="cache.doctrine.orm.default.query" on-invalid="ignore_uninitialized"/>
        <argument key="Doctrine\ORM\EntityManagerInterface $defaultEntityManager" type="service_closure" id="doctrine.orm.default_entity_manager" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.default_entity_manager.event_manager" type="service_closure" id="doctrine.dbal.default_connection.event_manager" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.migrations.metadata_storage" type="service_closure" id="doctrine.migrations.storage.table_storage" on-invalid="ignore_uninitialized"/>
        <argument key="Twig_Environment" type="service_closure" id="twig" on-invalid="ignore_uninitialized"/>
        <argument key="Twig\Environment" type="service_closure" id="twig" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Mime\BodyRendererInterface" type="service_closure" id="twig.mime_body_renderer" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Security\Core\Authorization\AuthorizationCheckerInterface" type="service_closure" id="security.authorization_checker" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorageInterface" type="service_closure" id="security.token_storage" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Bundle\SecurityBundle\Security" type="service_closure" id="security.helper" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Security\Core\Security" type="service_closure" id="security.helper" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Security\Http\Session\SessionAuthenticationStrategyInterface" type="service_closure" id="security.authentication.session_strategy" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Security\Http\Authentication\AuthenticationUtils" type="service_closure" id="security.authentication_utils" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Security\Core\Authorization\AccessDecisionManagerInterface" type="service_closure" id="debug.security.access.decision_manager" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Security\Core\Role\RoleHierarchyInterface" type="service_closure" id="security.role_hierarchy" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Security\Http\Firewall" type="service_closure" id="debug.security.firewall" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Security\Http\FirewallMapInterface" type="service_closure" id="security.firewall.map" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Security\Http\HttpUtils" type="service_closure" id="security.http_utils" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\PasswordHasher\Hasher\PasswordHasherFactoryInterface" type="service_closure" id="security.password_hasher_factory" on-invalid="ignore_uninitialized"/>
        <argument key="security.password_hasher" type="service_closure" id="security.user_password_hasher" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\PasswordHasher\Hasher\UserPasswordHasherInterface" type="service_closure" id="security.user_password_hasher" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Security\Http\Authentication\UserAuthenticatorInterface" type="service_closure" id="security.user_authenticator" on-invalid="ignore_uninitialized"/>
        <argument key="security.firewall" type="service_closure" id="debug.security.firewall" on-invalid="ignore_uninitialized"/>
        <argument key="security.user_providers" type="service_closure" id="security.user.provider.concrete.users_in_memory" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Security\Core\User\UserProviderInterface" type="service_closure" id="security.user.provider.concrete.users_in_memory" on-invalid="ignore_uninitialized"/>
        <argument key="security.authentication.session_strategy.main" type="service_closure" id="security.authentication.session_strategy" on-invalid="ignore_uninitialized"/>
        <argument key="security.user_checker.main" type="service_closure" id="security.user_checker" on-invalid="ignore_uninitialized"/>
        <argument key="security.firewall.context_locator" type="service_closure" id=".service_locator.zJyh7qS" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Security\Core\User\UserCheckerInterface" type="service_closure" id="security.user_checker" on-invalid="ignore_uninitialized"/>
        <argument key="logger" type="service_closure" id="monolog.logger" on-invalid="ignore_uninitialized"/>
        <argument key="Psr\Log\LoggerInterface" type="service_closure" id="monolog.logger" on-invalid="ignore_uninitialized"/>
        <argument key="Sonata\Exporter\Exporter" type="service_closure" id="sonata.exporter.exporter" on-invalid="ignore_uninitialized"/>
        <argument key="Sonata\Exporter\ExporterInterface" type="service_closure" id="sonata.exporter.exporter" on-invalid="ignore_uninitialized"/>
        <argument key="Sonata\BlockBundle\Templating\Helper\BlockHelper" type="service_closure" id="sonata.block.templating.helper" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.block.context_manager" type="service_closure" id="sonata.block.context_manager.default" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.block.renderer" type="service_closure" id="sonata.block.renderer.default" on-invalid="ignore_uninitialized"/>
        <argument key="Knp\Menu\Provider\MenuProviderInterface" type="service_closure" id="knp_menu.menu_provider.chain" on-invalid="ignore_uninitialized"/>
        <argument key="Knp\Menu\FactoryInterface" type="service_closure" id="knp_menu.factory" on-invalid="ignore_uninitialized"/>
        <argument key="Knp\Menu\Matcher\MatcherInterface" type="service_closure" id="knp_menu.matcher" on-invalid="ignore_uninitialized"/>
        <argument key="Knp\Menu\Util\MenuManipulator" type="service_closure" id="knp_menu.manipulator" on-invalid="ignore_uninitialized"/>
        <argument key="Sonata\AdminBundle\Admin\Pool" type="service_closure" id="sonata.admin.pool" on-invalid="ignore_uninitialized"/>
        <argument key="Sonata\AdminBundle\Filter\FilterFactoryInterface" type="service_closure" id="sonata.admin.builder.filter.factory" on-invalid="ignore_uninitialized"/>
        <argument key="Sonata\AdminBundle\Admin\BreadcrumbsBuilderInterface" type="service_closure" id="sonata.admin.breadcrumbs_builder" on-invalid="ignore_uninitialized"/>
        <argument key="Sonata\AdminBundle\Translator\LabelTranslatorStrategyInterface" type="service_closure" id="sonata.admin.label.strategy.native" on-invalid="ignore_uninitialized"/>
        <argument key="Sonata\AdminBundle\Model\AuditManagerInterface" type="service_closure" id="sonata.admin.audit.manager" on-invalid="ignore_uninitialized"/>
        <argument key="Sonata\AdminBundle\Search\SearchHandlerInterface" type="service_closure" id="sonata.admin.search.handler" on-invalid="ignore_uninitialized"/>
        <argument key="Sonata\AdminBundle\Filter\Persister\FilterPersisterInterface" type="service_closure" id="sonata.admin.filter_persister.session" on-invalid="ignore_uninitialized"/>
        <argument key="Sonata\AdminBundle\Request\AdminFetcherInterface" type="service_closure" id="sonata.admin.request.fetcher" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.admin.twig.extension" type="service_closure" id="sonata.admin.twig.sonata_admin_extension" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.templates.twig.extension" type="service_closure" id="sonata.admin.twig.template_registry_extension" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.admin.group.extension" type="service_closure" id="sonata.admin.twig.group_extension" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.security.twig.extension" type="service_closure" id="sonata.admin.twig.security_extension" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.canonicalize.twig.extension" type="service_closure" id="sonata.admin.twig.canonicalize_extension" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.xeditable.twig.extension" type="service_closure" id="sonata.admin.twig.xeditable_extension" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.render_element.twig.extension" type="service_closure" id="sonata.admin.twig.render_element_extension" on-invalid="ignore_uninitialized"/>
        <argument key="Sonata\AdminBundle\Bridge\Exporter\AdminExporter" type="service_closure" id="sonata.admin.admin_exporter" on-invalid="ignore_uninitialized"/>
        <argument key="sonata.admin.security.handler" type="service_closure" id="sonata.admin.security.handler.noop" on-invalid="ignore_uninitialized"/>
        <argument key="Sonata\AdminBundle\Util\AdminObjectAclManipulator" type="service_closure" id="sonata.admin.object.manipulator.acl.admin" on-invalid="ignore_uninitialized"/>
        <argument key="twig.loader.filesystem" type="service_closure" id="twig.loader.native_filesystem" on-invalid="ignore_uninitialized"/>
        <argument key="argument_resolver.controller_locator" type="service_closure" id=".service_locator.iAuVEDq" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.id_generator_locator" type="service_closure" id=".service_locator.KLVvNIq" on-invalid="ignore_uninitialized"/>
        <argument key="twig.loader" type="service_closure" id="twig.loader.native_filesystem" on-invalid="ignore_uninitialized"/>
        <argument key="Psr\Log\LoggerInterface $requestLogger" type="service_closure" id="monolog.logger.request" on-invalid="ignore_uninitialized"/>
        <argument key="Psr\Log\LoggerInterface $consoleLogger" type="service_closure" id="monolog.logger.console" on-invalid="ignore_uninitialized"/>
        <argument key="Psr\Log\LoggerInterface $messengerLogger" type="service_closure" id="monolog.logger.messenger" on-invalid="ignore_uninitialized"/>
        <argument key="Psr\Log\LoggerInterface $cacheLogger" type="service_closure" id="monolog.logger.cache" on-invalid="ignore_uninitialized"/>
        <argument key="Psr\Log\LoggerInterface $httpClientLogger" type="service_closure" id="monolog.logger.http_client" on-invalid="ignore_uninitialized"/>
        <argument key="Psr\Log\LoggerInterface $mailerLogger" type="service_closure" id="monolog.logger.mailer" on-invalid="ignore_uninitialized"/>
        <argument key="Psr\Log\LoggerInterface $translationLogger" type="service_closure" id="monolog.logger.translation" on-invalid="ignore_uninitialized"/>
        <argument key="Psr\Log\LoggerInterface $phpLogger" type="service_closure" id="monolog.logger.php" on-invalid="ignore_uninitialized"/>
        <argument key="Psr\Log\LoggerInterface $eventLogger" type="service_closure" id="monolog.logger.event" on-invalid="ignore_uninitialized"/>
        <argument key="Psr\Log\LoggerInterface $routerLogger" type="service_closure" id="monolog.logger.router" on-invalid="ignore_uninitialized"/>
        <argument key="Psr\Log\LoggerInterface $profilerLogger" type="service_closure" id="monolog.logger.profiler" on-invalid="ignore_uninitialized"/>
        <argument key="Psr\Log\LoggerInterface $doctrineLogger" type="service_closure" id="monolog.logger.doctrine" on-invalid="ignore_uninitialized"/>
        <argument key="Psr\Log\LoggerInterface $securityLogger" type="service_closure" id="monolog.logger.security" on-invalid="ignore_uninitialized"/>
        <argument key="Psr\Log\LoggerInterface $deprecationLogger" type="service_closure" id="monolog.logger.deprecation" on-invalid="ignore_uninitialized"/>
        <argument key="knp_menu.menu_provider" type="service_closure" id="knp_menu.menu_provider.chain" on-invalid="ignore_uninitialized"/>
        <argument key="validator" type="service_closure" id="debug.validator" on-invalid="ignore_uninitialized"/>
        <argument key="http_client" type="service_closure" id=".debug.http_client" on-invalid="ignore_uninitialized"/>
        <argument key="controller_resolver" type="service_closure" id="debug.controller_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="argument_resolver" type="service_closure" id="debug.argument_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="translator.data_collector.inner" type="service_closure" id="translator.default" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.migrations.migrations_factory" type="service_closure" id="doctrine.migrations.container_aware_migrations_factory" on-invalid="ignore_uninitialized"/>
        <argument key="twig.error_renderer.html.inner" type="service_closure" id="error_handler.error_renderer.html" on-invalid="ignore_uninitialized"/>
        <argument key="security.access.decision_manager" type="service_closure" id="debug.security.access.decision_manager" on-invalid="ignore_uninitialized"/>
        <argument key="security.firewall.authenticator.main" type="service_closure" id="debug.security.firewall.authenticator.main" on-invalid="ignore_uninitialized"/>
        <argument key="messenger.bus.default" type="service_closure" id="debug.traced.messenger.bus.default" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.default_metadata_driver" type="service_closure" id=".doctrine.orm.default_metadata_driver" on-invalid="ignore_uninitialized"/>
        <argument key="security.event_dispatcher.main" type="service_closure" id="debug.security.event_dispatcher.main" on-invalid="ignore_uninitialized"/>
      </argument>
    </service>
    <service id="assets.packages" class="Symfony\Component\Asset\Packages">
      <argument type="service" id="assets._default_package"/>
      <argument type="tagged_iterator" tag="assets.package" index-by="package" default-index-method="getDefaultPackageName" default-priority-method="getDefaultPackagePriority"/>
    </service>
    <service id="assets.empty_package" class="Symfony\Component\Asset\Package">
      <argument type="service" id="assets.empty_version_strategy"/>
    </service>
    <service id="assets.context" class="Symfony\Component\Asset\Context\RequestStackContext">
      <argument type="service" id="request_stack"/>
      <argument type="service">
        <service class="string">
          <factory service="router.request_context" method="getBaseUrl"/>
        </service>
      </argument>
      <argument type="service">
        <service class="bool">
          <factory service="router.request_context" method="isSecure"/>
        </service>
      </argument>
    </service>
    <service id="assets.path_package" class="Symfony\Component\Asset\PathPackage" abstract="true">
      <argument type="abstract">base path</argument>
      <argument type="abstract">version strategy</argument>
      <argument type="service" id="assets.context"/>
    </service>
    <service id="assets.url_package" class="Symfony\Component\Asset\UrlPackage" abstract="true">
      <argument type="abstract">base URLs</argument>
      <argument type="abstract">version strategy</argument>
      <argument type="service" id="assets.context"/>
    </service>
    <service id="assets.static_version_strategy" class="Symfony\Component\Asset\VersionStrategy\StaticVersionStrategy" abstract="true">
      <argument type="abstract">version</argument>
      <argument type="abstract">format</argument>
    </service>
    <service id="assets.empty_version_strategy" class="Symfony\Component\Asset\VersionStrategy\EmptyVersionStrategy"/>
    <service id="assets.json_manifest_version_strategy" class="Symfony\Component\Asset\VersionStrategy\JsonManifestVersionStrategy" abstract="true">
      <argument type="abstract">manifest path</argument>
      <argument type="service" id=".debug.http_client" on-invalid="null"/>
      <argument>false</argument>
    </service>
    <service id="assets._default_package" class="Symfony\Component\Asset\PathPackage">
      <argument></argument>
      <argument type="service" id="assets.empty_version_strategy"/>
      <argument type="service" id="assets.context"/>
    </service>
    <service id="http_client.transport" class="Symfony\Contracts\HttpClient\HttpClientInterface">
      <tag name="monolog.logger" channel="http_client"/>
      <tag name="kernel.reset" method="reset" on_invalid="ignore"/>
      <argument type="collection"/>
      <argument>6</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.http_client" on-invalid="ignore"/>
      </call>
      <factory class="Symfony\Component\HttpClient\HttpClient" method="create"/>
    </service>
    <service id="http_client.abstract_retry_strategy" class="Symfony\Component\HttpClient\Retry\GenericRetryStrategy" abstract="true">
      <argument type="abstract">http codes</argument>
      <argument type="abstract">delay ms</argument>
      <argument type="abstract">multiplier</argument>
      <argument type="abstract">max delay ms</argument>
      <argument type="abstract">jitter</argument>
    </service>
    <service id="http_client.uri_template" class="Symfony\Component\HttpClient\UriTemplateHttpClient">
      <argument type="service" id="http_client.uri_template.inner"/>
      <argument>null</argument>
      <argument type="collection"/>
    </service>
    <service id="http_client.uri_template_expander.guzzle" class="Closure">
      <argument type="collection">
        <argument>GuzzleHttp\UriTemplate\UriTemplate</argument>
        <argument>expand</argument>
      </argument>
      <factory class="Closure" method="fromCallable"/>
    </service>
    <service id="http_client.uri_template_expander.rize" class="Closure">
      <argument type="collection">
        <argument type="service">
          <service class="Rize\UriTemplate"/>
        </argument>
        <argument>expand</argument>
      </argument>
      <factory class="Closure" method="fromCallable"/>
    </service>
    <service id="http_client.messenger.ping_webhook_handler" class="Symfony\Component\HttpClient\Messenger\PingWebhookMessageHandler">
      <tag name="messenger.message_handler"/>
      <argument type="service" id=".debug.http_client"/>
    </service>
    <service id="mailer.mailer" class="Symfony\Component\Mailer\Mailer">
      <argument type="service" id="mailer.transports"/>
      <argument type="service" id="debug.traced.messenger.bus.default" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="ignore"/>
    </service>
    <service id="mailer.transports" class="Symfony\Component\Mailer\Transport\Transports">
      <argument type="collection">
        <argument key="main">%env(MAILER_DSN)%</argument>
      </argument>
      <factory service="mailer.transport_factory" method="fromStrings"/>
    </service>
    <service id="mailer.transport_factory" class="Symfony\Component\Mailer\Transport">
      <argument type="tagged_iterator" tag="mailer.transport_factory"/>
    </service>
    <service id="mailer.default_transport" class="Symfony\Component\Mailer\Transport\TransportInterface">
      <argument>%env(MAILER_DSN)%</argument>
      <factory service="mailer.transport_factory" method="fromString"/>
    </service>
    <service id="mailer.messenger.message_handler" class="Symfony\Component\Mailer\Messenger\MessageHandler">
      <tag name="messenger.message_handler"/>
      <argument type="service" id="mailer.transports"/>
    </service>
    <service id="mailer.envelope_listener" class="Symfony\Component\Mailer\EventListener\EnvelopeListener">
      <tag name="kernel.event_subscriber"/>
      <argument>null</argument>
      <argument>null</argument>
    </service>
    <service id="mailer.message_logger_listener" class="Symfony\Component\Mailer\EventListener\MessageLoggerListener">
      <tag name="kernel.reset" method="reset"/>
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="mailer.messenger_transport_listener" class="Symfony\Component\Mailer\EventListener\MessengerTransportListener">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="console.command.mailer_test" class="Symfony\Component\Mailer\Command\MailerTestCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="mailer.transports"/>
      <call method="setName">
        <argument>mailer:test</argument>
      </call>
      <call method="setDescription">
        <argument>Test Mailer transports by sending an email</argument>
      </call>
    </service>
    <service id="mailer.transport_factory.abstract" class="Symfony\Component\Mailer\Transport\AbstractTransportFactory" abstract="true">
      <tag name="monolog.logger" channel="mailer"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id=".debug.http_client" on-invalid="ignore"/>
      <argument type="service" id="monolog.logger.mailer" on-invalid="ignore"/>
    </service>
    <service id="mailer.transport_factory.null" class="Symfony\Component\Mailer\Transport\NullTransportFactory">
      <tag name="mailer.transport_factory"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id=".debug.http_client" on-invalid="ignore"/>
      <argument type="service" id="monolog.logger.mailer" on-invalid="ignore"/>
    </service>
    <service id="mailer.transport_factory.sendmail" class="Symfony\Component\Mailer\Transport\SendmailTransportFactory">
      <tag name="mailer.transport_factory"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id=".debug.http_client" on-invalid="ignore"/>
      <argument type="service" id="monolog.logger.mailer" on-invalid="ignore"/>
    </service>
    <service id="mailer.transport_factory.smtp" class="Symfony\Component\Mailer\Transport\Smtp\EsmtpTransportFactory">
      <tag name="mailer.transport_factory" priority="-100"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id=".debug.http_client" on-invalid="ignore"/>
      <argument type="service" id="monolog.logger.mailer" on-invalid="ignore"/>
    </service>
    <service id="mailer.transport_factory.native" class="Symfony\Component\Mailer\Transport\NativeTransportFactory">
      <tag name="mailer.transport_factory"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id=".debug.http_client" on-invalid="ignore"/>
      <argument type="service" id="monolog.logger.mailer" on-invalid="ignore"/>
    </service>
    <service id="translator.default" class="Symfony\Bundle\FrameworkBundle\Translation\Translator">
      <tag name="kernel.locale_aware"/>
      <argument type="service" id=".service_locator.yY.p4P7"/>
      <argument type="service" id="translator.formatter.default"/>
      <argument>en</argument>
      <argument type="collection">
        <argument key="translation.loader.php" type="collection">
          <argument>php</argument>
        </argument>
        <argument key="translation.loader.yml" type="collection">
          <argument>yaml</argument>
          <argument>yml</argument>
        </argument>
        <argument key="translation.loader.xliff" type="collection">
          <argument>xlf</argument>
          <argument>xliff</argument>
        </argument>
        <argument key="translation.loader.po" type="collection">
          <argument>po</argument>
        </argument>
        <argument key="translation.loader.mo" type="collection">
          <argument>mo</argument>
        </argument>
        <argument key="translation.loader.qt" type="collection">
          <argument>ts</argument>
        </argument>
        <argument key="translation.loader.csv" type="collection">
          <argument>csv</argument>
        </argument>
        <argument key="translation.loader.res" type="collection">
          <argument>res</argument>
        </argument>
        <argument key="translation.loader.dat" type="collection">
          <argument>dat</argument>
        </argument>
        <argument key="translation.loader.ini" type="collection">
          <argument>ini</argument>
        </argument>
        <argument key="translation.loader.json" type="collection">
          <argument>json</argument>
        </argument>
      </argument>
      <argument type="collection">
        <argument key="cache_dir">/var/www/project/var/cache/test/translations</argument>
        <argument key="debug">true</argument>
        <argument key="resource_files" type="collection">
          <argument key="af" type="collection">
            <argument>/var/www/project/vendor/symfony/validator/Resources/translations/validators.af.xlf</argument>
            <argument>/var/www/project/vendor/symfony/form/Resources/translations/validators.af.xlf</argument>
            <argument>/var/www/project/vendor/symfony/security-core/Resources/translations/security.af.xlf</argument>
          </argument>
          <argument key="ar" type="collection">
            <argument>/var/www/project/vendor/symfony/validator/Resources/translations/validators.ar.xlf</argument>
            <argument>/var/www/project/vendor/symfony/form/Resources/translations/validators.ar.xlf</argument>
            <argument>/var/www/project/vendor/symfony/security-core/Resources/translations/security.ar.xlf</argument>
            <argument>/var/www/project/vendor/sonata-project/form-extensions/src/Bridge/Symfony/Resources/translations/SonataFormBundle.ar.xliff</argument>
            <argument>/var/www/project/vendor/sonata-project/block-bundle/src/Resources/translations/SonataBlockBundle.ar.xliff</argument>
            <argument>/var/www/project/vendor/sonata-project/admin-bundle/src/Resources/translations/SonataAdminBundle.ar.xliff</argument>
          </argument>
          <argument key="az" type="collection">
            <argument>/var/www/project/vendor/symfony/validator/Resources/translations/validators.az.xlf</argument>
            <argument>/var/www/project/vendor/symfony/form/Resources/translations/validators.az.xlf</argument>
            <argument>/var/www/project/vendor/symfony/security-core/Resources/translations/security.az.xlf</argument>
          </argument>
          <argument key="be" type="collection">
            <argument>/var/www/project/vendor/symfony/validator/Resources/translations/validators.be.xlf</argument>
            <argument>/var/www/project/vendor/symfony/form/Resources/translations/validators.be.xlf</argument>
            <argument>/var/www/project/vendor/symfony/security-core/Resources/translations/security.be.xlf</argument>
          </argument>
          <argument key="bg" type="collection">
            <argument>/var/www/project/vendor/symfony/validator/Resources/translations/validators.bg.xlf</argument>
            <argument>/var/www/project/vendor/symfony/form/Resources/translations/validators.bg.xlf</argument>
            <argument>/var/www/project/vendor/symfony/security-core/Resources/translations/security.bg.xlf</argument>
            <argument>/var/www/project/vendor/sonata-project/form-extensions/src/Bridge/Symfony/Resources/translations/SonataFormBundle.bg.xliff</argument>
            <argument>/var/www/project/vendor/sonata-project/admin-bundle/src/Resources/translations/SonataAdminBundle.bg.xliff</argument>
          </argument>
          <argument key="bs" type="collection">
            <argument>/var/www/project/vendor/symfony/validator/Resources/translations/validators.bs.xlf</argument>
            <argument>/var/www/project/vendor/symfony/form/Resources/translations/validators.bs.xlf</argument>
            <argument>/var/www/project/vendor/symfony/security-core/Resources/translations/security.bs.xlf</argument>
            <argument>/var/www/project/vendor/sonata-project/admin-bundle/src/Resources/translations/SonataAdminBundle.bs.xliff</argument>
          </argument>
          <argument key="ca" type="collection">
            <argument>/var/www/project/vendor/symfony/validator/Resources/translations/validators.ca.xlf</argument>
            <argument>/var/www/project/vendor/symfony/form/Resources/translations/validators.ca.xlf</argument>
            <argument>/var/www/project/vendor/symfony/security-core/Resources/translations/security.ca.xlf</argument>
            <argument>/var/www/project/vendor/sonata-project/form-extensions/src/Bridge/Symfony/Resources/translations/SonataFormBundle.ca.xliff</argument>
            <argument>/var/www/project/vendor/sonata-project/admin-bundle/src/Resources/translations/SonataAdminBundle.ca.xliff</argument>
          </argument>
          <argument key="cs" type="collection">
            <argument>/var/www/project/vendor/symfony/validator/Resources/translations/validators.cs.xlf</argument>
            <argument>/var/www/project/vendor/symfony/form/Resources/translations/validators.cs.xlf</argument>
            <argument>/var/www/project/vendor/symfony/security-core/Resources/translations/security.cs.xlf</argument>
            <argument>/var/www/project/vendor/sonata-project/form-extensions/src/Bridge/Symfony/Resources/translations/SonataFormBundle.cs.xliff</argument>
            <argument>/var/www/project/vendor/sonata-project/admin-bundle/src/Resources/translations/SonataAdminBundle.cs.xliff</argument>
          </argument>
          <argument key="cy" type="collection">
            <argument>/var/www/project/vendor/symfony/validator/Resources/translations/validators.cy.xlf</argument>
            <argument>/var/www/project/vendor/symfony/form/Resources/translations/validators.cy.xlf</argument>
            <argument>/var/www/project/vendor/symfony/security-core/Resources/translations/security.cy.xlf</argument>
          </argument>
          <argument key="da" type="collection">
            <argument>/var/www/project/vendor/symfony/validator/Resources/translations/validators.da.xlf</argument>
            <argument>/var/www/project/vendor/symfony/form/Resources/translations/validators.da.xlf</argument>
            <argument>/var/www/project/vendor/symfony/security-core/Resources/translations/security.da.xlf</argument>
          </argument>
          <argument key="de" type="collection">
            <argument>/var/www/project/vendor/symfony/validator/Resources/translations/validators.de.xlf</argument>
            <argument>/var/www/project/vendor/symfony/form/Resources/translations/validators.de.xlf</argument>
            <argument>/var/www/project/vendor/symfony/security-core/Resources/translations/security.de.xlf</argument>
            <argument>/var/www/project/vendor/sonata-project/twig-extensions/src/Bridge/Symfony/Resources/translations/SonataTwigBundle.de.xliff</argument>
            <argument>/var/www/project/vendor/sonata-project/form-extensions/src/Bridge/Symfony/Resources/translations/SonataFormBundle.de.xliff</argument>
            <argument>/var/www/project/vendor/sonata-project/block-bundle/src/Resources/translations/SonataBlockBundle.de.xliff</argument>
            <argument>/var/www/project/vendor/sonata-project/block-bundle/src/Resources/translations/validators.de.xliff</argument>
            <argument>/var/www/project/vendor/sonata-project/admin-bundle/src/Resources/translations/SonataAdminBundle.de.xliff</argument>
          </argument>
          <argument key="el" type="collection">
            <argument>/var/www/project/vendor/symfony/validator/Resources/translations/validators.el.xlf</argument>
            <argument>/var/www/project/vendor/symfony/form/Resources/translations/validators.el.xlf</argument>
            <argument>/var/www/project/vendor/symfony/security-core/Resources/translations/security.el.xlf</argument>
          </argument>
          <argument key="en" type="collection">
            <argument>/var/www/project/vendor/symfony/validator/Resources/translations/validators.en.xlf</argument>
            <argument>/var/www/project/vendor/symfony/form/Resources/translations/validators.en.xlf</argument>
            <argument>/var/www/project/vendor/symfony/security-core/Resources/translations/security.en.xlf</argument>
            <argument>/var/www/project/vendor/sonata-project/twig-extensions/src/Bridge/Symfony/Resources/translations/SonataTwigBundle.en.xliff</argument>
            <argument>/var/www/project/vendor/sonata-project/form-extensions/src/Bridge/Symfony/Resources/translations/SonataFormBundle.en.xliff</argument>
            <argument>/var/www/project/vendor/sonata-project/block-bundle/src/Resources/translations/SonataBlockBundle.en.xliff</argument>
            <argument>/var/www/project/vendor/sonata-project/block-bundle/src/Resources/translations/validators.en.xliff</argument>
            <argument>/var/www/project/vendor/sonata-project/admin-bundle/src/Resources/translations/SonataAdminBundle.en.xliff</argument>
          </argument>
          <argument key="es" type="collection">
            <argument>/var/www/project/vendor/symfony/validator/Resources/translations/validators.es.xlf</argument>
            <argument>/var/www/project/vendor/symfony/form/Resources/translations/validators.es.xlf</argument>
            <argument>/var/www/project/vendor/symfony/security-core/Resources/translations/security.es.xlf</argument>
            <argument>/var/www/project/vendor/sonata-project/form-extensions/src/Bridge/Symfony/Resources/translations/SonataFormBundle.es.xliff</argument>
            <argument>/var/www/project/vendor/sonata-project/admin-bundle/src/Resources/translations/SonataAdminBundle.es.xliff</argument>
          </argument>
          <argument key="et" type="collection">
            <argument>/var/www/project/vendor/symfony/validator/Resources/translations/validators.et.xlf</argument>
            <argument>/var/www/project/vendor/symfony/form/Resources/translations/validators.et.xlf</argument>
            <argument>/var/www/project/vendor/symfony/security-core/Resources/translations/security.et.xlf</argument>
          </argument>
          <argument key="eu" type="collection">
            <argument>/var/www/project/vendor/symfony/validator/Resources/translations/validators.eu.xlf</argument>
            <argument>/var/www/project/vendor/symfony/form/Resources/translations/validators.eu.xlf</argument>
            <argument>/var/www/project/vendor/symfony/security-core/Resources/translations/security.eu.xlf</argument>
            <argument>/var/www/project/vendor/sonata-project/form-extensions/src/Bridge/Symfony/Resources/translations/SonataFormBundle.eu.xliff</argument>
            <argument>/var/www/project/vendor/sonata-project/admin-bundle/src/Resources/translations/SonataAdminBundle.eu.xliff</argument>
          </argument>
          <argument key="fa" type="collection">
            <argument>/var/www/project/vendor/symfony/validator/Resources/translations/validators.fa.xlf</argument>
            <argument>/var/www/project/vendor/symfony/form/Resources/translations/validators.fa.xlf</argument>
            <argument>/var/www/project/vendor/symfony/security-core/Resources/translations/security.fa.xlf</argument>
            <argument>/var/www/project/vendor/sonata-project/form-extensions/src/Bridge/Symfony/Resources/translations/SonataFormBundle.fa.xliff</argument>
            <argument>/var/www/project/vendor/sonata-project/admin-bundle/src/Resources/translations/SonataAdminBundle.fa.xliff</argument>
          </argument>
          <argument key="fi" type="collection">
            <argument>/var/www/project/vendor/symfony/validator/Resources/translations/validators.fi.xlf</argument>
            <argument>/var/www/project/vendor/symfony/form/Resources/translations/validators.fi.xlf</argument>
            <argument>/var/www/project/vendor/symfony/security-core/Resources/translations/security.fi.xlf</argument>
            <argument>/var/www/project/vendor/sonata-project/form-extensions/src/Bridge/Symfony/Resources/translations/SonataFormBundle.fi.xliff</argument>
          </argument>
          <argument key="fr" type="collection">
            <argument>/var/www/project/vendor/symfony/validator/Resources/translations/validators.fr.xlf</argument>
            <argument>/var/www/project/vendor/symfony/form/Resources/translations/validators.fr.xlf</argument>
            <argument>/var/www/project/vendor/symfony/security-core/Resources/translations/security.fr.xlf</argument>
            <argument>/var/www/project/vendor/sonata-project/twig-extensions/src/Bridge/Symfony/Resources/translations/SonataTwigBundle.fr.xliff</argument>
            <argument>/var/www/project/vendor/sonata-project/form-extensions/src/Bridge/Symfony/Resources/translations/SonataFormBundle.fr.xliff</argument>
            <argument>/var/www/project/vendor/sonata-project/block-bundle/src/Resources/translations/SonataBlockBundle.fr.xliff</argument>
            <argument>/var/www/project/vendor/sonata-project/block-bundle/src/Resources/translations/validators.fr.xliff</argument>
            <argument>/var/www/project/vendor/sonata-project/admin-bundle/src/Resources/translations/SonataAdminBundle.fr.xliff</argument>
          </argument>
          <argument key="gl" type="collection">
            <argument>/var/www/project/vendor/symfony/validator/Resources/translations/validators.gl.xlf</argument>
            <argument>/var/www/project/vendor/symfony/form/Resources/translations/validators.gl.xlf</argument>
            <argument>/var/www/project/vendor/symfony/security-core/Resources/translations/security.gl.xlf</argument>
          </argument>
          <argument key="he" type="collection">
            <argument>/var/www/project/vendor/symfony/validator/Resources/translations/validators.he.xlf</argument>
            <argument>/var/www/project/vendor/symfony/form/Resources/translations/validators.he.xlf</argument>
            <argument>/var/www/project/vendor/symfony/security-core/Resources/translations/security.he.xlf</argument>
          </argument>
          <argument key="hr" type="collection">
            <argument>/var/www/project/vendor/symfony/validator/Resources/translations/validators.hr.xlf</argument>
            <argument>/var/www/project/vendor/symfony/form/Resources/translations/validators.hr.xlf</argument>
            <argument>/var/www/project/vendor/symfony/security-core/Resources/translations/security.hr.xlf</argument>
            <argument>/var/www/project/vendor/sonata-project/form-extensions/src/Bridge/Symfony/Resources/translations/SonataFormBundle.hr.xliff</argument>
            <argument>/var/www/project/vendor/sonata-project/admin-bundle/src/Resources/translations/SonataAdminBundle.hr.xliff</argument>
          </argument>
          <argument key="hu" type="collection">
            <argument>/var/www/project/vendor/symfony/validator/Resources/translations/validators.hu.xlf</argument>
            <argument>/var/www/project/vendor/symfony/form/Resources/translations/validators.hu.xlf</argument>
            <argument>/var/www/project/vendor/symfony/security-core/Resources/translations/security.hu.xlf</argument>
            <argument>/var/www/project/vendor/sonata-project/form-extensions/src/Bridge/Symfony/Resources/translations/SonataFormBundle.hu.xliff</argument>
            <argument>/var/www/project/vendor/sonata-project/block-bundle/src/Resources/translations/SonataBlockBundle.hu.xliff</argument>
            <argument>/var/www/project/vendor/sonata-project/block-bundle/src/Resources/translations/validators.hu.xliff</argument>
            <argument>/var/www/project/vendor/sonata-project/admin-bundle/src/Resources/translations/SonataAdminBundle.hu.xliff</argument>
          </argument>
          <argument key="hy" type="collection">
            <argument>/var/www/project/vendor/symfony/validator/Resources/translations/validators.hy.xlf</argument>
            <argument>/var/www/project/vendor/symfony/form/Resources/translations/validators.hy.xlf</argument>
            <argument>/var/www/project/vendor/symfony/security-core/Resources/translations/security.hy.xlf</argument>
          </argument>
          <argument key="id" type="collection">
            <argument>/var/www/project/vendor/symfony/validator/Resources/translations/validators.id.xlf</argument>
            <argument>/var/www/project/vendor/symfony/form/Resources/translations/validators.id.xlf</argument>
            <argument>/var/www/project/vendor/symfony/security-core/Resources/translations/security.id.xlf</argument>
          </argument>
          <argument key="it" type="collection">
            <argument>/var/www/project/vendor/symfony/validator/Resources/translations/validators.it.xlf</argument>
            <argument>/var/www/project/vendor/symfony/form/Resources/translations/validators.it.xlf</argument>
            <argument>/var/www/project/vendor/symfony/security-core/Resources/translations/security.it.xlf</argument>
            <argument>/var/www/project/vendor/sonata-project/twig-extensions/src/Bridge/Symfony/Resources/translations/SonataTwigBundle.it.xliff</argument>
            <argument>/var/www/project/vendor/sonata-project/form-extensions/src/Bridge/Symfony/Resources/translations/SonataFormBundle.it.xliff</argument>
            <argument>/var/www/project/vendor/sonata-project/block-bundle/src/Resources/translations/SonataBlockBundle.it.xliff</argument>
            <argument>/var/www/project/vendor/sonata-project/admin-bundle/src/Resources/translations/SonataAdminBundle.it.xliff</argument>
          </argument>
          <argument key="ja" type="collection">
            <argument>/var/www/project/vendor/symfony/validator/Resources/translations/validators.ja.xlf</argument>
            <argument>/var/www/project/vendor/symfony/form/Resources/translations/validators.ja.xlf</argument>
            <argument>/var/www/project/vendor/symfony/security-core/Resources/translations/security.ja.xlf</argument>
            <argument>/var/www/project/vendor/sonata-project/form-extensions/src/Bridge/Symfony/Resources/translations/SonataFormBundle.ja.xliff</argument>
            <argument>/var/www/project/vendor/sonata-project/admin-bundle/src/Resources/translations/SonataAdminBundle.ja.xliff</argument>
          </argument>
          <argument key="lb" type="collection">
            <argument>/var/www/project/vendor/symfony/validator/Resources/translations/validators.lb.xlf</argument>
            <argument>/var/www/project/vendor/symfony/form/Resources/translations/validators.lb.xlf</argument>
            <argument>/var/www/project/vendor/symfony/security-core/Resources/translations/security.lb.xlf</argument>
            <argument>/var/www/project/vendor/sonata-project/form-extensions/src/Bridge/Symfony/Resources/translations/SonataFormBundle.lb.xliff</argument>
            <argument>/var/www/project/vendor/sonata-project/admin-bundle/src/Resources/translations/SonataAdminBundle.lb.xliff</argument>
          </argument>
          <argument key="lt" type="collection">
            <argument>/var/www/project/vendor/symfony/validator/Resources/translations/validators.lt.xlf</argument>
            <argument>/var/www/project/vendor/symfony/form/Resources/translations/validators.lt.xlf</argument>
            <argument>/var/www/project/vendor/symfony/security-core/Resources/translations/security.lt.xlf</argument>
            <argument>/var/www/project/vendor/sonata-project/form-extensions/src/Bridge/Symfony/Resources/translations/SonataFormBundle.lt.xliff</argument>
            <argument>/var/www/project/vendor/sonata-project/admin-bundle/src/Resources/translations/SonataAdminBundle.lt.xliff</argument>
          </argument>
          <argument key="lv" type="collection">
            <argument>/var/www/project/vendor/symfony/validator/Resources/translations/validators.lv.xlf</argument>
            <argument>/var/www/project/vendor/symfony/form/Resources/translations/validators.lv.xlf</argument>
            <argument>/var/www/project/vendor/symfony/security-core/Resources/translations/security.lv.xlf</argument>
            <argument>/var/www/project/vendor/sonata-project/admin-bundle/src/Resources/translations/SonataAdminBundle.lv.xliff</argument>
          </argument>
          <argument key="mk" type="collection">
            <argument>/var/www/project/vendor/symfony/validator/Resources/translations/validators.mk.xlf</argument>
            <argument>/var/www/project/vendor/symfony/form/Resources/translations/validators.mk.xlf</argument>
            <argument>/var/www/project/vendor/symfony/security-core/Resources/translations/security.mk.xlf</argument>
          </argument>
          <argument key="mn" type="collection">
            <argument>/var/www/project/vendor/symfony/validator/Resources/translations/validators.mn.xlf</argument>
            <argument>/var/www/project/vendor/symfony/form/Resources/translations/validators.mn.xlf</argument>
            <argument>/var/www/project/vendor/symfony/security-core/Resources/translations/security.mn.xlf</argument>
          </argument>
          <argument key="my" type="collection">
            <argument>/var/www/project/vendor/symfony/validator/Resources/translations/validators.my.xlf</argument>
            <argument>/var/www/project/vendor/symfony/form/Resources/translations/validators.my.xlf</argument>
            <argument>/var/www/project/vendor/symfony/security-core/Resources/translations/security.my.xlf</argument>
          </argument>
          <argument key="nb" type="collection">
            <argument>/var/www/project/vendor/symfony/validator/Resources/translations/validators.nb.xlf</argument>
            <argument>/var/www/project/vendor/symfony/form/Resources/translations/validators.nb.xlf</argument>
            <argument>/var/www/project/vendor/symfony/security-core/Resources/translations/security.nb.xlf</argument>
          </argument>
          <argument key="nl" type="collection">
            <argument>/var/www/project/vendor/symfony/validator/Resources/translations/validators.nl.xlf</argument>
            <argument>/var/www/project/vendor/symfony/form/Resources/translations/validators.nl.xlf</argument>
            <argument>/var/www/project/vendor/symfony/security-core/Resources/translations/security.nl.xlf</argument>
            <argument>/var/www/project/vendor/sonata-project/twig-extensions/src/Bridge/Symfony/Resources/translations/SonataTwigBundle.nl.xliff</argument>
            <argument>/var/www/project/vendor/sonata-project/form-extensions/src/Bridge/Symfony/Resources/translations/SonataFormBundle.nl.xliff</argument>
            <argument>/var/www/project/vendor/sonata-project/block-bundle/src/Resources/translations/SonataBlockBundle.nl.xliff</argument>
            <argument>/var/www/project/vendor/sonata-project/block-bundle/src/Resources/translations/validators.nl.xliff</argument>
            <argument>/var/www/project/vendor/sonata-project/admin-bundle/src/Resources/translations/SonataAdminBundle.nl.xliff</argument>
          </argument>
          <argument key="nn" type="collection">
            <argument>/var/www/project/vendor/symfony/validator/Resources/translations/validators.nn.xlf</argument>
            <argument>/var/www/project/vendor/symfony/form/Resources/translations/validators.nn.xlf</argument>
            <argument>/var/www/project/vendor/symfony/security-core/Resources/translations/security.nn.xlf</argument>
          </argument>
          <argument key="no" type="collection">
            <argument>/var/www/project/vendor/symfony/validator/Resources/translations/validators.no.xlf</argument>
            <argument>/var/www/project/vendor/symfony/form/Resources/translations/validators.no.xlf</argument>
            <argument>/var/www/project/vendor/symfony/security-core/Resources/translations/security.no.xlf</argument>
            <argument>/var/www/project/vendor/sonata-project/admin-bundle/src/Resources/translations/SonataAdminBundle.no.xliff</argument>
          </argument>
          <argument key="pl" type="collection">
            <argument>/var/www/project/vendor/symfony/validator/Resources/translations/validators.pl.xlf</argument>
            <argument>/var/www/project/vendor/symfony/form/Resources/translations/validators.pl.xlf</argument>
            <argument>/var/www/project/vendor/symfony/security-core/Resources/translations/security.pl.xlf</argument>
            <argument>/var/www/project/vendor/sonata-project/twig-extensions/src/Bridge/Symfony/Resources/translations/SonataTwigBundle.pl.xliff</argument>
            <argument>/var/www/project/vendor/sonata-project/form-extensions/src/Bridge/Symfony/Resources/translations/SonataFormBundle.pl.xliff</argument>
            <argument>/var/www/project/vendor/sonata-project/admin-bundle/src/Resources/translations/SonataAdminBundle.pl.xliff</argument>
          </argument>
          <argument key="pt" type="collection">
            <argument>/var/www/project/vendor/symfony/validator/Resources/translations/validators.pt.xlf</argument>
            <argument>/var/www/project/vendor/symfony/form/Resources/translations/validators.pt.xlf</argument>
            <argument>/var/www/project/vendor/symfony/security-core/Resources/translations/security.pt.xlf</argument>
            <argument>/var/www/project/vendor/sonata-project/form-extensions/src/Bridge/Symfony/Resources/translations/SonataFormBundle.pt.xliff</argument>
            <argument>/var/www/project/vendor/sonata-project/admin-bundle/src/Resources/translations/SonataAdminBundle.pt.xliff</argument>
          </argument>
          <argument key="pt_BR" type="collection">
            <argument>/var/www/project/vendor/symfony/validator/Resources/translations/validators.pt_BR.xlf</argument>
            <argument>/var/www/project/vendor/symfony/form/Resources/translations/validators.pt_BR.xlf</argument>
            <argument>/var/www/project/vendor/symfony/security-core/Resources/translations/security.pt_BR.xlf</argument>
            <argument>/var/www/project/vendor/sonata-project/form-extensions/src/Bridge/Symfony/Resources/translations/SonataFormBundle.pt_BR.xliff</argument>
            <argument>/var/www/project/vendor/sonata-project/admin-bundle/src/Resources/translations/SonataAdminBundle.pt_BR.xliff</argument>
          </argument>
          <argument key="ro" type="collection">
            <argument>/var/www/project/vendor/symfony/validator/Resources/translations/validators.ro.xlf</argument>
            <argument>/var/www/project/vendor/symfony/form/Resources/translations/validators.ro.xlf</argument>
            <argument>/var/www/project/vendor/symfony/security-core/Resources/translations/security.ro.xlf</argument>
            <argument>/var/www/project/vendor/sonata-project/form-extensions/src/Bridge/Symfony/Resources/translations/SonataFormBundle.ro.xliff</argument>
            <argument>/var/www/project/vendor/sonata-project/admin-bundle/src/Resources/translations/SonataAdminBundle.ro.xliff</argument>
          </argument>
          <argument key="ru" type="collection">
            <argument>/var/www/project/vendor/symfony/validator/Resources/translations/validators.ru.xlf</argument>
            <argument>/var/www/project/vendor/symfony/form/Resources/translations/validators.ru.xlf</argument>
            <argument>/var/www/project/vendor/symfony/security-core/Resources/translations/security.ru.xlf</argument>
            <argument>/var/www/project/vendor/sonata-project/form-extensions/src/Bridge/Symfony/Resources/translations/SonataFormBundle.ru.xliff</argument>
            <argument>/var/www/project/vendor/sonata-project/block-bundle/src/Resources/translations/SonataBlockBundle.ru.xliff</argument>
            <argument>/var/www/project/vendor/sonata-project/admin-bundle/src/Resources/translations/SonataAdminBundle.ru.xliff</argument>
          </argument>
          <argument key="sk" type="collection">
            <argument>/var/www/project/vendor/symfony/validator/Resources/translations/validators.sk.xlf</argument>
            <argument>/var/www/project/vendor/symfony/form/Resources/translations/validators.sk.xlf</argument>
            <argument>/var/www/project/vendor/symfony/security-core/Resources/translations/security.sk.xlf</argument>
            <argument>/var/www/project/vendor/sonata-project/form-extensions/src/Bridge/Symfony/Resources/translations/SonataFormBundle.sk.xliff</argument>
            <argument>/var/www/project/vendor/sonata-project/admin-bundle/src/Resources/translations/SonataAdminBundle.sk.xliff</argument>
          </argument>
          <argument key="sl" type="collection">
            <argument>/var/www/project/vendor/symfony/validator/Resources/translations/validators.sl.xlf</argument>
            <argument>/var/www/project/vendor/symfony/form/Resources/translations/validators.sl.xlf</argument>
            <argument>/var/www/project/vendor/symfony/security-core/Resources/translations/security.sl.xlf</argument>
            <argument>/var/www/project/vendor/sonata-project/form-extensions/src/Bridge/Symfony/Resources/translations/SonataFormBundle.sl.xliff</argument>
            <argument>/var/www/project/vendor/sonata-project/admin-bundle/src/Resources/translations/SonataAdminBundle.sl.xliff</argument>
          </argument>
          <argument key="sq" type="collection">
            <argument>/var/www/project/vendor/symfony/validator/Resources/translations/validators.sq.xlf</argument>
            <argument>/var/www/project/vendor/symfony/form/Resources/translations/validators.sq.xlf</argument>
            <argument>/var/www/project/vendor/symfony/security-core/Resources/translations/security.sq.xlf</argument>
          </argument>
          <argument key="sr_Cyrl" type="collection">
            <argument>/var/www/project/vendor/symfony/validator/Resources/translations/validators.sr_Cyrl.xlf</argument>
            <argument>/var/www/project/vendor/symfony/form/Resources/translations/validators.sr_Cyrl.xlf</argument>
            <argument>/var/www/project/vendor/symfony/security-core/Resources/translations/security.sr_Cyrl.xlf</argument>
            <argument>/var/www/project/vendor/sonata-project/admin-bundle/src/Resources/translations/SonataAdminBundle.sr_Cyrl.xliff</argument>
          </argument>
          <argument key="sr_Latn" type="collection">
            <argument>/var/www/project/vendor/symfony/validator/Resources/translations/validators.sr_Latn.xlf</argument>
            <argument>/var/www/project/vendor/symfony/form/Resources/translations/validators.sr_Latn.xlf</argument>
            <argument>/var/www/project/vendor/symfony/security-core/Resources/translations/security.sr_Latn.xlf</argument>
            <argument>/var/www/project/vendor/sonata-project/admin-bundle/src/Resources/translations/SonataAdminBundle.sr_Latn.xliff</argument>
          </argument>
          <argument key="sv" type="collection">
            <argument>/var/www/project/vendor/symfony/validator/Resources/translations/validators.sv.xlf</argument>
            <argument>/var/www/project/vendor/symfony/form/Resources/translations/validators.sv.xlf</argument>
            <argument>/var/www/project/vendor/symfony/security-core/Resources/translations/security.sv.xlf</argument>
          </argument>
          <argument key="th" type="collection">
            <argument>/var/www/project/vendor/symfony/validator/Resources/translations/validators.th.xlf</argument>
            <argument>/var/www/project/vendor/symfony/form/Resources/translations/validators.th.xlf</argument>
            <argument>/var/www/project/vendor/symfony/security-core/Resources/translations/security.th.xlf</argument>
          </argument>
          <argument key="tl" type="collection">
            <argument>/var/www/project/vendor/symfony/validator/Resources/translations/validators.tl.xlf</argument>
            <argument>/var/www/project/vendor/symfony/form/Resources/translations/validators.tl.xlf</argument>
            <argument>/var/www/project/vendor/symfony/security-core/Resources/translations/security.tl.xlf</argument>
          </argument>
          <argument key="tr" type="collection">
            <argument>/var/www/project/vendor/symfony/validator/Resources/translations/validators.tr.xlf</argument>
            <argument>/var/www/project/vendor/symfony/form/Resources/translations/validators.tr.xlf</argument>
            <argument>/var/www/project/vendor/symfony/security-core/Resources/translations/security.tr.xlf</argument>
            <argument>/var/www/project/vendor/sonata-project/admin-bundle/src/Resources/translations/SonataAdminBundle.tr.xliff</argument>
          </argument>
          <argument key="uk" type="collection">
            <argument>/var/www/project/vendor/symfony/validator/Resources/translations/validators.uk.xlf</argument>
            <argument>/var/www/project/vendor/symfony/form/Resources/translations/validators.uk.xlf</argument>
            <argument>/var/www/project/vendor/symfony/security-core/Resources/translations/security.uk.xlf</argument>
            <argument>/var/www/project/vendor/sonata-project/twig-extensions/src/Bridge/Symfony/Resources/translations/SonataTwigBundle.uk.xliff</argument>
            <argument>/var/www/project/vendor/sonata-project/form-extensions/src/Bridge/Symfony/Resources/translations/SonataFormBundle.uk.xliff</argument>
            <argument>/var/www/project/vendor/sonata-project/admin-bundle/src/Resources/translations/SonataAdminBundle.uk.xliff</argument>
          </argument>
          <argument key="ur" type="collection">
            <argument>/var/www/project/vendor/symfony/validator/Resources/translations/validators.ur.xlf</argument>
            <argument>/var/www/project/vendor/symfony/form/Resources/translations/validators.ur.xlf</argument>
            <argument>/var/www/project/vendor/symfony/security-core/Resources/translations/security.ur.xlf</argument>
          </argument>
          <argument key="uz" type="collection">
            <argument>/var/www/project/vendor/symfony/validator/Resources/translations/validators.uz.xlf</argument>
            <argument>/var/www/project/vendor/symfony/form/Resources/translations/validators.uz.xlf</argument>
            <argument>/var/www/project/vendor/symfony/security-core/Resources/translations/security.uz.xlf</argument>
          </argument>
          <argument key="vi" type="collection">
            <argument>/var/www/project/vendor/symfony/validator/Resources/translations/validators.vi.xlf</argument>
            <argument>/var/www/project/vendor/symfony/form/Resources/translations/validators.vi.xlf</argument>
            <argument>/var/www/project/vendor/symfony/security-core/Resources/translations/security.vi.xlf</argument>
          </argument>
          <argument key="zh_CN" type="collection">
            <argument>/var/www/project/vendor/symfony/validator/Resources/translations/validators.zh_CN.xlf</argument>
            <argument>/var/www/project/vendor/symfony/form/Resources/translations/validators.zh_CN.xlf</argument>
            <argument>/var/www/project/vendor/symfony/security-core/Resources/translations/security.zh_CN.xlf</argument>
            <argument>/var/www/project/vendor/sonata-project/form-extensions/src/Bridge/Symfony/Resources/translations/SonataFormBundle.zh_CN.xliff</argument>
            <argument>/var/www/project/vendor/sonata-project/admin-bundle/src/Resources/translations/SonataAdminBundle.zh_CN.xliff</argument>
          </argument>
          <argument key="zh_TW" type="collection">
            <argument>/var/www/project/vendor/symfony/validator/Resources/translations/validators.zh_TW.xlf</argument>
            <argument>/var/www/project/vendor/symfony/form/Resources/translations/validators.zh_TW.xlf</argument>
            <argument>/var/www/project/vendor/symfony/security-core/Resources/translations/security.zh_TW.xlf</argument>
          </argument>
          <argument key="sv_SE" type="collection">
            <argument>/var/www/project/vendor/sonata-project/admin-bundle/src/Resources/translations/SonataAdminBundle.sv_SE.xliff</argument>
          </argument>
          <argument key="zh_HK" type="collection">
            <argument>/var/www/project/vendor/sonata-project/admin-bundle/src/Resources/translations/SonataAdminBundle.zh_HK.xliff</argument>
          </argument>
        </argument>
        <argument key="scanned_directories" type="collection">
          <argument>/var/www/project/vendor/symfony/validator/Resources/translations</argument>
          <argument>/var/www/project/vendor/symfony/form/Resources/translations</argument>
          <argument>/var/www/project/vendor/symfony/security-core/Resources/translations</argument>
          <argument>/var/www/project/vendor/sonata-project/twig-extensions/src/Bridge/Symfony/Resources/translations</argument>
          <argument>/var/www/project/vendor/sonata-project/form-extensions/src/Bridge/Symfony/Resources/translations</argument>
          <argument>/var/www/project/vendor/sonata-project/block-bundle/src/Resources/translations</argument>
          <argument>/var/www/project/vendor/sonata-project/admin-bundle/src/Resources/translations</argument>
          <argument>/var/www/project/translations</argument>
          <argument>/var/www/project/vendor/symfony/framework-bundle/translations</argument>
          <argument>/var/www/project/vendor/doctrine/doctrine-bundle/translations</argument>
          <argument>/var/www/project/vendor/doctrine/doctrine-migrations-bundle/translations</argument>
          <argument>/var/www/project/vendor/symfony/twig-bundle/translations</argument>
          <argument>/var/www/project/vendor/symfony/web-profiler-bundle/translations</argument>
          <argument>/var/www/project/vendor/twig/extra-bundle/translations</argument>
          <argument>/var/www/project/vendor/symfony/security-bundle/translations</argument>
          <argument>/var/www/project/vendor/symfony/monolog-bundle/translations</argument>
          <argument>/var/www/project/vendor/sonata-project/exporter/src/Bridge/Symfony/translations</argument>
          <argument>/var/www/project/vendor/sonata-project/doctrine-extensions/src/Bridge/Symfony/translations</argument>
          <argument>/var/www/project/vendor/knplabs/knp-menu-bundle/translations</argument>
          <argument>/var/www/project/vendor/sonata-project/doctrine-orm-admin-bundle/src/translations</argument>
        </argument>
        <argument key="cache_vary" type="collection">
          <argument key="scanned_directories" type="collection">
            <argument>vendor/symfony/validator/Resources/translations</argument>
            <argument>vendor/symfony/form/Resources/translations</argument>
            <argument>vendor/symfony/security-core/Resources/translations</argument>
            <argument>vendor/sonata-project/twig-extensions/src/Bridge/Symfony/Resources/translations</argument>
            <argument>vendor/sonata-project/form-extensions/src/Bridge/Symfony/Resources/translations</argument>
            <argument>vendor/sonata-project/block-bundle/src/Resources/translations</argument>
            <argument>vendor/sonata-project/admin-bundle/src/Resources/translations</argument>
            <argument>translations</argument>
            <argument>vendor/symfony/framework-bundle/translations</argument>
            <argument>vendor/doctrine/doctrine-bundle/translations</argument>
            <argument>vendor/doctrine/doctrine-migrations-bundle/translations</argument>
            <argument>vendor/symfony/twig-bundle/translations</argument>
            <argument>vendor/symfony/web-profiler-bundle/translations</argument>
            <argument>vendor/twig/extra-bundle/translations</argument>
            <argument>vendor/symfony/security-bundle/translations</argument>
            <argument>vendor/symfony/monolog-bundle/translations</argument>
            <argument>vendor/sonata-project/exporter/src/Bridge/Symfony/translations</argument>
            <argument>vendor/sonata-project/doctrine-extensions/src/Bridge/Symfony/translations</argument>
            <argument>vendor/knplabs/knp-menu-bundle/translations</argument>
            <argument>vendor/sonata-project/doctrine-orm-admin-bundle/src/translations</argument>
          </argument>
        </argument>
      </argument>
      <argument type="collection"/>
      <call method="setConfigCacheFactory">
        <argument type="service" id="config_cache_factory"/>
      </call>
      <call method="setFallbackLocales">
        <argument type="collection">
          <argument>en</argument>
        </argument>
      </call>
    </service>
    <service id="translator.logging" class="Symfony\Component\Translation\LoggingTranslator">
      <tag name="monolog.logger" channel="translation"/>
      <argument type="service" id="translator.logging.inner"/>
      <argument type="service" id="monolog.logger.translation"/>
    </service>
    <service id="translator.formatter.default" class="Symfony\Component\Translation\Formatter\MessageFormatter">
      <argument type="service" id="identity_translator"/>
    </service>
    <service id="translation.loader.php" class="Symfony\Component\Translation\Loader\PhpFileLoader">
      <tag name="translation.loader" alias="php"/>
    </service>
    <service id="translation.loader.yml" class="Symfony\Component\Translation\Loader\YamlFileLoader">
      <tag name="translation.loader" alias="yaml" legacy-alias="yml"/>
    </service>
    <service id="translation.loader.xliff" class="Symfony\Component\Translation\Loader\XliffFileLoader">
      <tag name="translation.loader" alias="xlf" legacy-alias="xliff"/>
    </service>
    <service id="translation.loader.po" class="Symfony\Component\Translation\Loader\PoFileLoader">
      <tag name="translation.loader" alias="po"/>
    </service>
    <service id="translation.loader.mo" class="Symfony\Component\Translation\Loader\MoFileLoader">
      <tag name="translation.loader" alias="mo"/>
    </service>
    <service id="translation.loader.qt" class="Symfony\Component\Translation\Loader\QtFileLoader">
      <tag name="translation.loader" alias="ts"/>
    </service>
    <service id="translation.loader.csv" class="Symfony\Component\Translation\Loader\CsvFileLoader">
      <tag name="translation.loader" alias="csv"/>
    </service>
    <service id="translation.loader.res" class="Symfony\Component\Translation\Loader\IcuResFileLoader">
      <tag name="translation.loader" alias="res"/>
    </service>
    <service id="translation.loader.dat" class="Symfony\Component\Translation\Loader\IcuDatFileLoader">
      <tag name="translation.loader" alias="dat"/>
    </service>
    <service id="translation.loader.ini" class="Symfony\Component\Translation\Loader\IniFileLoader">
      <tag name="translation.loader" alias="ini"/>
    </service>
    <service id="translation.loader.json" class="Symfony\Component\Translation\Loader\JsonFileLoader">
      <tag name="translation.loader" alias="json"/>
    </service>
    <service id="translation.dumper.php" class="Symfony\Component\Translation\Dumper\PhpFileDumper">
      <tag name="translation.dumper" alias="php"/>
    </service>
    <service id="translation.dumper.xliff" class="Symfony\Component\Translation\Dumper\XliffFileDumper">
      <tag name="translation.dumper" alias="xlf"/>
    </service>
    <service id="translation.dumper.xliff.xliff" class="Symfony\Component\Translation\Dumper\XliffFileDumper">
      <tag name="translation.dumper" alias="xliff"/>
      <argument>xliff</argument>
    </service>
    <service id="translation.dumper.po" class="Symfony\Component\Translation\Dumper\PoFileDumper">
      <tag name="translation.dumper" alias="po"/>
    </service>
    <service id="translation.dumper.mo" class="Symfony\Component\Translation\Dumper\MoFileDumper">
      <tag name="translation.dumper" alias="mo"/>
    </service>
    <service id="translation.dumper.yml" class="Symfony\Component\Translation\Dumper\YamlFileDumper">
      <tag name="translation.dumper" alias="yml"/>
    </service>
    <service id="translation.dumper.yaml" class="Symfony\Component\Translation\Dumper\YamlFileDumper">
      <tag name="translation.dumper" alias="yaml"/>
      <argument>yaml</argument>
    </service>
    <service id="translation.dumper.qt" class="Symfony\Component\Translation\Dumper\QtFileDumper">
      <tag name="translation.dumper" alias="ts"/>
    </service>
    <service id="translation.dumper.csv" class="Symfony\Component\Translation\Dumper\CsvFileDumper">
      <tag name="translation.dumper" alias="csv"/>
    </service>
    <service id="translation.dumper.ini" class="Symfony\Component\Translation\Dumper\IniFileDumper">
      <tag name="translation.dumper" alias="ini"/>
    </service>
    <service id="translation.dumper.json" class="Symfony\Component\Translation\Dumper\JsonFileDumper">
      <tag name="translation.dumper" alias="json"/>
    </service>
    <service id="translation.dumper.res" class="Symfony\Component\Translation\Dumper\IcuResFileDumper">
      <tag name="translation.dumper" alias="res"/>
    </service>
    <service id="translation.extractor.php_ast" class="Symfony\Component\Translation\Extractor\PhpAstExtractor">
      <tag name="translation.extractor" alias="php"/>
      <argument type="tagged_iterator" tag="translation.extractor.visitor"/>
    </service>
    <service id="translation.extractor.visitor.trans_method" class="Symfony\Component\Translation\Extractor\Visitor\TransMethodVisitor">
      <tag name="translation.extractor.visitor"/>
    </service>
    <service id="translation.extractor.visitor.translatable_message" class="Symfony\Component\Translation\Extractor\Visitor\TranslatableMessageVisitor">
      <tag name="translation.extractor.visitor"/>
    </service>
    <service id="translation.extractor.visitor.constraint" class="Symfony\Component\Translation\Extractor\Visitor\ConstraintVisitor">
      <tag name="translation.extractor.visitor"/>
      <argument type="collection">
        <argument>All</argument>
        <argument>AtLeastOneOf</argument>
        <argument>Bic</argument>
        <argument>Blank</argument>
        <argument>Callback</argument>
        <argument>CardScheme</argument>
        <argument>Choice</argument>
        <argument>Cidr</argument>
        <argument>Collection</argument>
        <argument>Compound</argument>
        <argument>Count</argument>
        <argument>Country</argument>
        <argument>CssColor</argument>
        <argument>Currency</argument>
        <argument>DateTime</argument>
        <argument>Date</argument>
        <argument>DivisibleBy</argument>
        <argument>Email</argument>
        <argument>EqualTo</argument>
        <argument>ExpressionSyntax</argument>
        <argument>Expression</argument>
        <argument>File</argument>
        <argument>GreaterThanOrEqual</argument>
        <argument>GreaterThan</argument>
        <argument>Hostname</argument>
        <argument>Iban</argument>
        <argument>IdenticalTo</argument>
        <argument>Image</argument>
        <argument>Ip</argument>
        <argument>IsFalse</argument>
        <argument>IsNull</argument>
        <argument>IsTrue</argument>
        <argument>Isbn</argument>
        <argument>Isin</argument>
        <argument>Issn</argument>
        <argument>Json</argument>
        <argument>Language</argument>
        <argument>Length</argument>
        <argument>LessThanOrEqual</argument>
        <argument>LessThan</argument>
        <argument>Locale</argument>
        <argument>Luhn</argument>
        <argument>NoSuspiciousCharacters</argument>
        <argument>NotBlank</argument>
        <argument>NotCompromisedPassword</argument>
        <argument>NotEqualTo</argument>
        <argument>NotIdenticalTo</argument>
        <argument>NotNull</argument>
        <argument>PasswordStrength</argument>
        <argument>Range</argument>
        <argument>Regex</argument>
        <argument>Sequentially</argument>
        <argument>Time</argument>
        <argument>Timezone</argument>
        <argument>Type</argument>
        <argument>Ulid</argument>
        <argument>Unique</argument>
        <argument>Url</argument>
        <argument>Uuid</argument>
        <argument>Valid</argument>
        <argument>When</argument>
        <argument>Expression</argument>
        <argument>Email</argument>
        <argument>NotCompromisedPassword</argument>
        <argument>When</argument>
        <argument>NoSuspiciousCharacters</argument>
        <argument>UniqueEntity</argument>
        <argument>UserPassword</argument>
        <argument>Inline</argument>
      </argument>
    </service>
    <service id="translation.reader" class="Symfony\Component\Translation\Reader\TranslationReader">
      <call method="addLoader">
        <argument>php</argument>
        <argument type="service" id="translation.loader.php"/>
      </call>
      <call method="addLoader">
        <argument>yaml</argument>
        <argument type="service" id="translation.loader.yml"/>
      </call>
      <call method="addLoader">
        <argument>yml</argument>
        <argument type="service" id="translation.loader.yml"/>
      </call>
      <call method="addLoader">
        <argument>xlf</argument>
        <argument type="service" id="translation.loader.xliff"/>
      </call>
      <call method="addLoader">
        <argument>xliff</argument>
        <argument type="service" id="translation.loader.xliff"/>
      </call>
      <call method="addLoader">
        <argument>po</argument>
        <argument type="service" id="translation.loader.po"/>
      </call>
      <call method="addLoader">
        <argument>mo</argument>
        <argument type="service" id="translation.loader.mo"/>
      </call>
      <call method="addLoader">
        <argument>ts</argument>
        <argument type="service" id="translation.loader.qt"/>
      </call>
      <call method="addLoader">
        <argument>csv</argument>
        <argument type="service" id="translation.loader.csv"/>
      </call>
      <call method="addLoader">
        <argument>res</argument>
        <argument type="service" id="translation.loader.res"/>
      </call>
      <call method="addLoader">
        <argument>dat</argument>
        <argument type="service" id="translation.loader.dat"/>
      </call>
      <call method="addLoader">
        <argument>ini</argument>
        <argument type="service" id="translation.loader.ini"/>
      </call>
      <call method="addLoader">
        <argument>json</argument>
        <argument type="service" id="translation.loader.json"/>
      </call>
    </service>
    <service id="translation.extractor" class="Symfony\Component\Translation\Extractor\ChainExtractor">
      <call method="addExtractor">
        <argument>php</argument>
        <argument type="service" id="translation.extractor.php_ast"/>
      </call>
      <call method="addExtractor">
        <argument>twig</argument>
        <argument type="service" id="twig.translation.extractor"/>
      </call>
      <call method="addExtractor">
        <argument>sonata_admin</argument>
        <argument type="service" id="sonata.admin.translation_extractor"/>
      </call>
    </service>
    <service id="translation.writer" class="Symfony\Component\Translation\Writer\TranslationWriter">
      <call method="addDumper">
        <argument>php</argument>
        <argument type="service" id="translation.dumper.php"/>
      </call>
      <call method="addDumper">
        <argument>xlf</argument>
        <argument type="service" id="translation.dumper.xliff"/>
      </call>
      <call method="addDumper">
        <argument>xliff</argument>
        <argument type="service" id="translation.dumper.xliff.xliff"/>
      </call>
      <call method="addDumper">
        <argument>po</argument>
        <argument type="service" id="translation.dumper.po"/>
      </call>
      <call method="addDumper">
        <argument>mo</argument>
        <argument type="service" id="translation.dumper.mo"/>
      </call>
      <call method="addDumper">
        <argument>yml</argument>
        <argument type="service" id="translation.dumper.yml"/>
      </call>
      <call method="addDumper">
        <argument>yaml</argument>
        <argument type="service" id="translation.dumper.yaml"/>
      </call>
      <call method="addDumper">
        <argument>ts</argument>
        <argument type="service" id="translation.dumper.qt"/>
      </call>
      <call method="addDumper">
        <argument>csv</argument>
        <argument type="service" id="translation.dumper.csv"/>
      </call>
      <call method="addDumper">
        <argument>ini</argument>
        <argument type="service" id="translation.dumper.ini"/>
      </call>
      <call method="addDumper">
        <argument>json</argument>
        <argument type="service" id="translation.dumper.json"/>
      </call>
      <call method="addDumper">
        <argument>res</argument>
        <argument type="service" id="translation.dumper.res"/>
      </call>
    </service>
    <service id="translation.warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\TranslationsCacheWarmer">
      <tag name="container.service_subscriber" id="translator"/>
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id=".service_locator.fuYM_Z..translation.warmer"/>
    </service>
    <service id="translation.locale_switcher" class="Symfony\Component\Translation\LocaleSwitcher">
      <tag name="kernel.reset" method="reset"/>
      <tag name="kernel.locale_aware"/>
      <argument>en</argument>
      <argument type="tagged_iterator" tag="kernel.locale_aware" exclude="translation.locale_switcher"/>
      <argument type="service" id="router.request_context" on-invalid="ignore"/>
    </service>
    <service id="translation.provider_collection" class="Symfony\Component\Translation\Provider\TranslationProviderCollection">
      <argument type="collection"/>
      <factory service="translation.provider_collection_factory" method="fromConfig"/>
    </service>
    <service id="translation.provider_collection_factory" class="Symfony\Component\Translation\Provider\TranslationProviderCollectionFactory">
      <argument type="tagged_iterator" tag="translation.provider_factory"/>
      <argument type="collection"/>
    </service>
    <service id="translation.provider_factory.null" class="Symfony\Component\Translation\Provider\NullProviderFactory">
      <tag name="translation.provider_factory"/>
    </service>
    <service id="debug.error_handler_configurator" class="Symfony\Component\HttpKernel\Debug\ErrorHandlerConfigurator" public="true">
      <tag name="monolog.logger" channel="php"/>
      <argument type="service" id="monolog.logger.php"/>
      <argument>null</argument>
      <argument>-1</argument>
      <argument>true</argument>
      <argument>true</argument>
      <argument type="service" id="monolog.logger.deprecation"/>
    </service>
    <service id="debug.debug_handlers_listener" class="Symfony\Component\HttpKernel\EventListener\DebugHandlersListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument>null</argument>
      <argument>%env(bool:default::key:web:default:kernel.runtime_mode:)%</argument>
    </service>
    <service id="debug.file_link_formatter" class="Symfony\Component\ErrorHandler\ErrorRenderer\FileLinkFormatter">
      <argument>%env(default::SYMFONY_IDE)%</argument>
      <argument type="service" id="request_stack" on-invalid="ignore"/>
      <argument>/var/www/project</argument>
      <argument type="service_closure" id="debug.file_link_formatter.url_format"/>
    </service>
    <service id="debug.stopwatch" class="Symfony\Component\Stopwatch\Stopwatch" public="true">
      <tag name="kernel.reset" method="reset"/>
      <argument>true</argument>
    </service>
    <service id="debug.event_dispatcher" class="Symfony\Component\HttpKernel\Debug\TraceableEventDispatcher">
      <tag name="container.hot_path"/>
      <tag name="event_dispatcher">event_dispatcher.dispatcher</tag>
      <tag name="monolog.logger" channel="event"/>
      <tag name="kernel.reset" method="reset"/>
      <tag name="container.decorator" id="event_dispatcher" inner="debug.event_dispatcher.inner"/>
      <argument type="service" id="debug.event_dispatcher.inner"/>
      <argument type="service" id="debug.stopwatch"/>
      <argument type="service" id="monolog.logger.event" on-invalid="null"/>
      <argument type="service" id=".virtual_request_stack" on-invalid="null"/>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service_closure" id="data_collector.router"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\CheckPassportEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.listener.user_provider"/>
          <argument>checkPassport</argument>
        </argument>
        <argument>1024</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.context_listener.0"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller_arguments</argument>
        <argument type="collection">
          <argument type="service_closure" id="argument_resolver.request_payload"/>
          <argument>onKernelControllerArguments</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="response_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="locale_listener"/>
          <argument>setDefaultLocale</argument>
        </argument>
        <argument>100</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="locale_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>16</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service_closure" id="locale_listener"/>
          <argument>onKernelFinishRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="validate_request_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>256</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="disallow_search_engine_index_response_listener"/>
          <argument>onResponse</argument>
        </argument>
        <argument>-255</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller_arguments</argument>
        <argument type="collection">
          <argument type="service_closure" id="exception_listener"/>
          <argument>onControllerArguments</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service_closure" id="exception_listener"/>
          <argument>logKernelException</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service_closure" id="exception_listener"/>
          <argument>onKernelException</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="exception_listener"/>
          <argument>removeCspHeader</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller_arguments</argument>
        <argument type="collection">
          <argument type="service_closure" id="controller.cache_attribute_listener"/>
          <argument>onKernelControllerArguments</argument>
        </argument>
        <argument>10</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="controller.cache_attribute_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>-10</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="locale_aware_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>15</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service_closure" id="locale_aware_listener"/>
          <argument>onKernelFinishRequest</argument>
        </argument>
        <argument>-15</argument>
      </call>
      <call method="addListener">
        <argument>console.error</argument>
        <argument type="collection">
          <argument type="service_closure" id="console.error_listener"/>
          <argument>onConsoleError</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>console.terminate</argument>
        <argument type="collection">
          <argument type="service_closure" id="console.error_listener"/>
          <argument>onConsoleTerminate</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>console.error</argument>
        <argument type="collection">
          <argument type="service_closure" id="console.suggest_missing_package_subscriber"/>
          <argument>onConsoleError</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="test.session.listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>128</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="test.session.listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>-1000</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Mailer\Event\MessageEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="mailer.envelope_listener"/>
          <argument>onMessage</argument>
        </argument>
        <argument>-255</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Mailer\Event\MessageEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="mailer.message_logger_listener"/>
          <argument>onMessage</argument>
        </argument>
        <argument>-255</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Mailer\Event\MessageEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="mailer.messenger_transport_listener"/>
          <argument>onMessage</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="debug.debug_handlers_listener"/>
          <argument>configure</argument>
        </argument>
        <argument>2048</argument>
      </call>
      <call method="addListener">
        <argument>console.command</argument>
        <argument type="collection">
          <argument type="service_closure" id="debug.debug_handlers_listener"/>
          <argument>configure</argument>
        </argument>
        <argument>2048</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="router_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>32</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service_closure" id="router_listener"/>
          <argument>onKernelFinishRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service_closure" id="router_listener"/>
          <argument>onKernelException</argument>
        </argument>
        <argument>-64</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="web_link.add_link_header_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Messenger\Event\WorkerMessageFailedEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="messenger.retry.send_failed_message_for_retry_listener"/>
          <argument>onMessageFailed</argument>
        </argument>
        <argument>100</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Messenger\Event\WorkerMessageFailedEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="messenger.failure.add_error_details_stamp_listener"/>
          <argument>onMessageFailed</argument>
        </argument>
        <argument>200</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Messenger\Event\WorkerMessageFailedEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="messenger.failure.send_failed_message_to_failure_transport_listener"/>
          <argument>onMessageFailed</argument>
        </argument>
        <argument>-100</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Messenger\Event\WorkerStartedEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="messenger.listener.stop_worker_on_restart_signal_listener"/>
          <argument>onWorkerStarted</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Messenger\Event\WorkerRunningEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="messenger.listener.stop_worker_on_restart_signal_listener"/>
          <argument>onWorkerRunning</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Messenger\Event\WorkerMessageFailedEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="messenger.listener.stop_worker_on_stop_exception_listener"/>
          <argument>onMessageFailed</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Messenger\Event\WorkerRunningEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="messenger.listener.stop_worker_on_stop_exception_listener"/>
          <argument>onWorkerRunning</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Notifier\Event\MessageEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="notifier.notification_logger_listener"/>
          <argument>onNotification</argument>
        </argument>
        <argument>-255</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="profiler_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>-100</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service_closure" id="profiler_listener"/>
          <argument>onKernelException</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.terminate</argument>
        <argument type="collection">
          <argument type="service_closure" id="profiler_listener"/>
          <argument>onKernelTerminate</argument>
        </argument>
        <argument>-1024</argument>
      </call>
      <call method="addListener">
        <argument>console.command</argument>
        <argument type="collection">
          <argument type="service_closure" id="console_profiler_listener"/>
          <argument>initialize</argument>
        </argument>
        <argument>4096</argument>
      </call>
      <call method="addListener">
        <argument>console.error</argument>
        <argument type="collection">
          <argument type="service_closure" id="console_profiler_listener"/>
          <argument>catch</argument>
        </argument>
        <argument>-2048</argument>
      </call>
      <call method="addListener">
        <argument>console.terminate</argument>
        <argument type="collection">
          <argument type="service_closure" id="console_profiler_listener"/>
          <argument>profile</argument>
        </argument>
        <argument>-4096</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service_closure" id="data_collector.request"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="data_collector.request"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Messenger\Event\WorkerMessageHandledEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="doctrine.orm.messenger.event_subscriber.doctrine_clear_entity_manager"/>
          <argument>onWorkerMessageHandled</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Messenger\Event\WorkerMessageFailedEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="doctrine.orm.messenger.event_subscriber.doctrine_clear_entity_manager"/>
          <argument>onWorkerMessageFailed</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.view</argument>
        <argument type="collection">
          <argument type="service_closure" id="controller.template_attribute_listener"/>
          <argument>onKernelView</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Mailer\Event\MessageEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="twig.mailer.message_listener"/>
          <argument>onMessage</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller_arguments</argument>
        <argument type="collection">
          <argument type="service_closure" id="controller.is_granted_attribute_listener"/>
          <argument>onKernelControllerArguments</argument>
        </argument>
        <argument>20</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\CheckPassportEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.listener.check_authenticator_credentials"/>
          <argument>checkPassport</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\LoginSuccessEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.listener.password_migrating"/>
          <argument>onLoginSuccess</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>debug.security.authorization.vote</argument>
        <argument type="collection">
          <argument type="service_closure" id="debug.security.voter.vote_listener"/>
          <argument>onVoterVote</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="debug.security.firewall"/>
          <argument>configureLogoutUrlGenerator</argument>
        </argument>
        <argument>8</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="debug.security.firewall"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>8</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service_closure" id="debug.security.firewall"/>
          <argument>onKernelFinishRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service_closure" id="sonata.admin.event_listener.configure_crud_controller"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\CheckPassportEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.listener.csrf_protection"/>
          <argument>checkPassport</argument>
        </argument>
        <argument>512</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\LogoutEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.logout.listener.csrf_token_clearing"/>
          <argument>onLogout</argument>
        </argument>
        <argument>0</argument>
      </call>
    </service>
    <service id="debug.controller_resolver" class="Symfony\Component\HttpKernel\Controller\TraceableControllerResolver">
      <tag name="monolog.logger" channel="request"/>
      <tag name="container.decorator" id="controller_resolver" inner="debug.controller_resolver.inner"/>
      <argument type="service" id="debug.controller_resolver.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver" class="Symfony\Component\HttpKernel\Controller\TraceableArgumentResolver">
      <tag name="container.decorator" id="argument_resolver" inner="debug.argument_resolver.inner"/>
      <argument type="service" id="debug.argument_resolver.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="argument_resolver.not_tagged_controller" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\NotTaggedControllerValueResolver">
      <tag name="controller.argument_value_resolver" priority="-200"/>
      <argument type="service" id=".service_locator.iAuVEDq"/>
    </service>
    <service id="debug.log_processor" class="Symfony\Bridge\Monolog\Processor\DebugProcessor">
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id=".virtual_request_stack"/>
    </service>
    <service id="debug.debug_logger_configurator" class="Symfony\Component\HttpKernel\Log\DebugLoggerConfigurator">
      <argument type="service" id="debug.log_processor"/>
      <argument>%env(bool:default::key:web:default:kernel.runtime_mode:)%</argument>
    </service>
    <service id="routing.resolver" class="Symfony\Component\Config\Loader\LoaderResolver">
      <call method="addLoader">
        <argument type="service" id="routing.loader.xml"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.yml"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.php"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.glob"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.directory"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.container"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="sonata.admin.route_loader"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.attribute"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.attribute.directory"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.attribute.file"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.psr4"/>
      </call>
    </service>
    <service id="routing.loader.xml" class="Symfony\Component\Routing\Loader\XmlFileLoader">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
      <argument>test</argument>
    </service>
    <service id="routing.loader.yml" class="Symfony\Component\Routing\Loader\YamlFileLoader">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
      <argument>test</argument>
    </service>
    <service id="routing.loader.php" class="Symfony\Component\Routing\Loader\PhpFileLoader">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
      <argument>test</argument>
    </service>
    <service id="routing.loader.glob" class="Symfony\Component\Routing\Loader\GlobFileLoader">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
      <argument>test</argument>
    </service>
    <service id="routing.loader.directory" class="Symfony\Component\Routing\Loader\DirectoryLoader">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
      <argument>test</argument>
    </service>
    <service id="routing.loader.container" class="Symfony\Component\Routing\Loader\ContainerLoader">
      <tag name="routing.loader"/>
      <argument type="service" id=".service_locator.LD5oJC8"/>
      <argument>test</argument>
    </service>
    <service id="routing.loader.attribute" class="Symfony\Bundle\FrameworkBundle\Routing\AttributeRouteControllerLoader">
      <tag name="routing.loader" priority="-10"/>
      <argument>test</argument>
    </service>
    <service id="routing.loader.attribute.directory" class="Symfony\Component\Routing\Loader\AttributeDirectoryLoader">
      <tag name="routing.loader" priority="-10"/>
      <argument type="service" id="file_locator"/>
      <argument type="service" id="routing.loader.attribute"/>
    </service>
    <service id="routing.loader.attribute.file" class="Symfony\Component\Routing\Loader\AttributeFileLoader">
      <tag name="routing.loader" priority="-10"/>
      <argument type="service" id="file_locator"/>
      <argument type="service" id="routing.loader.attribute"/>
    </service>
    <service id="routing.loader.psr4" class="Symfony\Component\Routing\Loader\Psr4DirectoryLoader">
      <tag name="routing.loader" priority="-10"/>
      <argument type="service" id="file_locator"/>
    </service>
    <service id="routing.loader" class="Symfony\Bundle\FrameworkBundle\Routing\DelegatingLoader" public="true">
      <argument type="service" id="routing.resolver"/>
      <argument type="collection">
        <argument key="utf8">true</argument>
      </argument>
      <argument type="collection"/>
    </service>
    <service id="router.default" class="Symfony\Bundle\FrameworkBundle\Routing\Router">
      <tag name="monolog.logger" channel="router"/>
      <tag name="container.service_subscriber" id="routing.loader"/>
      <argument type="service" id=".service_locator.otfny_1.router.default"/>
      <argument>kernel::loadRoutes</argument>
      <argument type="collection">
        <argument key="cache_dir">/var/www/project/var/cache/test</argument>
        <argument key="debug">true</argument>
        <argument key="generator_class">Symfony\Component\Routing\Generator\CompiledUrlGenerator</argument>
        <argument key="generator_dumper_class">Symfony\Component\Routing\Generator\Dumper\CompiledUrlGeneratorDumper</argument>
        <argument key="matcher_class">Symfony\Bundle\FrameworkBundle\Routing\RedirectableCompiledUrlMatcher</argument>
        <argument key="matcher_dumper_class">Symfony\Component\Routing\Matcher\Dumper\CompiledUrlMatcherDumper</argument>
        <argument key="strict_requirements">true</argument>
        <argument key="resource_type">service</argument>
      </argument>
      <argument type="service" id="router.request_context" on-invalid="ignore"/>
      <argument type="service" id="parameter_bag" on-invalid="ignore"/>
      <argument type="service" id="monolog.logger.router" on-invalid="ignore"/>
      <argument>en</argument>
      <call method="setConfigCacheFactory">
        <argument type="service" id="config_cache_factory"/>
      </call>
      <call method="addExpressionLanguageProvider">
        <argument type="service" id="router.expression_language_provider"/>
      </call>
    </service>
    <service id="router.request_context" class="Symfony\Component\Routing\RequestContext" constructor="fromUri">
      <argument></argument>
      <argument>localhost</argument>
      <argument>http</argument>
      <argument>80</argument>
      <argument>443</argument>
      <call method="setParameter">
        <argument>_functions</argument>
        <argument type="service" id="router.expression_language_provider" on-invalid="ignore"/>
      </call>
    </service>
    <service id="router.expression_language_provider" class="Symfony\Component\Routing\Matcher\ExpressionLanguageProvider">
      <tag name="routing.expression_language_provider"/>
      <argument type="service" id=".service_locator.Kl0E_Fe"/>
    </service>
    <service id="router.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\RouterCacheWarmer">
      <tag name="container.service_subscriber" id="router"/>
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id=".service_locator.cUcW89y.router.cache_warmer"/>
    </service>
    <service id="router_listener" class="Symfony\Component\HttpKernel\EventListener\RouterListener">
      <tag name="monolog.logger" channel="request"/>
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="router.request_context" on-invalid="ignore"/>
      <argument type="service" id="monolog.logger.request" on-invalid="ignore"/>
      <argument>/var/www/project</argument>
      <argument>true</argument>
    </service>
    <service id="Symfony\Bundle\FrameworkBundle\Controller\RedirectController" class="Symfony\Bundle\FrameworkBundle\Controller\RedirectController" public="true">
      <argument type="service" id="router.default"/>
      <argument type="service">
        <service class="int">
          <factory service="router.request_context" method="getHttpPort"/>
        </service>
      </argument>
      <argument type="service">
        <service class="int">
          <factory service="router.request_context" method="getHttpsPort"/>
        </service>
      </argument>
    </service>
    <service id="Symfony\Bundle\FrameworkBundle\Controller\TemplateController" class="Symfony\Bundle\FrameworkBundle\Controller\TemplateController" public="true">
      <argument type="service" id="twig" on-invalid="ignore"/>
    </service>
    <service id="property_accessor" class="Symfony\Component\PropertyAccess\PropertyAccessor">
      <argument>3</argument>
      <argument>2</argument>
      <argument type="service" id="cache.property_access" on-invalid="ignore"/>
      <argument type="service" id="property_info.reflection_extractor" on-invalid="null"/>
      <argument type="service" id="property_info.reflection_extractor" on-invalid="null"/>
    </service>
    <service id="secrets.vault" class="Symfony\Bundle\FrameworkBundle\Secrets\SodiumVault">
      <tag name="container.env_var_loader"/>
      <argument>/var/www/project/config/secrets/%env(default:kernel.environment:APP_RUNTIME_ENV)%</argument>
      <argument type="service" id="secrets.decryption_key" on-invalid="ignore"/>
    </service>
    <service id="secrets.decryption_key" class="Symfony\Component\String\LazyString" constructor="fromCallable">
      <argument type="service" id="container.getenv"/>
      <argument>base64:default::SYMFONY_DECRYPTION_SECRET</argument>
    </service>
    <service id="secrets.local_vault" class="Symfony\Bundle\FrameworkBundle\Secrets\DotenvVault">
      <argument>/var/www/project/.env.test.local</argument>
    </service>
    <service id="serializer" class="Symfony\Component\Serializer\Serializer">
      <argument type="collection">
        <argument type="service" id="serializer.denormalizer.unwrapping"/>
        <argument type="service" id="serializer.normalizer.flatten_exception"/>
        <argument type="service" id="serializer.normalizer.problem"/>
        <argument type="service" id="serializer.normalizer.uid"/>
        <argument type="service" id="serializer.normalizer.datetime"/>
        <argument type="service" id="serializer.normalizer.constraint_violation_list"/>
        <argument type="service" id="serializer.normalizer.mime_message"/>
        <argument type="service" id="serializer.normalizer.datetimezone"/>
        <argument type="service" id="serializer.normalizer.dateinterval"/>
        <argument type="service" id="serializer.normalizer.form_error"/>
        <argument type="service" id="serializer.normalizer.backed_enum"/>
        <argument type="service" id="serializer.normalizer.data_uri"/>
        <argument type="service" id="serializer.normalizer.translatable"/>
        <argument type="service" id="serializer.normalizer.json_serializable"/>
        <argument type="service" id="serializer.denormalizer.array"/>
        <argument type="service" id="serializer.normalizer.object"/>
      </argument>
      <argument type="collection">
        <argument type="service" id="serializer.encoder.xml"/>
        <argument type="service" id="serializer.encoder.json"/>
        <argument type="service" id="serializer.encoder.yaml"/>
        <argument type="service" id="serializer.encoder.csv"/>
      </argument>
    </service>
    <service id="serializer.mapping.class_discriminator_resolver" class="Symfony\Component\Serializer\Mapping\ClassDiscriminatorFromClassMetadata">
      <argument type="service" id="serializer.mapping.class_metadata_factory"/>
    </service>
    <service id="serializer.normalizer.constraint_violation_list" class="Symfony\Component\Serializer\Normalizer\ConstraintViolationListNormalizer" autowire="true">
      <tag name="serializer.normalizer" priority="-915"/>
      <argument type="collection"/>
      <argument type="service" id="serializer.name_converter.metadata_aware"/>
    </service>
    <service id="serializer.normalizer.mime_message" class="Symfony\Component\Serializer\Normalizer\MimeMessageNormalizer">
      <tag name="serializer.normalizer" priority="-915"/>
      <argument type="service" id="serializer.normalizer.property"/>
    </service>
    <service id="serializer.normalizer.datetimezone" class="Symfony\Component\Serializer\Normalizer\DateTimeZoneNormalizer">
      <tag name="serializer.normalizer" priority="-915"/>
    </service>
    <service id="serializer.normalizer.dateinterval" class="Symfony\Component\Serializer\Normalizer\DateIntervalNormalizer">
      <tag name="serializer.normalizer" priority="-915"/>
    </service>
    <service id="serializer.normalizer.data_uri" class="Symfony\Component\Serializer\Normalizer\DataUriNormalizer">
      <tag name="serializer.normalizer" priority="-920"/>
      <argument type="service" id="mime_types" on-invalid="null"/>
    </service>
    <service id="serializer.normalizer.datetime" class="Symfony\Component\Serializer\Normalizer\DateTimeNormalizer">
      <tag name="serializer.normalizer" priority="-910"/>
    </service>
    <service id="serializer.normalizer.json_serializable" class="Symfony\Component\Serializer\Normalizer\JsonSerializableNormalizer">
      <tag name="serializer.normalizer" priority="-950"/>
      <argument>null</argument>
      <argument>null</argument>
    </service>
    <service id="serializer.normalizer.problem" class="Symfony\Component\Serializer\Normalizer\ProblemNormalizer">
      <tag name="serializer.normalizer" priority="-890"/>
      <argument key="0">true</argument>
      <argument key="translator" type="service" id="translator.data_collector" on-invalid="null"/>
    </service>
    <service id="serializer.denormalizer.unwrapping" class="Symfony\Component\Serializer\Normalizer\UnwrappingDenormalizer">
      <tag name="serializer.normalizer" priority="1000"/>
      <argument type="service" id="property_accessor"/>
    </service>
    <service id="serializer.normalizer.uid" class="Symfony\Component\Serializer\Normalizer\UidNormalizer">
      <tag name="serializer.normalizer" priority="-890"/>
    </service>
    <service id="serializer.normalizer.translatable" class="Symfony\Component\Serializer\Normalizer\TranslatableNormalizer">
      <tag name="serializer.normalizer" priority="-920"/>
      <argument type="service" id="translator.data_collector"/>
    </service>
    <service id="serializer.normalizer.form_error" class="Symfony\Component\Serializer\Normalizer\FormErrorNormalizer">
      <tag name="serializer.normalizer" priority="-915"/>
    </service>
    <service id="serializer.normalizer.object" class="Symfony\Component\Serializer\Normalizer\ObjectNormalizer">
      <tag name="serializer.normalizer" priority="-1000"/>
      <argument type="service" id="serializer.mapping.class_metadata_factory"/>
      <argument type="service" id="serializer.name_converter.metadata_aware"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="property_info" on-invalid="ignore"/>
      <argument type="service" id="serializer.mapping.class_discriminator_resolver" on-invalid="ignore"/>
      <argument>null</argument>
      <argument type="collection"/>
      <argument type="service" id="property_info" on-invalid="ignore"/>
    </service>
    <service id="serializer.normalizer.property" class="Symfony\Component\Serializer\Normalizer\PropertyNormalizer">
      <argument type="service" id="serializer.mapping.class_metadata_factory"/>
      <argument type="service" id="serializer.name_converter.metadata_aware"/>
      <argument type="service" id="property_info" on-invalid="ignore"/>
      <argument type="service" id="serializer.mapping.class_discriminator_resolver" on-invalid="ignore"/>
      <argument>null</argument>
      <argument type="collection"/>
    </service>
    <service id="serializer.denormalizer.array" class="Symfony\Component\Serializer\Normalizer\ArrayDenormalizer">
      <tag name="serializer.normalizer" priority="-990"/>
    </service>
    <service id="serializer.mapping.chain_loader" class="Symfony\Component\Serializer\Mapping\Loader\LoaderChain">
      <argument type="collection">
        <argument type="service">
          <service class="Symfony\Component\Serializer\Mapping\Loader\AttributeLoader">
            <argument>null</argument>
          </service>
        </argument>
      </argument>
    </service>
    <service id="serializer.mapping.class_metadata_factory" class="Symfony\Component\Serializer\Mapping\Factory\ClassMetadataFactory">
      <argument type="service" id="serializer.mapping.chain_loader"/>
    </service>
    <service id="serializer.mapping.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\SerializerCacheWarmer">
      <tag name="kernel.cache_warmer"/>
      <argument type="collection">
        <argument type="service">
          <service class="Symfony\Component\Serializer\Mapping\Loader\AttributeLoader">
            <argument>null</argument>
          </service>
        </argument>
      </argument>
      <argument>/var/www/project/var/cache/test/serialization.php</argument>
    </service>
    <service id="serializer.mapping.cache.symfony" class="Psr\Cache\CacheItemPoolInterface">
      <argument>/var/www/project/var/cache/test/serialization.php</argument>
      <argument type="service" id="cache.serializer"/>
      <factory class="Symfony\Component\Cache\Adapter\PhpArrayAdapter" method="create"/>
    </service>
    <service id="serializer.encoder.xml" class="Symfony\Component\Serializer\Encoder\XmlEncoder">
      <tag name="serializer.encoder"/>
    </service>
    <service id="serializer.encoder.json" class="Symfony\Component\Serializer\Encoder\JsonEncoder">
      <tag name="serializer.encoder"/>
      <argument>null</argument>
      <argument>null</argument>
    </service>
    <service id="serializer.encoder.yaml" class="Symfony\Component\Serializer\Encoder\YamlEncoder">
      <tag name="serializer.encoder"/>
      <argument>null</argument>
      <argument>null</argument>
    </service>
    <service id="serializer.encoder.csv" class="Symfony\Component\Serializer\Encoder\CsvEncoder">
      <tag name="serializer.encoder"/>
    </service>
    <service id="serializer.name_converter.camel_case_to_snake_case" class="Symfony\Component\Serializer\NameConverter\CamelCaseToSnakeCaseNameConverter"/>
    <service id="serializer.name_converter.metadata_aware" class="Symfony\Component\Serializer\NameConverter\MetadataAwareNameConverter">
      <argument type="service" id="serializer.mapping.class_metadata_factory"/>
    </service>
    <service id="property_info.serializer_extractor" class="Symfony\Component\PropertyInfo\Extractor\SerializerExtractor">
      <tag name="property_info.list_extractor" priority="-999"/>
      <argument type="service" id="serializer.mapping.class_metadata_factory"/>
    </service>
    <service id="error_handler.error_renderer.serializer" class="Symfony\Component\ErrorHandler\ErrorRenderer\SerializerErrorRenderer">
      <argument type="service" id="serializer"/>
      <argument type="service">
        <service>
          <argument type="service" id="request_stack"/>
          <factory class="Symfony\Component\ErrorHandler\ErrorRenderer\SerializerErrorRenderer" method="getPreferredFormat"/>
        </service>
      </argument>
      <argument type="service" id="twig.error_renderer.html"/>
      <argument type="service">
        <service>
          <argument type="service" id="request_stack"/>
          <argument>true</argument>
          <factory class="Symfony\Component\ErrorHandler\ErrorRenderer\HtmlErrorRenderer" method="isDebug"/>
        </service>
      </argument>
    </service>
    <service id="serializer.normalizer.backed_enum" class="Symfony\Component\Serializer\Normalizer\BackedEnumNormalizer">
      <tag name="serializer.normalizer" priority="-915"/>
    </service>
    <service id="property_info" class="Symfony\Component\PropertyInfo\PropertyInfoExtractor">
      <argument type="iterator">
        <argument type="service" id="property_info.serializer_extractor"/>
        <argument type="service" id="property_info.reflection_extractor"/>
        <argument type="service" id="doctrine.orm.default_entity_manager.property_info_extractor"/>
      </argument>
      <argument type="iterator">
        <argument type="service" id="doctrine.orm.default_entity_manager.property_info_extractor"/>
        <argument type="service" id="property_info.phpstan_extractor"/>
        <argument type="service" id="property_info.php_doc_extractor"/>
        <argument type="service" id="property_info.reflection_extractor"/>
      </argument>
      <argument type="iterator">
        <argument type="service" id="property_info.php_doc_extractor"/>
      </argument>
      <argument type="iterator">
        <argument type="service" id="doctrine.orm.default_entity_manager.property_info_extractor"/>
        <argument type="service" id="property_info.reflection_extractor"/>
      </argument>
      <argument type="iterator">
        <argument type="service" id="property_info.reflection_extractor"/>
      </argument>
    </service>
    <service id="property_info.reflection_extractor" class="Symfony\Component\PropertyInfo\Extractor\ReflectionExtractor">
      <tag name="property_info.list_extractor" priority="-1000"/>
      <tag name="property_info.type_extractor" priority="-1002"/>
      <tag name="property_info.access_extractor" priority="-1000"/>
      <tag name="property_info.initializable_extractor" priority="-1000"/>
    </service>
    <service id="property_info.phpstan_extractor" class="Symfony\Component\PropertyInfo\Extractor\PhpStanExtractor">
      <tag name="property_info.type_extractor" priority="-1000"/>
    </service>
    <service id="property_info.php_doc_extractor" class="Symfony\Component\PropertyInfo\Extractor\PhpDocExtractor">
      <tag name="property_info.description_extractor" priority="-1000"/>
      <tag name="property_info.type_extractor" priority="-1001"/>
    </service>
    <service id="web_link.http_header_serializer" class="Symfony\Component\WebLink\HttpHeaderSerializer"/>
    <service id="web_link.add_link_header_listener" class="Symfony\Component\WebLink\EventListener\AddLinkHeaderListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="web_link.http_header_serializer"/>
    </service>
    <service id=".cache_connection.GD_MSZC" class="Symfony\Component\Cache\Adapter\AbstractAdapter" constructor="createConnection">
      <argument>redis://localhost</argument>
      <argument type="collection">
        <argument key="lazy">true</argument>
      </argument>
    </service>
    <service id=".cache_connection.JKE6keX" class="Symfony\Component\Cache\Adapter\AbstractAdapter" constructor="createConnection">
      <argument>memcached://localhost</argument>
      <argument type="collection">
        <argument key="lazy">true</argument>
      </argument>
    </service>
    <service id="cache.property_access" class="Symfony\Component\Cache\Adapter\ArrayAdapter">
      <argument>0</argument>
      <argument>false</argument>
    </service>
    <service id="session.factory" class="Symfony\Component\HttpFoundation\Session\SessionFactory">
      <argument type="service" id="request_stack"/>
      <argument type="service" id="session.storage.factory.mock_file"/>
      <argument type="collection">
        <argument type="service" id="test.session.listener"/>
        <argument>onSessionUsage</argument>
      </argument>
    </service>
    <service id="session.storage.factory.native" class="Symfony\Component\HttpFoundation\Session\Storage\NativeSessionStorageFactory">
      <argument>%session.storage.options%</argument>
      <argument type="service" id="session.handler.native"/>
      <argument type="service">
        <service class="Symfony\Component\HttpFoundation\Session\Storage\MetadataBag">
          <argument>_sf2_meta</argument>
          <argument>0</argument>
        </service>
      </argument>
      <argument>true</argument>
    </service>
    <service id="session.storage.factory.php_bridge" class="Symfony\Component\HttpFoundation\Session\Storage\PhpBridgeSessionStorageFactory">
      <argument type="service" id="session.handler.native"/>
      <argument type="service">
        <service class="Symfony\Component\HttpFoundation\Session\Storage\MetadataBag">
          <argument>_sf2_meta</argument>
          <argument>0</argument>
        </service>
      </argument>
      <argument>true</argument>
    </service>
    <service id="session.storage.factory.mock_file" class="Symfony\Component\HttpFoundation\Session\Storage\MockFileSessionStorageFactory">
      <argument>/var/www/project/var/cache/test/sessions</argument>
      <argument>MOCKSESSID</argument>
      <argument type="service">
        <service class="Symfony\Component\HttpFoundation\Session\Storage\MetadataBag">
          <argument>_sf2_meta</argument>
          <argument>0</argument>
        </service>
      </argument>
    </service>
    <service id="session.handler.native" class="Symfony\Component\HttpFoundation\Session\Storage\Handler\StrictSessionHandler">
      <argument type="service">
        <service class="SessionHandler"/>
      </argument>
    </service>
    <service id="session.handler.native_file" class="Symfony\Component\HttpFoundation\Session\Storage\Handler\StrictSessionHandler">
      <argument type="service">
        <service class="Symfony\Component\HttpFoundation\Session\Storage\Handler\NativeFileSessionHandler">
          <argument>null</argument>
        </service>
      </argument>
    </service>
    <service id="session.abstract_handler" class="Symfony\Component\HttpFoundation\Session\Storage\Handler\AbstractSessionHandler">
      <argument type="abstract">A string or a connection object</argument>
      <argument type="collection"/>
      <factory class="Symfony\Component\HttpFoundation\Session\Storage\Handler\SessionHandlerFactory" method="createHandler"/>
    </service>
    <service id="session.marshaller" class="Symfony\Component\HttpFoundation\Session\Storage\Handler\IdentityMarshaller"/>
    <service id="security.csrf.token_generator" class="Symfony\Component\Security\Csrf\TokenGenerator\UriSafeTokenGenerator"/>
    <service id="security.csrf.token_storage" class="Symfony\Component\Security\Csrf\TokenStorage\SessionTokenStorage">
      <argument type="service" id="request_stack"/>
    </service>
    <service id="security.csrf.token_manager" class="Symfony\Component\Security\Csrf\CsrfTokenManager">
      <argument type="service" id="security.csrf.token_generator"/>
      <argument type="service" id="security.csrf.token_storage"/>
      <argument type="service" id="request_stack" on-invalid="ignore"/>
    </service>
    <service id="twig.runtime.security_csrf" class="Symfony\Bridge\Twig\Extension\CsrfRuntime">
      <tag name="twig.runtime"/>
      <argument type="service" id="security.csrf.token_manager"/>
    </service>
    <service id="twig.extension.security_csrf" class="Symfony\Bridge\Twig\Extension\CsrfExtension">
      <tag name="twig.extension"/>
    </service>
    <service id="form.resolved_type_factory" class="Symfony\Component\Form\Extension\DataCollector\Proxy\ResolvedTypeFactoryDataCollectorProxy">
      <argument type="service">
        <service class="Symfony\Component\Form\ResolvedFormTypeFactory"/>
      </argument>
      <argument type="service" id="data_collector.form"/>
    </service>
    <service id="form.registry" class="Symfony\Component\Form\FormRegistry">
      <argument type="collection">
        <argument type="service" id="form.extension"/>
      </argument>
      <argument type="service" id="form.resolved_type_factory"/>
    </service>
    <service id="form.factory" class="Symfony\Component\Form\FormFactory">
      <argument type="service" id="form.registry"/>
    </service>
    <service id="form.extension" class="Symfony\Component\Form\Extension\DependencyInjection\DependencyInjectionExtension">
      <argument type="service" id=".service_locator..OzUK48"/>
      <argument type="collection">
        <argument key="Symfony\Component\Form\Extension\Core\Type\FormType" type="iterator">
          <argument type="service" id="form.type_extension.form.transformation_failure_handling"/>
          <argument type="service" id="form.type_extension.form.http_foundation"/>
          <argument type="service" id="form.type_extension.form.validator"/>
          <argument type="service" id="form.type_extension.upload.validator"/>
          <argument type="service" id="form.type_extension.csrf"/>
          <argument type="service" id="form.type_extension.form.data_collector"/>
          <argument type="service" id="form.type_extension.form.password_hasher"/>
          <argument type="service" id="sonata.admin.form.extension.field"/>
          <argument type="service" id="sonata.admin.form.extension.field.mopa"/>
        </argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\RepeatedType" type="iterator">
          <argument type="service" id="form.type_extension.repeated.validator"/>
        </argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\SubmitType" type="iterator">
          <argument type="service" id="form.type_extension.submit.validator"/>
        </argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\PasswordType" type="iterator">
          <argument type="service" id="form.type_extension.password.password_hasher"/>
        </argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\ChoiceType" type="iterator">
          <argument type="service" id="sonata.admin.form.extension.choice"/>
        </argument>
      </argument>
      <argument type="iterator">
        <argument type="service" id="form.type_guesser.validator"/>
        <argument type="service" id="form.type_guesser.doctrine"/>
      </argument>
    </service>
    <service id="form.type_guesser.validator" class="Symfony\Component\Form\Extension\Validator\ValidatorTypeGuesser">
      <tag name="form.type_guesser"/>
      <argument type="service" id="debug.validator"/>
    </service>
    <service id="form.choice_list_factory.default" class="Symfony\Component\Form\ChoiceList\Factory\DefaultChoiceListFactory"/>
    <service id="form.choice_list_factory.property_access" class="Symfony\Component\Form\ChoiceList\Factory\PropertyAccessDecorator">
      <argument type="service" id="form.choice_list_factory.default"/>
      <argument type="service" id="property_accessor"/>
    </service>
    <service id="form.choice_list_factory.cached" class="Symfony\Component\Form\ChoiceList\Factory\CachingFactoryDecorator">
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="form.choice_list_factory.property_access"/>
    </service>
    <service id="form.type.form" class="Symfony\Component\Form\Extension\Core\Type\FormType">
      <tag name="form.type"/>
      <argument type="service" id="property_accessor"/>
    </service>
    <service id="form.type.choice" class="Symfony\Component\Form\Extension\Core\Type\ChoiceType">
      <tag name="form.type"/>
      <argument type="service" id="form.choice_list_factory.cached"/>
      <argument type="service" id="translator.data_collector" on-invalid="ignore"/>
    </service>
    <service id="form.type.file" class="Symfony\Component\Form\Extension\Core\Type\FileType">
      <tag name="form.type"/>
      <argument type="service" id="translator.data_collector" on-invalid="ignore"/>
    </service>
    <service id="form.type.color" class="Symfony\Component\Form\Extension\Core\Type\ColorType">
      <tag name="form.type"/>
      <argument type="service" id="translator.data_collector" on-invalid="ignore"/>
    </service>
    <service id="form.type_extension.form.transformation_failure_handling" class="Symfony\Component\Form\Extension\Core\Type\TransformationFailureExtension">
      <tag name="form.type_extension" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
      <argument type="service" id="translator.data_collector" on-invalid="ignore"/>
    </service>
    <service id="form.type_extension.form.http_foundation" class="Symfony\Component\Form\Extension\HttpFoundation\Type\FormTypeHttpFoundationExtension">
      <tag name="form.type_extension"/>
      <argument type="service" id="form.type_extension.form.request_handler"/>
    </service>
    <service id="form.type_extension.form.request_handler" class="Symfony\Component\Form\Extension\HttpFoundation\HttpFoundationRequestHandler">
      <argument type="service" id="form.server_params"/>
    </service>
    <service id="form.server_params" class="Symfony\Component\Form\Util\ServerParams">
      <argument type="service" id="request_stack"/>
    </service>
    <service id="form.type_extension.form.validator" class="Symfony\Component\Form\Extension\Validator\Type\FormTypeValidatorExtension">
      <tag name="form.type_extension" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
      <argument type="service" id="debug.validator"/>
      <argument>false</argument>
      <argument type="service" id="twig.form.renderer" on-invalid="ignore"/>
      <argument type="service" id="translator.data_collector" on-invalid="ignore"/>
    </service>
    <service id="form.type_extension.repeated.validator" class="Symfony\Component\Form\Extension\Validator\Type\RepeatedTypeValidatorExtension">
      <tag name="form.type_extension"/>
    </service>
    <service id="form.type_extension.submit.validator" class="Symfony\Component\Form\Extension\Validator\Type\SubmitTypeValidatorExtension">
      <tag name="form.type_extension" extended-type="Symfony\Component\Form\Extension\Core\Type\SubmitType"/>
    </service>
    <service id="form.type_extension.upload.validator" class="Symfony\Component\Form\Extension\Validator\Type\UploadValidatorExtension">
      <tag name="form.type_extension"/>
      <argument type="service" id="translator.data_collector"/>
      <argument>validators</argument>
    </service>
    <service id="form.type_extension.csrf" class="Symfony\Component\Form\Extension\Csrf\Type\FormTypeCsrfExtension">
      <tag name="form.type_extension"/>
      <argument type="service" id="security.csrf.token_manager"/>
      <argument>true</argument>
      <argument>_token</argument>
      <argument type="service" id="translator.data_collector" on-invalid="null"/>
      <argument>validators</argument>
      <argument type="service" id="form.server_params"/>
    </service>
    <service id="validator.builder" class="Symfony\Component\Validator\ValidatorBuilder">
      <call method="setConstraintValidatorFactory">
        <argument type="service" id="validator.validator_factory"/>
      </call>
      <call method="setGroupProviderLocator">
        <argument type="service" id=".service_locator.Xbsa8iG"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector" on-invalid="ignore"/>
      </call>
      <call method="setTranslationDomain">
        <argument>validators</argument>
      </call>
      <call method="addXmlMappings">
        <argument type="collection">
          <argument>/var/www/project/vendor/symfony/form/Resources/config/validation.xml</argument>
        </argument>
      </call>
      <call method="enableAttributeMapping">
        <argument>true</argument>
      </call>
      <call method="addMethodMapping">
        <argument>loadValidatorMetadata</argument>
      </call>
      <call method="addObjectInitializers">
        <argument type="collection">
          <argument type="service" id="doctrine.orm.validator_initializer"/>
        </argument>
      </call>
      <call method="addLoader">
        <argument type="service" id="validator.property_info_loader"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="doctrine.orm.default_entity_manager.validator_loader"/>
      </call>
      <factory class="Symfony\Component\Validator\Validation" method="createValidatorBuilder"/>
    </service>
    <service id="validator.mapping.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\ValidatorCacheWarmer">
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id="validator.builder"/>
      <argument>/var/www/project/var/cache/test/validation.php</argument>
    </service>
    <service id="validator.mapping.cache.adapter" class="Symfony\Component\Cache\Adapter\PhpArrayAdapter" constructor="create">
      <argument>/var/www/project/var/cache/test/validation.php</argument>
      <argument type="service" id="cache.validator"/>
    </service>
    <service id="validator.validator_factory" class="Symfony\Component\Validator\ContainerConstraintValidatorFactory">
      <argument type="service" id=".service_locator.ratsPLV"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\ExpressionLanguageSyntaxValidator" class="Symfony\Component\Validator\Constraints\ExpressionLanguageSyntaxValidator" abstract="true">
      <tag name="container.excluded" source="in &quot;config/validator.php&quot;"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\AllValidator" class="Symfony\Component\Validator\Constraints\AllValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\AtLeastOneOfValidator" class="Symfony\Component\Validator\Constraints\AtLeastOneOfValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\BicValidator" class="Symfony\Component\Validator\Constraints\BicValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\BlankValidator" class="Symfony\Component\Validator\Constraints\BlankValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\CallbackValidator" class="Symfony\Component\Validator\Constraints\CallbackValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\CardSchemeValidator" class="Symfony\Component\Validator\Constraints\CardSchemeValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\ChoiceValidator" class="Symfony\Component\Validator\Constraints\ChoiceValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\CidrValidator" class="Symfony\Component\Validator\Constraints\CidrValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\CollectionValidator" class="Symfony\Component\Validator\Constraints\CollectionValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\CompoundValidator" class="Symfony\Component\Validator\Constraints\CompoundValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\CountValidator" class="Symfony\Component\Validator\Constraints\CountValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\CountryValidator" class="Symfony\Component\Validator\Constraints\CountryValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\CssColorValidator" class="Symfony\Component\Validator\Constraints\CssColorValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\CurrencyValidator" class="Symfony\Component\Validator\Constraints\CurrencyValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\DateTimeValidator" class="Symfony\Component\Validator\Constraints\DateTimeValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\DateValidator" class="Symfony\Component\Validator\Constraints\DateValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\DivisibleByValidator" class="Symfony\Component\Validator\Constraints\DivisibleByValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\EmailValidator" class="Symfony\Component\Validator\Constraints\EmailValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\EqualToValidator" class="Symfony\Component\Validator\Constraints\EqualToValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\ExpressionSyntaxValidator" class="Symfony\Component\Validator\Constraints\ExpressionSyntaxValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\ExpressionValidator" class="Symfony\Component\Validator\Constraints\ExpressionValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\FileValidator" class="Symfony\Component\Validator\Constraints\FileValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\GreaterThanOrEqualValidator" class="Symfony\Component\Validator\Constraints\GreaterThanOrEqualValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\GreaterThanValidator" class="Symfony\Component\Validator\Constraints\GreaterThanValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\HostnameValidator" class="Symfony\Component\Validator\Constraints\HostnameValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\IbanValidator" class="Symfony\Component\Validator\Constraints\IbanValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\IdenticalToValidator" class="Symfony\Component\Validator\Constraints\IdenticalToValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\ImageValidator" class="Symfony\Component\Validator\Constraints\ImageValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\IpValidator" class="Symfony\Component\Validator\Constraints\IpValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\IsFalseValidator" class="Symfony\Component\Validator\Constraints\IsFalseValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\IsNullValidator" class="Symfony\Component\Validator\Constraints\IsNullValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\IsTrueValidator" class="Symfony\Component\Validator\Constraints\IsTrueValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\IsbnValidator" class="Symfony\Component\Validator\Constraints\IsbnValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\IsinValidator" class="Symfony\Component\Validator\Constraints\IsinValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\IssnValidator" class="Symfony\Component\Validator\Constraints\IssnValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\JsonValidator" class="Symfony\Component\Validator\Constraints\JsonValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\LanguageValidator" class="Symfony\Component\Validator\Constraints\LanguageValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\LengthValidator" class="Symfony\Component\Validator\Constraints\LengthValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\LessThanOrEqualValidator" class="Symfony\Component\Validator\Constraints\LessThanOrEqualValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\LessThanValidator" class="Symfony\Component\Validator\Constraints\LessThanValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\LocaleValidator" class="Symfony\Component\Validator\Constraints\LocaleValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\LuhnValidator" class="Symfony\Component\Validator\Constraints\LuhnValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\NoSuspiciousCharactersValidator" class="Symfony\Component\Validator\Constraints\NoSuspiciousCharactersValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\NotBlankValidator" class="Symfony\Component\Validator\Constraints\NotBlankValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\NotCompromisedPasswordValidator" class="Symfony\Component\Validator\Constraints\NotCompromisedPasswordValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\NotEqualToValidator" class="Symfony\Component\Validator\Constraints\NotEqualToValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\NotIdenticalToValidator" class="Symfony\Component\Validator\Constraints\NotIdenticalToValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\NotNullValidator" class="Symfony\Component\Validator\Constraints\NotNullValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\PasswordStrengthValidator" class="Symfony\Component\Validator\Constraints\PasswordStrengthValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\RangeValidator" class="Symfony\Component\Validator\Constraints\RangeValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\RegexValidator" class="Symfony\Component\Validator\Constraints\RegexValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\SequentiallyValidator" class="Symfony\Component\Validator\Constraints\SequentiallyValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\TimeValidator" class="Symfony\Component\Validator\Constraints\TimeValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\TimezoneValidator" class="Symfony\Component\Validator\Constraints\TimezoneValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\TypeValidator" class="Symfony\Component\Validator\Constraints\TypeValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\UlidValidator" class="Symfony\Component\Validator\Constraints\UlidValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\UniqueValidator" class="Symfony\Component\Validator\Constraints\UniqueValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\UrlValidator" class="Symfony\Component\Validator\Constraints\UrlValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\UuidValidator" class="Symfony\Component\Validator\Constraints\UuidValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\ValidValidator" class="Symfony\Component\Validator\Constraints\ValidValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\WhenValidator" class="Symfony\Component\Validator\Constraints\WhenValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="validator.expression" class="Symfony\Component\Validator\Constraints\ExpressionValidator">
      <tag name="validator.constraint_validator" alias="validator.expression"/>
      <argument type="service" id="validator.expression_language" on-invalid="null"/>
    </service>
    <service id="validator.expression_language" class="Symfony\Component\ExpressionLanguage\ExpressionLanguage">
      <argument type="service" id="cache.validator_expression_language" on-invalid="null"/>
      <call method="registerProvider">
        <argument type="service" id="validator.expression_language_provider" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.validator_expression_language" class="Symfony\Component\Cache\Adapter\TraceableAdapter" public="true">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="cache.validator_expression_language.recorder_inner"/>
    </service>
    <service id="validator.expression_language_provider" class="Symfony\Component\Validator\Constraints\ExpressionLanguageProvider"/>
    <service id="validator.email" class="Symfony\Component\Validator\Constraints\EmailValidator">
      <tag name="validator.constraint_validator"/>
      <argument>html5</argument>
    </service>
    <service id="validator.not_compromised_password" class="Symfony\Component\Validator\Constraints\NotCompromisedPasswordValidator">
      <tag name="validator.constraint_validator"/>
      <argument type="service" id=".debug.http_client" on-invalid="null"/>
      <argument>UTF-8</argument>
      <argument>false</argument>
      <argument>null</argument>
    </service>
    <service id="validator.when" class="Symfony\Component\Validator\Constraints\WhenValidator">
      <tag name="validator.constraint_validator"/>
      <argument type="service" id="validator.expression_language" on-invalid="null"/>
    </service>
    <service id="validator.no_suspicious_characters" class="Symfony\Component\Validator\Constraints\NoSuspiciousCharactersValidator">
      <tag name="validator.constraint_validator" alias="Symfony\Component\Validator\Constraints\NoSuspiciousCharactersValidator"/>
      <argument type="collection"/>
    </service>
    <service id="validator.property_info_loader" class="Symfony\Component\Validator\Mapping\Loader\PropertyInfoLoader">
      <tag name="validator.auto_mapper"/>
      <argument type="service" id="property_info"/>
      <argument type="service" id="property_info"/>
      <argument type="service" id="property_info"/>
      <argument>null</argument>
    </service>
    <service id="messenger.senders_locator" class="Symfony\Component\Messenger\Transport\Sender\SendersLocator">
      <argument type="collection">
        <argument key="Symfony\Component\Mailer\Messenger\SendEmailMessage" type="collection">
          <argument>async</argument>
        </argument>
        <argument key="Symfony\Component\Notifier\Message\ChatMessage" type="collection">
          <argument>async</argument>
        </argument>
        <argument key="Symfony\Component\Notifier\Message\SmsMessage" type="collection">
          <argument>async</argument>
        </argument>
      </argument>
      <argument type="service" id=".service_locator.c7f47p7"/>
    </service>
    <service id="messenger.middleware.send_message" class="Symfony\Component\Messenger\Middleware\SendMessageMiddleware" abstract="true">
      <tag name="monolog.logger" channel="messenger"/>
      <argument type="service" id="messenger.senders_locator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.messenger" on-invalid="ignore"/>
      </call>
    </service>
    <service id="messenger.transport.symfony_serializer" class="Symfony\Component\Messenger\Transport\Serialization\Serializer">
      <argument type="service" id="serializer"/>
      <argument>json</argument>
      <argument type="collection"/>
    </service>
    <service id="serializer.normalizer.flatten_exception" class="Symfony\Component\Messenger\Transport\Serialization\Normalizer\FlattenExceptionNormalizer">
      <tag name="serializer.normalizer" priority="-880"/>
    </service>
    <service id="messenger.transport.native_php_serializer" class="Symfony\Component\Messenger\Transport\Serialization\PhpSerializer"/>
    <service id="messenger.middleware.handle_message" class="Symfony\Component\Messenger\Middleware\HandleMessageMiddleware" abstract="true">
      <tag name="monolog.logger" channel="messenger"/>
      <argument type="abstract">bus handler resolver</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.messenger" on-invalid="ignore"/>
      </call>
    </service>
    <service id="messenger.middleware.add_bus_name_stamp_middleware" class="Symfony\Component\Messenger\Middleware\AddBusNameStampMiddleware" abstract="true"/>
    <service id="messenger.middleware.dispatch_after_current_bus" class="Symfony\Component\Messenger\Middleware\DispatchAfterCurrentBusMiddleware"/>
    <service id="messenger.middleware.validation" class="Symfony\Component\Messenger\Middleware\ValidationMiddleware">
      <argument type="service" id="debug.validator"/>
    </service>
    <service id="messenger.middleware.reject_redelivered_message_middleware" class="Symfony\Component\Messenger\Middleware\RejectRedeliveredMessageMiddleware"/>
    <service id="messenger.middleware.failed_message_processing_middleware" class="Symfony\Component\Messenger\Middleware\FailedMessageProcessingMiddleware"/>
    <service id="messenger.middleware.traceable" class="Symfony\Component\Messenger\Middleware\TraceableMiddleware" abstract="true">
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="messenger.middleware.router_context" class="Symfony\Component\Messenger\Middleware\RouterContextMiddleware">
      <argument type="service" id="router.default"/>
    </service>
    <service id="messenger.receiver_locator" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="async" type="service_closure" id="messenger.transport.async"/>
        <argument key="failed" type="service_closure" id="messenger.transport.failed"/>
        <argument key="messenger.transport.async" type="service_closure" id="messenger.transport.async"/>
        <argument key="messenger.transport.failed" type="service_closure" id="messenger.transport.failed"/>
      </argument>
    </service>
    <service id="messenger.transport_factory" class="Symfony\Component\Messenger\Transport\TransportFactory">
      <argument type="tagged_iterator" tag="messenger.transport_factory"/>
    </service>
    <service id="messenger.transport.amqp.factory" class="Symfony\Component\Messenger\Bridge\Amqp\Transport\AmqpTransportFactory"/>
    <service id="messenger.transport.redis.factory" class="Symfony\Component\Messenger\Bridge\Redis\Transport\RedisTransportFactory"/>
    <service id="messenger.transport.sync.factory" class="Symfony\Component\Messenger\Transport\Sync\SyncTransportFactory">
      <tag name="messenger.transport_factory"/>
      <argument type="service" id="messenger.routable_message_bus"/>
    </service>
    <service id="messenger.transport.in_memory.factory" class="Symfony\Component\Messenger\Transport\InMemory\InMemoryTransportFactory">
      <tag name="messenger.transport_factory"/>
      <tag name="kernel.reset" method="reset"/>
    </service>
    <service id="messenger.transport.sqs.factory" class="Symfony\Component\Messenger\Bridge\AmazonSqs\Transport\AmazonSqsTransportFactory">
      <tag name="monolog.logger" channel="messenger"/>
      <tag name="container.error" message="Invalid service &quot;messenger.transport.sqs.factory&quot;: class &quot;Symfony\Component\Messenger\Bridge\AmazonSqs\Transport\AmazonSqsTransportFactory&quot; does not exist."/>
      <argument type="service" id="monolog.logger.messenger" on-invalid="ignore"/>
    </service>
    <service id="messenger.transport.beanstalkd.factory" class="Symfony\Component\Messenger\Bridge\Beanstalkd\Transport\BeanstalkdTransportFactory"/>
    <service id="messenger.retry_strategy_locator" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="async" type="service_closure" id="messenger.retry.multiplier_retry_strategy.async"/>
        <argument key="failed" type="service_closure" id="messenger.retry.multiplier_retry_strategy.failed"/>
      </argument>
    </service>
    <service id="messenger.retry.abstract_multiplier_retry_strategy" class="Symfony\Component\Messenger\Retry\MultiplierRetryStrategy" abstract="true">
      <argument type="abstract">max retries</argument>
      <argument type="abstract">delay ms</argument>
      <argument type="abstract">multiplier</argument>
      <argument type="abstract">max delay ms</argument>
    </service>
    <service id="messenger.retry.send_failed_message_for_retry_listener" class="Symfony\Component\Messenger\EventListener\SendFailedMessageForRetryListener">
      <tag name="monolog.logger" channel="messenger"/>
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id=".service_locator.c7f47p7"/>
      <argument type="service" id="messenger.retry_strategy_locator"/>
      <argument type="service" id="monolog.logger.messenger" on-invalid="ignore"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="messenger.failure.add_error_details_stamp_listener" class="Symfony\Component\Messenger\EventListener\AddErrorDetailsStampListener">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="messenger.failure.send_failed_message_to_failure_transport_listener" class="Symfony\Component\Messenger\EventListener\SendFailedMessageToFailureTransportListener">
      <tag name="monolog.logger" channel="messenger"/>
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id=".service_locator._wyX1Dp"/>
      <argument type="service" id="monolog.logger.messenger" on-invalid="ignore"/>
    </service>
    <service id="messenger.listener.dispatch_pcntl_signal_listener" class="Symfony\Component\Messenger\EventListener\DispatchPcntlSignalListener">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="messenger.listener.stop_worker_on_restart_signal_listener" class="Symfony\Component\Messenger\EventListener\StopWorkerOnRestartSignalListener">
      <tag name="monolog.logger" channel="messenger"/>
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="cache.messenger.restart_workers_signal"/>
      <argument type="service" id="monolog.logger.messenger" on-invalid="ignore"/>
    </service>
    <service id="messenger.listener.stop_worker_signals_listener" class="Symfony\Component\Messenger\EventListener\StopWorkerOnSignalsListener">
      <tag name="monolog.logger" channel="messenger"/>
      <argument>null</argument>
      <argument type="service" id="monolog.logger.messenger" on-invalid="ignore"/>
      <deprecated package="6.4" version="symfony/messenger">The "%service_id%" service is deprecated, use the "Symfony\Component\Console\Command\SignalableCommandInterface" instead.</deprecated>
    </service>
    <service id="messenger.listener.stop_worker_on_stop_exception_listener" class="Symfony\Component\Messenger\EventListener\StopWorkerOnCustomStopExceptionListener">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="messenger.listener.reset_services" class="Symfony\Component\Messenger\EventListener\ResetServicesListener">
      <argument type="service" id="services_resetter"/>
    </service>
    <service id="messenger.routable_message_bus" class="Symfony\Component\Messenger\RoutableMessageBus">
      <argument type="service" id=".service_locator.5cAhUFF"/>
      <argument type="service" id="debug.traced.messenger.bus.default"/>
    </service>
    <service id="messenger.redispatch_message_handler" class="Symfony\Component\Messenger\Handler\RedispatchMessageHandler">
      <tag name="messenger.message_handler"/>
      <argument type="service" id="debug.traced.messenger.bus.default"/>
    </service>
    <service id="messenger.transport.async" class="Symfony\Component\Messenger\Transport\TransportInterface">
      <tag name="messenger.receiver" alias="async" is_failure_transport=""/>
      <argument>%env(MESSENGER_TRANSPORT_DSN)%</argument>
      <argument type="collection">
        <argument key="use_notify">true</argument>
        <argument key="check_delayed_interval">60000</argument>
        <argument key="transport_name">async</argument>
      </argument>
      <argument type="service" id="messenger.transport.native_php_serializer"/>
      <factory service="messenger.transport_factory" method="createTransport"/>
    </service>
    <service id="messenger.retry.multiplier_retry_strategy.async" class="Symfony\Component\Messenger\Retry\MultiplierRetryStrategy">
      <argument>3</argument>
      <argument>1000</argument>
      <argument>2</argument>
      <argument>0</argument>
    </service>
    <service id="messenger.transport.failed" class="Symfony\Component\Messenger\Transport\TransportInterface">
      <tag name="messenger.receiver" alias="failed" is_failure_transport="1"/>
      <argument>doctrine://default?queue_name=failed</argument>
      <argument type="collection">
        <argument key="transport_name">failed</argument>
      </argument>
      <argument type="service" id="messenger.transport.native_php_serializer"/>
      <factory service="messenger.transport_factory" method="createTransport"/>
    </service>
    <service id="messenger.retry.multiplier_retry_strategy.failed" class="Symfony\Component\Messenger\Retry\MultiplierRetryStrategy">
      <argument>3</argument>
      <argument>1000</argument>
      <argument>2</argument>
      <argument>0</argument>
    </service>
    <service id=".service_locator.c7f47p7" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="async" type="service_closure" id="messenger.transport.async"/>
        <argument key="failed" type="service_closure" id="messenger.transport.failed"/>
        <argument key="messenger.transport.async" type="service_closure" id="messenger.transport.async"/>
        <argument key="messenger.transport.failed" type="service_closure" id="messenger.transport.failed"/>
      </argument>
    </service>
    <service id=".service_locator._wyX1Dp" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="async" type="service_closure" id="messenger.transport.failed"/>
        <argument key="failed" type="service_closure" id="messenger.transport.failed"/>
      </argument>
    </service>
    <service id="notifier" class="Symfony\Component\Notifier\Notifier">
      <argument type="service" id=".service_locator.0TACwl3"/>
      <argument type="service" id="notifier.channel_policy" on-invalid="ignore"/>
      <call method="addAdminRecipient">
        <argument type="service" id="notifier.admin_recipient.0"/>
      </call>
    </service>
    <service id="notifier.channel_policy" class="Symfony\Component\Notifier\Channel\ChannelPolicy">
      <argument type="collection">
        <argument key="urgent" type="collection">
          <argument>email</argument>
        </argument>
        <argument key="high" type="collection">
          <argument>email</argument>
        </argument>
        <argument key="medium" type="collection">
          <argument>email</argument>
        </argument>
        <argument key="low" type="collection">
          <argument>email</argument>
        </argument>
      </argument>
    </service>
    <service id="notifier.flash_message_importance_mapper" class="Symfony\Component\Notifier\FlashMessage\DefaultFlashMessageImportanceMapper">
      <argument type="collection"/>
    </service>
    <service id="notifier.channel.browser" class="Symfony\Component\Notifier\Channel\BrowserChannel">
      <tag name="notifier.channel" channel="browser"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="notifier.flash_message_importance_mapper"/>
    </service>
    <service id="notifier.channel.chat" class="Symfony\Component\Notifier\Channel\ChatChannel">
      <tag name="notifier.channel" channel="chat"/>
      <argument>null</argument>
      <argument type="service" id="debug.traced.messenger.bus.default" on-invalid="null"/>
    </service>
    <service id="notifier.channel.sms" class="Symfony\Component\Notifier\Channel\SmsChannel">
      <tag name="notifier.channel" channel="sms"/>
      <argument>null</argument>
      <argument type="service" id="debug.traced.messenger.bus.default" on-invalid="null"/>
    </service>
    <service id="notifier.channel.email" class="Symfony\Component\Notifier\Channel\EmailChannel">
      <tag name="notifier.channel" channel="email"/>
      <argument>null</argument>
      <argument type="service" id="debug.traced.messenger.bus.default" on-invalid="null"/>
      <argument>null</argument>
    </service>
    <service id="notifier.channel.push" class="Symfony\Component\Notifier\Channel\PushChannel">
      <tag name="notifier.channel" channel="push"/>
      <argument>null</argument>
      <argument type="service" id="debug.traced.messenger.bus.default" on-invalid="ignore"/>
    </service>
    <service id="notifier.monolog_handler" class="Symfony\Bridge\Monolog\Handler\NotifierHandler">
      <argument type="service" id="notifier"/>
    </service>
    <service id="notifier.failed_message_listener" class="Symfony\Component\Notifier\EventListener\SendFailedMessageToNotifierListener">
      <argument type="service" id="notifier"/>
    </service>
    <service id="chatter.transports" class="Symfony\Component\Notifier\Transport\Transports">
      <argument type="collection"/>
      <factory service="chatter.transport_factory" method="fromStrings"/>
    </service>
    <service id="chatter.transport_factory" class="Symfony\Component\Notifier\Transport">
      <argument type="tagged_iterator" tag="chatter.transport_factory"/>
    </service>
    <service id="chatter.messenger.chat_handler" class="Symfony\Component\Notifier\Messenger\MessageHandler">
      <tag name="messenger.message_handler" handles="Symfony\Component\Notifier\Message\ChatMessage"/>
      <argument type="service" id="chatter.transports"/>
    </service>
    <service id="texter.transports" class="Symfony\Component\Notifier\Transport\Transports">
      <argument type="collection"/>
      <factory service="texter.transport_factory" method="fromStrings"/>
    </service>
    <service id="texter.transport_factory" class="Symfony\Component\Notifier\Transport">
      <argument type="tagged_iterator" tag="texter.transport_factory"/>
    </service>
    <service id="texter.messenger.sms_handler" class="Symfony\Component\Notifier\Messenger\MessageHandler">
      <tag name="messenger.message_handler" handles="Symfony\Component\Notifier\Message\SmsMessage"/>
      <argument type="service" id="texter.transports"/>
    </service>
    <service id="texter.messenger.push_handler" class="Symfony\Component\Notifier\Messenger\MessageHandler">
      <tag name="messenger.message_handler" handles="Symfony\Component\Notifier\Message\PushMessage"/>
      <argument type="service" id="texter.transports"/>
    </service>
    <service id="notifier.notification_logger_listener" class="Symfony\Component\Notifier\EventListener\NotificationLoggerListener">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="notifier.transport_factory.abstract" class="Symfony\Component\Notifier\Transport\AbstractTransportFactory" abstract="true">
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id=".debug.http_client" on-invalid="ignore"/>
    </service>
    <service id="notifier.transport_factory.null" class="Symfony\Component\Notifier\Transport\NullTransportFactory">
      <tag name="chatter.transport_factory"/>
      <tag name="texter.transport_factory"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id=".debug.http_client" on-invalid="ignore"/>
    </service>
    <service id="notifier.admin_recipient.0" class="Symfony\Component\Notifier\Recipient\Recipient">
      <argument>admin@example.com</argument>
      <argument></argument>
    </service>
    <service id="profiler" class="Symfony\Component\HttpKernel\Profiler\Profiler" public="true">
      <tag name="monolog.logger" channel="profiler"/>
      <tag name="container.private" package="symfony/framework-bundle" version="5.4"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="profiler.storage"/>
      <argument type="service" id="monolog.logger.profiler" on-invalid="null"/>
      <argument>false</argument>
      <call method="add">
        <argument type="service" id="data_collector.request"/>
      </call>
      <call method="add">
        <argument type="service" id=".data_collector.command"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.time"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.memory"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.validator"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.ajax"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.form"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.exception"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.logger"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.events"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.router"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.cache"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.translation"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.security"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.twig"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.http_client"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.doctrine"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.messenger"/>
      </call>
      <call method="add">
        <argument type="service" id="mailer.data_collector"/>
      </call>
      <call method="add">
        <argument type="service" id="notifier.data_collector"/>
      </call>
      <call method="add">
        <argument type="service" id="sonata.block.data_collector"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.config"/>
      </call>
    </service>
    <service id="profiler.storage" class="Symfony\Component\HttpKernel\Profiler\FileProfilerStorage">
      <argument>file:/var/www/project/var/cache/test/profiler</argument>
    </service>
    <service id="profiler_listener" class="Symfony\Component\HttpKernel\EventListener\ProfilerListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="profiler"/>
      <argument type="service" id="request_stack"/>
      <argument>null</argument>
      <argument>false</argument>
      <argument>false</argument>
      <argument>null</argument>
    </service>
    <service id="console_profiler_listener" class="Symfony\Bundle\FrameworkBundle\EventListener\ConsoleProfilerListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="profiler"/>
      <argument type="service" id=".virtual_request_stack"/>
      <argument type="service" id="debug.stopwatch"/>
      <argument>%env(not:default:kernel.runtime_mode.web:)%</argument>
      <argument type="service" id="router.default" on-invalid="null"/>
    </service>
    <service id=".virtual_request_stack" class="Symfony\Component\HttpKernel\Debug\VirtualRequestStack" public="true">
      <argument type="service" id="request_stack"/>
    </service>
    <service id="data_collector.config" class="Symfony\Component\HttpKernel\DataCollector\ConfigDataCollector">
      <tag name="data_collector" template="@WebProfiler/Collector/config.html.twig" id="config" priority="-255"/>
      <call method="setKernel">
        <argument type="service" id="kernel" on-invalid="ignore"/>
      </call>
    </service>
    <service id="data_collector.request" class="Symfony\Component\HttpKernel\DataCollector\RequestDataCollector">
      <tag name="data_collector" template="@WebProfiler/Collector/request.html.twig" id="request" priority="335"/>
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id=".virtual_request_stack" on-invalid="ignore"/>
    </service>
    <service id="data_collector.request.session_collector" class="Closure">
      <argument type="collection">
        <argument type="service" id="data_collector.request"/>
        <argument>collectSessionUsage</argument>
      </argument>
      <factory class="Closure" method="fromCallable"/>
    </service>
    <service id="data_collector.ajax" class="Symfony\Component\HttpKernel\DataCollector\AjaxDataCollector">
      <tag name="data_collector" template="@WebProfiler/Collector/ajax.html.twig" id="ajax" priority="315"/>
    </service>
    <service id="data_collector.exception" class="Symfony\Component\HttpKernel\DataCollector\ExceptionDataCollector">
      <tag name="data_collector" template="@WebProfiler/Collector/exception.html.twig" id="exception" priority="305"/>
    </service>
    <service id="data_collector.events" class="Symfony\Component\HttpKernel\DataCollector\EventDataCollector">
      <tag name="data_collector" template="@WebProfiler/Collector/events.html.twig" id="events" priority="290"/>
      <argument type="tagged_iterator" tag="event_dispatcher.dispatcher" index-by="name" default-index-method="getDefaultNameName" default-priority-method="getDefaultNamePriority"/>
      <argument type="service" id=".virtual_request_stack" on-invalid="ignore"/>
    </service>
    <service id="data_collector.logger" class="Symfony\Component\HttpKernel\DataCollector\LoggerDataCollector">
      <tag name="monolog.logger" channel="profiler"/>
      <tag name="data_collector" template="@WebProfiler/Collector/logger.html.twig" id="logger" priority="300"/>
      <argument type="service" id="monolog.logger.profiler" on-invalid="ignore"/>
      <argument>/var/www/project/var/cache/test/App_KernelTestDebugContainer</argument>
      <argument type="service" id=".virtual_request_stack" on-invalid="ignore"/>
    </service>
    <service id="data_collector.time" class="Symfony\Component\HttpKernel\DataCollector\TimeDataCollector">
      <tag name="data_collector" template="@WebProfiler/Collector/time.html.twig" id="time" priority="330"/>
      <argument type="service" id="kernel" on-invalid="ignore"/>
      <argument type="service" id="debug.stopwatch" on-invalid="ignore"/>
    </service>
    <service id="data_collector.memory" class="Symfony\Component\HttpKernel\DataCollector\MemoryDataCollector">
      <tag name="data_collector" template="@WebProfiler/Collector/memory.html.twig" id="memory" priority="325"/>
    </service>
    <service id="data_collector.router" class="Symfony\Bundle\FrameworkBundle\DataCollector\RouterDataCollector">
      <tag name="data_collector" template="@WebProfiler/Collector/router.html.twig" id="router" priority="285"/>
      <tag name="kernel.event_listener" event="kernel.controller" method="onKernelController"/>
      <tag name="container.hot_path"/>
    </service>
    <service id=".data_collector.command" class="Symfony\Component\Console\DataCollector\CommandDataCollector">
      <tag name="data_collector" template="@WebProfiler/Collector/command.html.twig" id="command" priority="335"/>
    </service>
    <service id="data_collector.cache" class="Symfony\Component\Cache\DataCollector\CacheDataCollector" public="true">
      <tag name="data_collector" template="@WebProfiler/Collector/cache.html.twig" id="cache" priority="275"/>
      <call method="addInstance">
        <argument>cache.app</argument>
        <argument type="service" id="cache.app"/>
      </call>
      <call method="addInstance">
        <argument>cache.system</argument>
        <argument type="service" id="cache.system"/>
      </call>
      <call method="addInstance">
        <argument>cache.validator</argument>
        <argument type="service" id="cache.validator"/>
      </call>
      <call method="addInstance">
        <argument>cache.serializer</argument>
        <argument type="service" id="cache.serializer"/>
      </call>
      <call method="addInstance">
        <argument>cache.annotations</argument>
        <argument type="service" id="cache.annotations"/>
      </call>
      <call method="addInstance">
        <argument>cache.property_info</argument>
        <argument type="service" id="cache.property_info"/>
      </call>
      <call method="addInstance">
        <argument>cache.messenger.restart_workers_signal</argument>
        <argument type="service" id="cache.messenger.restart_workers_signal"/>
      </call>
      <call method="addInstance">
        <argument>cache.validator_expression_language</argument>
        <argument type="service" id="cache.validator_expression_language"/>
      </call>
      <call method="addInstance">
        <argument>cache.doctrine.orm.default.result</argument>
        <argument type="service" id="cache.doctrine.orm.default.result"/>
      </call>
      <call method="addInstance">
        <argument>cache.doctrine.orm.default.query</argument>
        <argument type="service" id="cache.doctrine.orm.default.query"/>
      </call>
      <call method="addInstance">
        <argument>cache.security_expression_language</argument>
        <argument type="service" id="cache.security_expression_language"/>
      </call>
      <call method="addInstance">
        <argument>cache.security_is_granted_attribute_expression_language</argument>
        <argument type="service" id="cache.security_is_granted_attribute_expression_language"/>
      </call>
    </service>
    <service id="cache_pool_clearer.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\CachePoolClearerCacheWarmer">
      <tag name="kernel.cache_warmer" priority="64"/>
      <argument type="service" id="cache.system_clearer"/>
      <argument type="collection">
        <argument>cache.validator</argument>
        <argument>cache.serializer</argument>
      </argument>
    </service>
    <service id="form.type_extension.form.data_collector" class="Symfony\Component\Form\Extension\DataCollector\Type\DataCollectorTypeExtension">
      <tag name="form.type_extension"/>
      <argument type="service" id="data_collector.form"/>
    </service>
    <service id="data_collector.form.extractor" class="Symfony\Component\Form\Extension\DataCollector\FormDataExtractor"/>
    <service id="data_collector.form" class="Symfony\Component\Form\Extension\DataCollector\FormDataCollector">
      <tag name="data_collector" template="@WebProfiler/Collector/form.html.twig" id="form" priority="310"/>
      <argument type="service" id="data_collector.form.extractor"/>
    </service>
    <service id="debug.validator" class="Symfony\Component\Validator\Validator\TraceableValidator">
      <tag name="kernel.reset" method="reset"/>
      <tag name="container.decorator" id="validator" inner="debug.validator.inner"/>
      <argument type="service" id="debug.validator.inner"/>
    </service>
    <service id="data_collector.validator" class="Symfony\Component\Validator\DataCollector\ValidatorDataCollector">
      <tag name="data_collector" template="@WebProfiler/Collector/validator.html.twig" id="validator" priority="320"/>
      <argument type="service" id="debug.validator"/>
    </service>
    <service id="translator.data_collector" class="Symfony\Component\Translation\DataCollectorTranslator">
      <argument type="service" id="translator.default"/>
    </service>
    <service id="data_collector.translation" class="Symfony\Component\Translation\DataCollector\TranslationDataCollector">
      <tag name="data_collector" template="@WebProfiler/Collector/translation.html.twig" id="translation" priority="275"/>
      <argument type="service" id="translator.data_collector"/>
    </service>
    <service id="data_collector.messenger" class="Symfony\Component\Messenger\DataCollector\MessengerDataCollector">
      <tag name="data_collector" template="@WebProfiler/Collector/messenger.html.twig" id="messenger" priority="100"/>
      <call method="registerBus">
        <argument>messenger.bus.default</argument>
        <argument type="service" id="debug.traced.messenger.bus.default"/>
      </call>
    </service>
    <service id="mailer.data_collector" class="Symfony\Component\Mailer\DataCollector\MessageDataCollector">
      <tag name="data_collector" template="@WebProfiler/Collector/mailer.html.twig" id="mailer"/>
      <argument type="service" id="mailer.message_logger_listener"/>
    </service>
    <service id="data_collector.http_client" class="Symfony\Component\HttpClient\DataCollector\HttpClientDataCollector">
      <tag name="data_collector" template="@WebProfiler/Collector/http_client.html.twig" id="http_client" priority="250"/>
      <call method="registerClient">
        <argument>http_client</argument>
        <argument type="service" id=".debug.http_client"/>
      </call>
    </service>
    <service id="notifier.data_collector" class="Symfony\Component\Notifier\DataCollector\NotificationDataCollector">
      <tag name="data_collector" template="@WebProfiler/Collector/notifier.html.twig" id="notifier"/>
      <argument type="service" id="notifier.notification_logger_listener"/>
    </service>
    <service id="mime_types" class="Symfony\Component\Mime\MimeTypes">
      <call method="setDefault">
        <argument type="service" id="mime_types"/>
      </call>
    </service>
    <service id="data_collector.doctrine" class="Doctrine\Bundle\DoctrineBundle\DataCollector\DoctrineDataCollector">
      <tag name="data_collector" template="@Doctrine/Collector/db.html.twig" id="db" priority="250"/>
      <argument type="service" id="doctrine"/>
      <argument>true</argument>
      <argument type="service" id="doctrine.debug_data_holder" on-invalid="null"/>
    </service>
    <service id="doctrine.dbal.connection_factory" class="Doctrine\Bundle\DoctrineBundle\ConnectionFactory">
      <argument type="collection"/>
      <argument type="service" id="doctrine.dbal.connection_factory.dsn_parser"/>
    </service>
    <service id="doctrine.dbal.connection_factory.dsn_parser" class="Doctrine\DBAL\Tools\DsnParser">
      <argument type="collection">
        <argument key="db2">ibm_db2</argument>
        <argument key="mssql">pdo_sqlsrv</argument>
        <argument key="mysql">pdo_mysql</argument>
        <argument key="mysql2">pdo_mysql</argument>
        <argument key="postgres">pdo_pgsql</argument>
        <argument key="postgresql">pdo_pgsql</argument>
        <argument key="pgsql">pdo_pgsql</argument>
        <argument key="sqlite">pdo_sqlite</argument>
        <argument key="sqlite3">pdo_sqlite</argument>
      </argument>
    </service>
    <service id="doctrine.dbal.connection" class="Doctrine\DBAL\Connection" abstract="true">
      <factory service="doctrine.dbal.connection_factory" method="createConnection"/>
    </service>
    <service id="doctrine.dbal.connection.event_manager" class="Symfony\Bridge\Doctrine\ContainerAwareEventManager" abstract="true">
      <argument type="service" id="service_container"/>
    </service>
    <service id="doctrine.dbal.connection.configuration" class="Doctrine\DBAL\Configuration" abstract="true"/>
    <service id="doctrine" class="Doctrine\Bundle\DoctrineBundle\Registry" public="true">
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="service_container"/>
      <argument>%doctrine.connections%</argument>
      <argument>%doctrine.entity_managers%</argument>
      <argument>default</argument>
      <argument>default</argument>
    </service>
    <service id="doctrine.twig.doctrine_extension" class="Doctrine\Bundle\DoctrineBundle\Twig\DoctrineExtension">
      <tag name="twig.extension"/>
    </service>
    <service id="doctrine.dbal.schema_asset_filter_manager" class="Doctrine\Bundle\DoctrineBundle\Dbal\SchemaAssetsFilterManager" abstract="true"/>
    <service id="doctrine.dbal.well_known_schema_asset_filter" class="Doctrine\Bundle\DoctrineBundle\Dbal\BlacklistSchemaAssetFilter">
      <argument type="collection"/>
    </service>
    <service id="doctrine.database_create_command" class="Doctrine\Bundle\DoctrineBundle\Command\CreateDatabaseDoctrineCommand">
      <tag name="console.command" command="doctrine:database:create"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine"/>
      <call method="setName">
        <argument>doctrine:database:create</argument>
      </call>
    </service>
    <service id="doctrine.database_drop_command" class="Doctrine\Bundle\DoctrineBundle\Command\DropDatabaseDoctrineCommand">
      <tag name="console.command" command="doctrine:database:drop"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine"/>
      <call method="setName">
        <argument>doctrine:database:drop</argument>
      </call>
    </service>
    <service id="doctrine.query_sql_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\RunSqlDoctrineCommand">
      <tag name="console.command" command="doctrine:query:sql"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="Doctrine\Bundle\DoctrineBundle\Dbal\ManagerRegistryAwareConnectionProvider" on-invalid="null"/>
      <call method="setName">
        <argument>doctrine:query:sql</argument>
      </call>
    </service>
    <service id="Doctrine\DBAL\Tools\Console\Command\RunSqlCommand" class="Doctrine\DBAL\Tools\Console\Command\RunSqlCommand">
      <tag name="console.command" command="dbal:run-sql"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="Doctrine\Bundle\DoctrineBundle\Dbal\ManagerRegistryAwareConnectionProvider" on-invalid="null"/>
      <call method="setName">
        <argument>dbal:run-sql</argument>
      </call>
    </service>
    <service id="Doctrine\Bundle\DoctrineBundle\Controller\ProfilerController" class="Doctrine\Bundle\DoctrineBundle\Controller\ProfilerController" public="true">
      <tag name="controller.service_arguments"/>
      <argument type="service" id="twig"/>
      <argument type="service" id="doctrine"/>
      <argument type="service" id="profiler"/>
    </service>
    <service id="doctrine.dbal.default_schema_manager_factory" class="Doctrine\DBAL\Schema\DefaultSchemaManagerFactory"/>
    <service id="doctrine.dbal.legacy_schema_manager_factory" class="Doctrine\DBAL\Schema\LegacySchemaManagerFactory"/>
    <service id="doctrine.dbal.default_connection.configuration" class="Doctrine\DBAL\Configuration">
      <call method="setSchemaManagerFactory">
        <argument type="service" id="doctrine.dbal.legacy_schema_manager_factory"/>
      </call>
      <call method="setMiddlewares">
        <argument type="collection">
          <argument type="service" id="doctrine.dbal.logging_middleware.default"/>
          <argument type="service" id="doctrine.dbal.debug_middleware.default"/>
        </argument>
      </call>
    </service>
    <service id="doctrine.dbal.default_connection.event_manager" class="Symfony\Bridge\Doctrine\ContainerAwareEventManager">
      <argument type="service" id=".service_locator.vefZLS1"/>
      <argument type="collection">
        <argument type="collection">
          <argument type="collection">
            <argument>loadClassMetadata</argument>
          </argument>
          <argument>sonata.doctrine.mapper</argument>
        </argument>
        <argument type="collection">
          <argument type="collection">
            <argument>postGenerateSchema</argument>
          </argument>
          <argument>doctrine.orm.messenger.doctrine_schema_listener</argument>
        </argument>
        <argument type="collection">
          <argument type="collection">
            <argument>onSchemaCreateTable</argument>
          </argument>
          <argument>doctrine.orm.messenger.doctrine_schema_listener</argument>
        </argument>
        <argument type="collection">
          <argument type="collection">
            <argument>postGenerateSchema</argument>
          </argument>
          <argument>doctrine.orm.listeners.doctrine_dbal_cache_adapter_schema_listener</argument>
        </argument>
        <argument type="collection">
          <argument type="collection">
            <argument>postGenerateSchema</argument>
          </argument>
          <argument>doctrine.orm.listeners.doctrine_token_provider_schema_listener</argument>
        </argument>
        <argument type="collection">
          <argument type="collection">
            <argument>postGenerateSchema</argument>
          </argument>
          <argument>doctrine.orm.listeners.pdo_session_handler_schema_listener</argument>
        </argument>
        <argument type="collection">
          <argument type="collection">
            <argument>postGenerateSchema</argument>
          </argument>
          <argument>doctrine.orm.listeners.lock_store_schema_listener</argument>
        </argument>
        <argument type="collection">
          <argument type="collection">
            <argument>loadClassMetadata</argument>
          </argument>
          <argument>doctrine.orm.default_listeners.attach_entity_listeners</argument>
        </argument>
      </argument>
    </service>
    <service id="doctrine.dbal.default_connection" class="Doctrine\DBAL\Connection" public="true">
      <argument type="collection">
        <argument key="url">%env(resolve:DATABASE_URL)%</argument>
        <argument key="use_savepoints">true</argument>
        <argument key="dbname_suffix">_test%env(default::TEST_TOKEN)%</argument>
        <argument key="driver">pdo_mysql</argument>
        <argument key="idle_connection_ttl">600</argument>
        <argument key="host">localhost</argument>
        <argument key="port">null</argument>
        <argument key="user">root</argument>
        <argument key="password">null</argument>
        <argument key="driverOptions" type="collection"/>
        <argument key="defaultTableOptions" type="collection"/>
      </argument>
      <argument type="service" id="doctrine.dbal.default_connection.configuration"/>
      <argument type="service" id="doctrine.dbal.default_connection.event_manager"/>
      <argument type="collection"/>
      <call method="setNestTransactionsWithSavepoints">
        <argument>true</argument>
      </call>
      <factory service="doctrine.dbal.connection_factory" method="createConnection"/>
    </service>
    <service id="Doctrine\Bundle\DoctrineBundle\Dbal\ManagerRegistryAwareConnectionProvider" class="Doctrine\Bundle\DoctrineBundle\Dbal\ManagerRegistryAwareConnectionProvider">
      <argument type="service">
        <service class="Doctrine\Bundle\DoctrineBundle\Registry" public="true">
          <tag name="kernel.reset" method="reset"/>
          <argument type="service" id="service_container"/>
          <argument>%doctrine.connections%</argument>
          <argument>%doctrine.entity_managers%</argument>
          <argument>default</argument>
          <argument>default</argument>
        </service>
      </argument>
    </service>
    <service id="doctrine.dbal.connection_expiries" class="ArrayObject"/>
    <service id="doctrine.dbal.logging_middleware" class="Doctrine\DBAL\Logging\Middleware" abstract="true">
      <tag name="monolog.logger" channel="doctrine"/>
      <tag name="doctrine.middleware" connection="default" priority="10"/>
      <argument type="service" id="monolog.logger.doctrine"/>
    </service>
    <service id="doctrine.debug_data_holder" class="Doctrine\Bundle\DoctrineBundle\Middleware\BacktraceDebugDataHolder">
      <tag name="kernel.reset" method="reset"/>
      <argument type="collection"/>
    </service>
    <service id="doctrine.dbal.debug_middleware" class="Doctrine\Bundle\DoctrineBundle\Middleware\DebugMiddleware" abstract="true">
      <tag name="doctrine.middleware" connection="default" priority="10"/>
      <argument type="service" id="doctrine.debug_data_holder"/>
      <argument type="service" id="debug.stopwatch" on-invalid="null"/>
    </service>
    <service id="messenger.middleware.doctrine_transaction" class="Symfony\Bridge\Doctrine\Messenger\DoctrineTransactionMiddleware" abstract="true">
      <argument type="service" id="doctrine"/>
    </service>
    <service id="messenger.middleware.doctrine_ping_connection" class="Symfony\Bridge\Doctrine\Messenger\DoctrinePingConnectionMiddleware" abstract="true">
      <argument type="service" id="doctrine"/>
    </service>
    <service id="messenger.middleware.doctrine_close_connection" class="Symfony\Bridge\Doctrine\Messenger\DoctrineCloseConnectionMiddleware" abstract="true">
      <argument type="service" id="doctrine"/>
    </service>
    <service id="messenger.middleware.doctrine_open_transaction_logger" class="Symfony\Bridge\Doctrine\Messenger\DoctrineOpenTransactionLoggerMiddleware" abstract="true">
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument type="service" id="monolog.logger"/>
    </service>
    <service id="doctrine.orm.messenger.event_subscriber.doctrine_clear_entity_manager" class="Symfony\Bridge\Doctrine\Messenger\DoctrineClearEntityManagerWorkerSubscriber">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="messenger.transport.doctrine.factory" class="Symfony\Component\Messenger\Bridge\Doctrine\Transport\DoctrineTransportFactory">
      <tag name="messenger.transport_factory"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.messenger.doctrine_schema_listener" class="Symfony\Bridge\Doctrine\SchemaListener\MessengerTransportDoctrineSchemaListener">
      <tag name="doctrine.event_listener" event="postGenerateSchema"/>
      <tag name="doctrine.event_listener" event="onSchemaCreateTable"/>
      <argument type="tagged_iterator" tag="messenger.receiver"/>
    </service>
    <service id=".1_ServiceLocator~QuXzPec" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <argument type="collection"/>
    </service>
    <service id="doctrine.orm.proxy_cache_warmer" class="Symfony\Bridge\Doctrine\CacheWarmer\ProxyCacheWarmer">
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="form.type_guesser.doctrine" class="Symfony\Bridge\Doctrine\Form\DoctrineOrmTypeGuesser">
      <tag name="form.type_guesser"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="form.type.entity" class="Symfony\Bridge\Doctrine\Form\Type\EntityType">
      <tag name="form.type" alias="entity"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.configuration" class="Doctrine\ORM\Configuration" abstract="true"/>
    <service id="doctrine.orm.entity_manager.abstract" class="Doctrine\ORM\EntityManager" lazy="true" abstract="true"/>
    <service id="doctrine.orm.container_repository_factory" class="Doctrine\Bundle\DoctrineBundle\Repository\ContainerRepositoryFactory">
      <argument type="service" id=".service_locator.uaRUBdr"/>
    </service>
    <service id="doctrine.orm.manager_configurator.abstract" class="Doctrine\Bundle\DoctrineBundle\ManagerConfigurator" abstract="true">
      <argument type="collection"/>
      <argument type="collection"/>
    </service>
    <service id="doctrine.orm.validator.unique" class="Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntityValidator">
      <tag name="validator.constraint_validator" alias="doctrine.orm.validator.unique"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.validator_initializer" class="Symfony\Bridge\Doctrine\Validator\DoctrineInitializer">
      <tag name="validator.initializer"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.security.user.provider" class="Symfony\Bridge\Doctrine\Security\User\EntityUserProvider" abstract="true">
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.listeners.resolve_target_entity" class="Doctrine\ORM\Tools\ResolveTargetEntityListener"/>
    <service id="doctrine.orm.listeners.doctrine_dbal_cache_adapter_schema_listener" class="Symfony\Bridge\Doctrine\SchemaListener\DoctrineDbalCacheAdapterSchemaListener">
      <tag name="doctrine.event_listener" event="postGenerateSchema"/>
      <argument type="collection"/>
    </service>
    <service id="doctrine.orm.listeners.doctrine_token_provider_schema_listener" class="Symfony\Bridge\Doctrine\SchemaListener\RememberMeTokenProviderDoctrineSchemaListener">
      <tag name="doctrine.event_listener" event="postGenerateSchema"/>
      <argument type="tagged_iterator" tag="security.remember_me_handler"/>
    </service>
    <service id="doctrine.orm.listeners.pdo_session_handler_schema_listener" class="Symfony\Bridge\Doctrine\SchemaListener\PdoSessionHandlerSchemaListener">
      <tag name="doctrine.event_listener" event="postGenerateSchema"/>
      <argument type="service" id="session.handler.native"/>
    </service>
    <service id="doctrine.orm.listeners.lock_store_schema_listener" class="Symfony\Bridge\Doctrine\SchemaListener\LockStoreSchemaListener">
      <tag name="doctrine.event_listener" event="postGenerateSchema"/>
      <argument type="tagged_iterator" tag="lock.store"/>
    </service>
    <service id="doctrine.orm.naming_strategy.default" class="Doctrine\ORM\Mapping\DefaultNamingStrategy"/>
    <service id="doctrine.orm.naming_strategy.underscore" class="Doctrine\ORM\Mapping\UnderscoreNamingStrategy"/>
    <service id="doctrine.orm.naming_strategy.underscore_number_aware" class="Doctrine\ORM\Mapping\UnderscoreNamingStrategy">
      <argument>0</argument>
      <argument>true</argument>
    </service>
    <service id="doctrine.orm.quote_strategy.default" class="Doctrine\ORM\Mapping\DefaultQuoteStrategy"/>
    <service id="doctrine.orm.quote_strategy.ansi" class="Doctrine\ORM\Mapping\AnsiQuoteStrategy"/>
    <service id="doctrine.orm.typed_field_mapper.default" class="Doctrine\ORM\Mapping\DefaultTypedFieldMapper"/>
    <service id="doctrine.ulid_generator" class="Symfony\Bridge\Doctrine\IdGenerator\UlidGenerator">
      <tag name="doctrine.id_generator"/>
      <argument>null</argument>
    </service>
    <service id="doctrine.uuid_generator" class="Symfony\Bridge\Doctrine\IdGenerator\UuidGenerator">
      <tag name="doctrine.id_generator"/>
      <argument>null</argument>
    </service>
    <service id="doctrine.orm.command.entity_manager_provider" class="Doctrine\Bundle\DoctrineBundle\Orm\ManagerRegistryAwareEntityManagerProvider">
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.entity_value_resolver" class="Symfony\Bridge\Doctrine\ArgumentResolver\EntityValueResolver">
      <tag name="Symfony\Bridge\Doctrine\ArgumentResolver\EntityValueResolver" priority="110">controller.argument_value_resolver</tag>
      <argument type="service" id="doctrine"/>
      <argument type="service" id="doctrine.orm.entity_value_resolver.expression_language" on-invalid="ignore"/>
    </service>
    <service id="doctrine.orm.entity_value_resolver.expression_language" class="Symfony\Component\ExpressionLanguage\ExpressionLanguage"/>
    <service id="doctrine.cache_clear_metadata_command" class="Doctrine\ORM\Tools\Console\Command\ClearCache\MetadataCommand">
      <tag name="console.command" command="doctrine:cache:clear-metadata"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.orm.command.entity_manager_provider"/>
      <call method="setName">
        <argument>doctrine:cache:clear-metadata</argument>
      </call>
    </service>
    <service id="doctrine.cache_clear_query_cache_command" class="Doctrine\ORM\Tools\Console\Command\ClearCache\QueryCommand">
      <tag name="console.command" command="doctrine:cache:clear-query"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.orm.command.entity_manager_provider"/>
      <call method="setName">
        <argument>doctrine:cache:clear-query</argument>
      </call>
    </service>
    <service id="doctrine.cache_clear_result_command" class="Doctrine\ORM\Tools\Console\Command\ClearCache\ResultCommand">
      <tag name="console.command" command="doctrine:cache:clear-result"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.orm.command.entity_manager_provider"/>
      <call method="setName">
        <argument>doctrine:cache:clear-result</argument>
      </call>
    </service>
    <service id="doctrine.cache_collection_region_command" class="Doctrine\ORM\Tools\Console\Command\ClearCache\CollectionRegionCommand">
      <tag name="console.command" command="doctrine:cache:clear-collection-region"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.orm.command.entity_manager_provider"/>
      <call method="setName">
        <argument>doctrine:cache:clear-collection-region</argument>
      </call>
    </service>
    <service id="doctrine.schema_create_command" class="Doctrine\ORM\Tools\Console\Command\SchemaTool\CreateCommand">
      <tag name="console.command" command="doctrine:schema:create"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.orm.command.entity_manager_provider"/>
      <call method="setName">
        <argument>doctrine:schema:create</argument>
      </call>
    </service>
    <service id="doctrine.schema_drop_command" class="Doctrine\ORM\Tools\Console\Command\SchemaTool\DropCommand">
      <tag name="console.command" command="doctrine:schema:drop"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.orm.command.entity_manager_provider"/>
      <call method="setName">
        <argument>doctrine:schema:drop</argument>
      </call>
    </service>
    <service id="doctrine.clear_entity_region_command" class="Doctrine\ORM\Tools\Console\Command\ClearCache\EntityRegionCommand">
      <tag name="console.command" command="doctrine:cache:clear-entity-region"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.orm.command.entity_manager_provider"/>
      <call method="setName">
        <argument>doctrine:cache:clear-entity-region</argument>
      </call>
    </service>
    <service id="doctrine.mapping_info_command" class="Doctrine\ORM\Tools\Console\Command\InfoCommand">
      <tag name="console.command" command="doctrine:mapping:info"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.orm.command.entity_manager_provider"/>
      <call method="setName">
        <argument>doctrine:mapping:info</argument>
      </call>
    </service>
    <service id="doctrine.clear_query_region_command" class="Doctrine\ORM\Tools\Console\Command\ClearCache\QueryRegionCommand">
      <tag name="console.command" command="doctrine:cache:clear-query-region"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.orm.command.entity_manager_provider"/>
      <call method="setName">
        <argument>doctrine:cache:clear-query-region</argument>
      </call>
    </service>
    <service id="doctrine.query_dql_command" class="Doctrine\ORM\Tools\Console\Command\RunDqlCommand">
      <tag name="console.command" command="doctrine:query:dql"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.orm.command.entity_manager_provider"/>
      <call method="setName">
        <argument>doctrine:query:dql</argument>
      </call>
    </service>
    <service id="doctrine.schema_update_command" class="Doctrine\ORM\Tools\Console\Command\SchemaTool\UpdateCommand">
      <tag name="console.command" command="doctrine:schema:update"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.orm.command.entity_manager_provider"/>
      <call method="setName">
        <argument>doctrine:schema:update</argument>
      </call>
    </service>
    <service id="doctrine.schema_validate_command" class="Doctrine\ORM\Tools\Console\Command\ValidateSchemaCommand">
      <tag name="console.command" command="doctrine:schema:validate"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.orm.command.entity_manager_provider"/>
      <call method="setName">
        <argument>doctrine:schema:validate</argument>
      </call>
    </service>
    <service id="doctrine.orm.default_configuration" class="Doctrine\ORM\Configuration">
      <tag name="doctrine.orm.configuration"/>
      <call method="setEntityNamespaces">
        <argument type="collection">
          <argument key="App">App\Entity</argument>
        </argument>
      </call>
      <call method="setMetadataCache">
        <argument type="service" id="cache.doctrine.orm.default.metadata"/>
      </call>
      <call method="setQueryCache">
        <argument type="service" id="cache.doctrine.orm.default.query"/>
      </call>
      <call method="setResultCache">
        <argument type="service" id="cache.doctrine.orm.default.result"/>
      </call>
      <call method="setMetadataDriverImpl">
        <argument type="service" id=".doctrine.orm.default_metadata_driver"/>
      </call>
      <call method="setProxyDir">
        <argument>/var/www/project/var/cache/test/doctrine/orm/Proxies</argument>
      </call>
      <call method="setProxyNamespace">
        <argument>Proxies</argument>
      </call>
      <call method="setAutoGenerateProxyClasses">
        <argument>true</argument>
      </call>
      <call method="setSchemaIgnoreClasses">
        <argument type="collection"/>
      </call>
      <call method="setClassMetadataFactoryName">
        <argument>Doctrine\Bundle\DoctrineBundle\Mapping\ClassMetadataFactory</argument>
      </call>
      <call method="setDefaultRepositoryClassName">
        <argument>Doctrine\ORM\EntityRepository</argument>
      </call>
      <call method="setNamingStrategy">
        <argument type="service" id="doctrine.orm.naming_strategy.underscore_number_aware"/>
      </call>
      <call method="setQuoteStrategy">
        <argument type="service" id="doctrine.orm.quote_strategy.default"/>
      </call>
      <call method="setTypedFieldMapper">
        <argument type="service" id="doctrine.orm.typed_field_mapper.default"/>
      </call>
      <call method="setEntityListenerResolver">
        <argument type="service" id="doctrine.orm.default_entity_listener_resolver"/>
      </call>
      <call method="setLazyGhostObjectEnabled">
        <argument>true</argument>
      </call>
      <call method="setIdentityGenerationPreferences">
        <argument type="collection"/>
      </call>
      <call method="setRepositoryFactory">
        <argument type="service" id="doctrine.orm.container_repository_factory"/>
      </call>
    </service>
    <service id="doctrine.orm.default_attribute_metadata_driver" class="Doctrine\ORM\Mapping\Driver\AttributeDriver">
      <argument type="collection">
        <argument>/var/www/project/src/Entity</argument>
      </argument>
      <argument>true</argument>
    </service>
    <service id="cache.doctrine.orm.default.metadata" class="Symfony\Component\Cache\Adapter\ArrayAdapter"/>
    <service id="cache.doctrine.orm.default.result" class="Symfony\Component\Cache\Adapter\TraceableAdapter">
      <tag name="cache.pool"/>
      <argument type="service" id="cache.doctrine.orm.default.result.recorder_inner"/>
    </service>
    <service id="cache.doctrine.orm.default.query" class="Symfony\Component\Cache\Adapter\TraceableAdapter">
      <tag name="cache.pool"/>
      <argument type="service" id="cache.doctrine.orm.default.query.recorder_inner"/>
    </service>
    <service id="doctrine.orm.default_entity_listener_resolver" class="Doctrine\Bundle\DoctrineBundle\Mapping\ContainerEntityListenerResolver">
      <argument type="service" id="service_container"/>
    </service>
    <service id="doctrine.orm.default_listeners.attach_entity_listeners" class="Doctrine\ORM\Tools\AttachEntityListenersListener">
      <tag name="doctrine.event_listener" event="loadClassMetadata"/>
    </service>
    <service id="doctrine.orm.default_manager_configurator" class="Doctrine\Bundle\DoctrineBundle\ManagerConfigurator">
      <argument type="collection"/>
      <argument type="collection"/>
    </service>
    <service id="doctrine.orm.default_entity_manager" class="Doctrine\ORM\EntityManager" public="true" lazy="true">
      <tag name="container.preload" class="Doctrine\ORM\Proxy\Autoloader"/>
      <argument type="service" id="doctrine.dbal.default_connection"/>
      <argument type="service" id="doctrine.orm.default_configuration"/>
      <argument type="service" id="doctrine.dbal.default_connection.event_manager"/>
      <configurator service="doctrine.orm.default_manager_configurator" method="configure"/>
    </service>
    <service id="doctrine.orm.default_entity_manager.property_info_extractor" class="Symfony\Bridge\Doctrine\PropertyInfo\DoctrineExtractor">
      <tag name="property_info.list_extractor" priority="-1001"/>
      <tag name="property_info.type_extractor" priority="-999"/>
      <tag name="property_info.access_extractor" priority="-999"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="doctrine.orm.default_entity_manager.validator_loader" class="Symfony\Bridge\Doctrine\Validator\DoctrineLoader">
      <tag name="validator.auto_mapper" priority="-100"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument>null</argument>
    </service>
    <service id="doctrine.migrations.dependency_factory" class="Doctrine\Migrations\DependencyFactory" constructor="fromEntityManager">
      <argument type="service" id="doctrine.migrations.configuration_loader"/>
      <argument type="service" id="doctrine.migrations.entity_manager_registry_loader"/>
      <argument type="service" id="monolog.logger" on-invalid="null"/>
      <call method="setDefinition">
        <argument>Doctrine\Migrations\Version\MigrationFactory</argument>
        <argument type="service_closure" id="doctrine.migrations.container_aware_migrations_factory"/>
      </call>
    </service>
    <service id="doctrine.migrations.configuration_loader" class="Doctrine\Migrations\Configuration\Migration\ExistingConfiguration">
      <argument type="service" id="doctrine.migrations.configuration"/>
    </service>
    <service id="doctrine.migrations.connection_loader" class="Doctrine\Migrations\Configuration\Connection\ExistingConnection"/>
    <service id="doctrine.migrations.em_loader" class="Doctrine\Migrations\Configuration\EntityManager\ExistingEntityManager"/>
    <service id="doctrine.migrations.entity_manager_registry_loader" class="Doctrine\Migrations\Configuration\EntityManager\ManagerRegistryEntityManager" constructor="withSimpleDefault">
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.migrations.connection_registry_loader" class="Doctrine\Migrations\Configuration\Connection\ConnectionRegistryConnection" constructor="withSimpleDefault">
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.migrations.configuration" class="Doctrine\Migrations\Configuration\Configuration">
      <call method="addMigrationsDirectory">
        <argument>DoctrineMigrations</argument>
        <argument>/var/www/project/migrations</argument>
      </call>
      <call method="setAllOrNothing">
        <argument>false</argument>
      </call>
      <call method="setCheckDatabasePlatform">
        <argument>true</argument>
      </call>
      <call method="setTransactional">
        <argument>true</argument>
      </call>
      <call method="setMetadataStorageConfiguration">
        <argument type="service" id="doctrine.migrations.storage.table_storage"/>
      </call>
    </service>
    <service id="doctrine.migrations.container_aware_migrations_factory" class="Doctrine\Bundle\MigrationsBundle\MigrationsFactory\ContainerAwareMigrationFactory">
      <tag name="container.decorator" id="doctrine.migrations.migrations_factory" inner="doctrine.migrations.container_aware_migrations_factory.inner"/>
      <argument type="service" id="doctrine.migrations.container_aware_migrations_factory.inner"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="doctrine_migrations.diff_command" class="Doctrine\Migrations\Tools\Console\Command\DiffCommand">
      <tag name="console.command" command="doctrine:migrations:diff"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.migrations.dependency_factory"/>
      <argument>doctrine:migrations:diff</argument>
      <call method="setName">
        <argument>doctrine:migrations:diff</argument>
      </call>
      <call method="setDescription">
        <argument>Generate a migration by comparing your current database to your mapping information.</argument>
      </call>
    </service>
    <service id="doctrine_migrations.sync_metadata_command" class="Doctrine\Migrations\Tools\Console\Command\SyncMetadataCommand">
      <tag name="console.command" command="doctrine:migrations:sync-metadata-storage"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.migrations.dependency_factory"/>
      <argument>doctrine:migrations:sync-metadata-storage</argument>
      <call method="setName">
        <argument>doctrine:migrations:sync-metadata-storage</argument>
      </call>
      <call method="setDescription">
        <argument>Ensures that the metadata storage is at the latest version.</argument>
      </call>
    </service>
    <service id="doctrine_migrations.versions_command" class="Doctrine\Migrations\Tools\Console\Command\ListCommand">
      <tag name="console.command" command="doctrine:migrations:list"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.migrations.dependency_factory"/>
      <argument>doctrine:migrations:versions</argument>
      <call method="setName">
        <argument>doctrine:migrations:list</argument>
      </call>
      <call method="setDescription">
        <argument>Display a list of all available migrations and their status.</argument>
      </call>
    </service>
    <service id="doctrine_migrations.current_command" class="Doctrine\Migrations\Tools\Console\Command\CurrentCommand">
      <tag name="console.command" command="doctrine:migrations:current"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.migrations.dependency_factory"/>
      <argument>doctrine:migrations:current</argument>
      <call method="setName">
        <argument>doctrine:migrations:current</argument>
      </call>
      <call method="setDescription">
        <argument>Outputs the current version</argument>
      </call>
    </service>
    <service id="doctrine_migrations.dump_schema_command" class="Doctrine\Migrations\Tools\Console\Command\DumpSchemaCommand">
      <tag name="console.command" command="doctrine:migrations:dump-schema"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.migrations.dependency_factory"/>
      <argument>doctrine:migrations:dump-schema</argument>
      <call method="setName">
        <argument>doctrine:migrations:dump-schema</argument>
      </call>
      <call method="setDescription">
        <argument>Dump the schema for your database to a migration.</argument>
      </call>
    </service>
    <service id="doctrine_migrations.execute_command" class="Doctrine\Migrations\Tools\Console\Command\ExecuteCommand">
      <tag name="console.command" command="doctrine:migrations:execute"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.migrations.dependency_factory"/>
      <argument>doctrine:migrations:execute</argument>
      <call method="setName">
        <argument>doctrine:migrations:execute</argument>
      </call>
      <call method="setDescription">
        <argument>Execute one or more migration versions up or down manually.</argument>
      </call>
    </service>
    <service id="doctrine_migrations.generate_command" class="Doctrine\Migrations\Tools\Console\Command\GenerateCommand">
      <tag name="console.command" command="doctrine:migrations:generate"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.migrations.dependency_factory"/>
      <argument>doctrine:migrations:generate</argument>
      <call method="setName">
        <argument>doctrine:migrations:generate</argument>
      </call>
      <call method="setDescription">
        <argument>Generate a blank migration class.</argument>
      </call>
    </service>
    <service id="doctrine_migrations.latest_command" class="Doctrine\Migrations\Tools\Console\Command\LatestCommand">
      <tag name="console.command" command="doctrine:migrations:latest"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.migrations.dependency_factory"/>
      <argument>doctrine:migrations:latest</argument>
      <call method="setName">
        <argument>doctrine:migrations:latest</argument>
      </call>
      <call method="setDescription">
        <argument>Outputs the latest version</argument>
      </call>
    </service>
    <service id="doctrine_migrations.migrate_command" class="Doctrine\Migrations\Tools\Console\Command\MigrateCommand">
      <tag name="console.command" command="doctrine:migrations:migrate"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.migrations.dependency_factory"/>
      <argument>doctrine:migrations:migrate</argument>
      <call method="setName">
        <argument>doctrine:migrations:migrate</argument>
      </call>
      <call method="setDescription">
        <argument>Execute a migration to a specified version or the latest available version.</argument>
      </call>
    </service>
    <service id="doctrine_migrations.rollup_command" class="Doctrine\Migrations\Tools\Console\Command\RollupCommand">
      <tag name="console.command" command="doctrine:migrations:rollup"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.migrations.dependency_factory"/>
      <argument>doctrine:migrations:rollup</argument>
      <call method="setName">
        <argument>doctrine:migrations:rollup</argument>
      </call>
      <call method="setDescription">
        <argument>Rollup migrations by deleting all tracked versions and insert the one version that exists.</argument>
      </call>
    </service>
    <service id="doctrine_migrations.status_command" class="Doctrine\Migrations\Tools\Console\Command\StatusCommand">
      <tag name="console.command" command="doctrine:migrations:status"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.migrations.dependency_factory"/>
      <argument>doctrine:migrations:status</argument>
      <call method="setName">
        <argument>doctrine:migrations:status</argument>
      </call>
      <call method="setDescription">
        <argument>View the status of a set of migrations.</argument>
      </call>
    </service>
    <service id="doctrine_migrations.up_to_date_command" class="Doctrine\Migrations\Tools\Console\Command\UpToDateCommand">
      <tag name="console.command" command="doctrine:migrations:up-to-date"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.migrations.dependency_factory"/>
      <argument>doctrine:migrations:up-to-date</argument>
      <call method="setName">
        <argument>doctrine:migrations:up-to-date</argument>
      </call>
      <call method="setDescription">
        <argument>Tells you if your schema is up-to-date.</argument>
      </call>
    </service>
    <service id="doctrine_migrations.version_command" class="Doctrine\Migrations\Tools\Console\Command\VersionCommand">
      <tag name="console.command" command="doctrine:migrations:version"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.migrations.dependency_factory"/>
      <argument>doctrine:migrations:version</argument>
      <call method="setName">
        <argument>doctrine:migrations:version</argument>
      </call>
      <call method="setDescription">
        <argument>Manually add and delete migration versions from the version table.</argument>
      </call>
    </service>
    <service id="doctrine.migrations.storage.table_storage" class="Doctrine\Migrations\Metadata\Storage\TableMetadataStorageConfiguration"/>
    <service id="twig" class="Twig\Environment">
      <tag name="container.preload" class="Twig\Cache\FilesystemCache"/>
      <tag name="container.preload" class="Twig\Extension\CoreExtension"/>
      <tag name="container.preload" class="Twig\Extension\EscaperExtension"/>
      <tag name="container.preload" class="Twig\Extension\OptimizerExtension"/>
      <tag name="container.preload" class="Twig\Extension\StagingExtension"/>
      <tag name="container.preload" class="Twig\ExtensionSet"/>
      <tag name="container.preload" class="Twig\Template"/>
      <tag name="container.preload" class="Twig\TemplateWrapper"/>
      <tag name="kernel.reset" method="resetGlobals"/>
      <argument type="service" id="twig.loader.native_filesystem"/>
      <argument type="collection">
        <argument key="strict_variables">true</argument>
        <argument key="autoescape">name</argument>
        <argument key="cache">/var/www/project/var/cache/test/twig</argument>
        <argument key="charset">UTF-8</argument>
        <argument key="debug">true</argument>
      </argument>
      <call method="addExtension">
        <argument type="service" id="twig.extension.security_csrf"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.profiler"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.trans"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.assets"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.code"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.routing"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.yaml"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.debug.stopwatch"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.expression"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.httpkernel"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.httpfoundation"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.weblink"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.serializer"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.form"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.logout_url"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.security"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="doctrine.twig.doctrine_extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.debug"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.webprofiler"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.string"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.twig.flashmessage.twig.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.twig.extension.wrapping"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.twig.status_extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.twig.template_extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.block.twig.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="knp_menu.twig.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.twig.sonata_admin_extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.twig.template_registry_extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.twig.group_extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.twig.icon_extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.twig.security_extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.twig.canonicalize_extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.twig.xeditable_extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.twig.render_element_extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.twig.breadcrumbs_extension"/>
      </call>
      <call method="addGlobal">
        <argument>app</argument>
        <argument type="service" id="twig.app_variable"/>
      </call>
      <call method="addRuntimeLoader">
        <argument type="service" id="twig.runtime_loader"/>
      </call>
      <call method="registerUndefinedFilterCallback">
        <argument type="collection">
          <argument type="service" id="twig.missing_extension_suggestor"/>
          <argument>suggestFilter</argument>
        </argument>
      </call>
      <call method="registerUndefinedFunctionCallback">
        <argument type="collection">
          <argument type="service" id="twig.missing_extension_suggestor"/>
          <argument>suggestFunction</argument>
        </argument>
      </call>
      <call method="registerUndefinedTokenParserCallback">
        <argument type="collection">
          <argument type="service" id="twig.missing_extension_suggestor"/>
          <argument>suggestTag</argument>
        </argument>
      </call>
      <call method="addGlobal">
        <argument>sonata_block</argument>
        <argument type="service" id="sonata.block.twig.global"/>
      </call>
      <call method="addGlobal">
        <argument>sonata_config</argument>
        <argument type="service" id="sonata.admin.configuration"/>
      </call>
      <configurator service="twig.configurator.environment" method="configure"/>
    </service>
    <service id="twig.app_variable" class="Symfony\Bridge\Twig\AppVariable">
      <call method="setEnvironment">
        <argument>test</argument>
      </call>
      <call method="setDebug">
        <argument>true</argument>
      </call>
      <call method="setTokenStorage">
        <argument type="service" id="security.token_storage" on-invalid="ignore"/>
      </call>
      <call method="setRequestStack">
        <argument type="service" id="request_stack" on-invalid="ignore"/>
      </call>
      <call method="setLocaleSwitcher">
        <argument type="service" id="translation.locale_switcher" on-invalid="ignore"/>
      </call>
      <call method="setEnabledLocales">
        <argument type="collection"/>
      </call>
    </service>
    <service id="twig.template_iterator" class="Symfony\Bundle\TwigBundle\TemplateIterator">
      <argument type="service" id="kernel"/>
      <argument type="collection">
        <argument key="/var/www/project/vendor/knplabs/knp-menu/src/Knp/Menu/Resources/views">null</argument>
        <argument key="/var/www/project/vendor/symfony/twig-bridge/Resources/views/Email">email</argument>
        <argument key="/var/www/project/vendor/symfony/twig-bridge/Resources/views/Form">null</argument>
      </argument>
      <argument>/var/www/project/templates</argument>
      <argument type="collection"/>
    </service>
    <service id="twig.template_cache_warmer" class="Symfony\Bundle\TwigBundle\CacheWarmer\TemplateCacheWarmer">
      <tag name="kernel.cache_warmer"/>
      <tag name="container.service_subscriber" id="twig"/>
      <argument type="service" id=".service_locator.etVElvN.twig.template_cache_warmer"/>
      <argument type="service" id="twig.template_iterator"/>
    </service>
    <service id="twig.loader.native_filesystem" class="Twig\Loader\FilesystemLoader">
      <tag name="twig.loader"/>
      <argument type="collection"/>
      <argument>/var/www/project</argument>
      <call method="addPath">
        <argument>/var/www/project/vendor/knplabs/knp-menu/src/Knp/Menu/Resources/views</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/project/vendor/doctrine/doctrine-bundle/templates</argument>
        <argument>Doctrine</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/project/vendor/doctrine/doctrine-bundle/templates</argument>
        <argument>!Doctrine</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/project/vendor/doctrine/doctrine-migrations-bundle/Resources/views</argument>
        <argument>DoctrineMigrations</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/project/vendor/doctrine/doctrine-migrations-bundle/Resources/views</argument>
        <argument>!DoctrineMigrations</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/project/vendor/symfony/web-profiler-bundle/Resources/views</argument>
        <argument>WebProfiler</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/project/vendor/symfony/web-profiler-bundle/Resources/views</argument>
        <argument>!WebProfiler</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/project/vendor/symfony/security-bundle/Resources/views</argument>
        <argument>Security</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/project/vendor/symfony/security-bundle/Resources/views</argument>
        <argument>!Security</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/project/vendor/sonata-project/twig-extensions/src/Bridge/Symfony/Resources/views</argument>
        <argument>SonataTwig</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/project/vendor/sonata-project/twig-extensions/src/Bridge/Symfony/Resources/views</argument>
        <argument>!SonataTwig</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/project/vendor/sonata-project/form-extensions/src/Bridge/Symfony/Resources/views</argument>
        <argument>SonataForm</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/project/vendor/sonata-project/form-extensions/src/Bridge/Symfony/Resources/views</argument>
        <argument>!SonataForm</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/project/vendor/sonata-project/block-bundle/src/Resources/views</argument>
        <argument>SonataBlock</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/project/vendor/sonata-project/block-bundle/src/Resources/views</argument>
        <argument>!SonataBlock</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/project/vendor/knplabs/knp-menu-bundle/templates</argument>
        <argument>KnpMenu</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/project/vendor/knplabs/knp-menu-bundle/templates</argument>
        <argument>!KnpMenu</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/project/vendor/sonata-project/admin-bundle/src/Resources/views</argument>
        <argument>SonataAdmin</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/project/vendor/sonata-project/admin-bundle/src/Resources/views</argument>
        <argument>!SonataAdmin</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/project/vendor/sonata-project/doctrine-orm-admin-bundle/src/Resources/views</argument>
        <argument>SonataDoctrineORMAdmin</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/project/vendor/sonata-project/doctrine-orm-admin-bundle/src/Resources/views</argument>
        <argument>!SonataDoctrineORMAdmin</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/project/templates</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/project/vendor/symfony/twig-bridge/Resources/views/Email</argument>
        <argument>email</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/project/vendor/symfony/twig-bridge/Resources/views/Email</argument>
        <argument>!email</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/project/vendor/symfony/twig-bridge/Resources/views/Form</argument>
      </call>
    </service>
    <service id="twig.loader.chain" class="Twig\Loader\ChainLoader"/>
    <service id="twig.extension.profiler" class="Symfony\Bridge\Twig\Extension\ProfilerExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="twig.profile"/>
      <argument type="service" id="debug.stopwatch" on-invalid="ignore"/>
    </service>
    <service id="twig.profile" class="Twig\Profiler\Profile"/>
    <service id="data_collector.twig" class="Symfony\Bridge\Twig\DataCollector\TwigDataCollector">
      <tag name="data_collector" template="@WebProfiler/Collector/twig.html.twig" id="twig" priority="257"/>
      <argument type="service" id="twig.profile"/>
      <argument type="service" id="twig"/>
    </service>
    <service id="twig.extension.trans" class="Symfony\Bridge\Twig\Extension\TranslationExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="translator.data_collector" on-invalid="null"/>
    </service>
    <service id="twig.extension.assets" class="Symfony\Bridge\Twig\Extension\AssetExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="assets.packages"/>
    </service>
    <service id="twig.extension.code" class="Symfony\Bridge\Twig\Extension\CodeExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="debug.file_link_formatter" on-invalid="ignore"/>
      <argument>/var/www/project</argument>
      <argument>UTF-8</argument>
    </service>
    <service id="twig.extension.routing" class="Symfony\Bridge\Twig\Extension\RoutingExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="router.default"/>
    </service>
    <service id="twig.extension.yaml" class="Symfony\Bridge\Twig\Extension\YamlExtension">
      <tag name="twig.extension"/>
    </service>
    <service id="twig.extension.debug.stopwatch" class="Symfony\Bridge\Twig\Extension\StopwatchExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="debug.stopwatch" on-invalid="ignore"/>
      <argument>true</argument>
    </service>
    <service id="twig.extension.expression" class="Symfony\Bridge\Twig\Extension\ExpressionExtension">
      <tag name="twig.extension"/>
    </service>
    <service id="twig.extension.htmlsanitizer" class="Symfony\Bridge\Twig\Extension\HtmlSanitizerExtension">
      <argument type="service" id=".service_locator.Xbsa8iG"/>
    </service>
    <service id="twig.extension.httpkernel" class="Symfony\Bridge\Twig\Extension\HttpKernelExtension">
      <tag name="twig.extension"/>
    </service>
    <service id="twig.runtime.httpkernel" class="Symfony\Bridge\Twig\Extension\HttpKernelRuntime">
      <tag name="twig.runtime"/>
      <argument type="service" id="fragment.handler"/>
      <argument type="service" id="fragment.uri_generator" on-invalid="ignore"/>
    </service>
    <service id="twig.extension.httpfoundation" class="Symfony\Bridge\Twig\Extension\HttpFoundationExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="url_helper"/>
    </service>
    <service id="twig.extension.debug" class="Twig\Extension\DebugExtension">
      <tag name="twig.extension"/>
    </service>
    <service id="twig.extension.weblink" class="Symfony\Bridge\Twig\Extension\WebLinkExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="twig.translation.extractor" class="Symfony\Bridge\Twig\Translation\TwigExtractor">
      <tag name="translation.extractor" alias="twig"/>
      <argument type="service" id="twig"/>
    </service>
    <service id="twig.configurator.environment" class="Symfony\Bundle\TwigBundle\DependencyInjection\Configurator\EnvironmentConfigurator">
      <argument>F j, Y H:i</argument>
      <argument>%d days</argument>
      <argument>null</argument>
      <argument>0</argument>
      <argument>.</argument>
      <argument>,</argument>
    </service>
    <service id="twig.runtime_loader" class="Twig\RuntimeLoader\ContainerRuntimeLoader">
      <argument type="service" id=".service_locator.PsmHLgS"/>
    </service>
    <service id="twig.error_renderer.html" class="Symfony\Bridge\Twig\ErrorRenderer\TwigErrorRenderer">
      <argument type="service" id="twig"/>
      <argument type="service" id="error_handler.error_renderer.html"/>
      <argument type="service">
        <service class="bool">
          <argument type="service" id="request_stack"/>
          <argument>true</argument>
          <factory class="Symfony\Bridge\Twig\ErrorRenderer\TwigErrorRenderer" method="isDebug"/>
        </service>
      </argument>
    </service>
    <service id="twig.runtime.serializer" class="Symfony\Bridge\Twig\Extension\SerializerRuntime">
      <tag name="twig.runtime"/>
      <argument type="service" id="serializer"/>
    </service>
    <service id="twig.extension.serializer" class="Symfony\Bridge\Twig\Extension\SerializerExtension">
      <tag name="twig.extension"/>
    </service>
    <service id="controller.template_attribute_listener" class="Symfony\Bridge\Twig\EventListener\TemplateAttributeListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="twig"/>
    </service>
    <service id="twig.extension.form" class="Symfony\Bridge\Twig\Extension\FormExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="translator.data_collector" on-invalid="null"/>
    </service>
    <service id="twig.form.engine" class="Symfony\Bridge\Twig\Form\TwigRendererEngine">
      <tag name="kernel.reset" method="reset"/>
      <argument>%twig.form.resources%</argument>
      <argument type="service" id="twig"/>
    </service>
    <service id="twig.form.renderer" class="Symfony\Component\Form\FormRenderer">
      <tag name="twig.runtime"/>
      <argument type="service" id="twig.form.engine"/>
      <argument type="service" id="security.csrf.token_manager" on-invalid="null"/>
    </service>
    <service id="twig.command.debug" class="Symfony\Bridge\Twig\Command\DebugCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="twig"/>
      <argument>/var/www/project</argument>
      <argument>%kernel.bundles_metadata%</argument>
      <argument>/var/www/project/templates</argument>
      <argument type="service" id="debug.file_link_formatter" on-invalid="null"/>
      <call method="setName">
        <argument>debug:twig</argument>
      </call>
      <call method="setDescription">
        <argument>Show a list of twig functions, filters, globals and tests</argument>
      </call>
    </service>
    <service id="twig.command.lint" class="Symfony\Bundle\TwigBundle\Command\LintCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="twig"/>
      <argument type="collection">
        <argument>*.twig</argument>
      </argument>
      <call method="setName">
        <argument>lint:twig</argument>
      </call>
      <call method="setDescription">
        <argument>Lint a Twig template and outputs encountered errors</argument>
      </call>
    </service>
    <service id="twig.mailer.message_listener" class="Symfony\Component\Mailer\EventListener\MessageListener">
      <tag name="kernel.event_subscriber"/>
      <argument>null</argument>
      <argument type="service" id="twig.mime_body_renderer"/>
    </service>
    <service id="twig.mime_body_renderer" class="Symfony\Bridge\Twig\Mime\BodyRenderer">
      <argument key="0" type="service" id="twig"/>
      <argument key="localeSwitcher" type="service" id="translation.locale_switcher" on-invalid="ignore"/>
    </service>
    <service id="web_profiler.controller.profiler" class="Symfony\Bundle\WebProfilerBundle\Controller\ProfilerController" public="true">
      <argument type="service" id="router.default" on-invalid="null"/>
      <argument type="service" id="profiler" on-invalid="null"/>
      <argument type="service" id="twig"/>
      <argument>%data_collector.templates%</argument>
      <argument type="service" id="web_profiler.csp.handler"/>
      <argument>/var/www/project</argument>
    </service>
    <service id="web_profiler.controller.router" class="Symfony\Bundle\WebProfilerBundle\Controller\RouterController" public="true">
      <argument type="service" id="profiler" on-invalid="null"/>
      <argument type="service" id="twig"/>
      <argument type="service" id="router.default" on-invalid="null"/>
      <argument>null</argument>
      <argument type="tagged_iterator" tag="routing.expression_language_provider"/>
    </service>
    <service id="web_profiler.controller.exception_panel" class="Symfony\Bundle\WebProfilerBundle\Controller\ExceptionPanelController" public="true">
      <argument type="service" id="error_handler.error_renderer.html"/>
      <argument type="service" id="profiler" on-invalid="null"/>
    </service>
    <service id="web_profiler.csp.handler" class="Symfony\Bundle\WebProfilerBundle\Csp\ContentSecurityPolicyHandler">
      <argument type="service">
        <service class="Symfony\Bundle\WebProfilerBundle\Csp\NonceGenerator"/>
      </argument>
    </service>
    <service id="twig.extension.webprofiler" class="Symfony\Bundle\WebProfilerBundle\Twig\WebProfilerExtension">
      <tag name="twig.extension"/>
      <argument type="service">
        <service class="Symfony\Component\VarDumper\Dumper\HtmlDumper">
          <argument>null</argument>
          <argument>UTF-8</argument>
          <argument>1</argument>
          <call method="setDisplayOptions">
            <argument type="collection">
              <argument key="maxStringLength">4096</argument>
              <argument key="fileLinkFormat" type="service" id="debug.file_link_formatter"/>
            </argument>
          </call>
        </service>
      </argument>
    </service>
    <service id="debug.file_link_formatter.url_format" class="string">
      <argument type="service" id="router.default"/>
      <argument>_profiler_open_file</argument>
      <argument>?file=%%f&amp;line=%%l#line%%l</argument>
      <factory class="Symfony\Component\ErrorHandler\ErrorRenderer\FileLinkFormatter" method="generateUrlFormat"/>
    </service>
    <service id="twig.missing_extension_suggestor" class="Twig\Extra\TwigExtraBundle\MissingExtensionSuggestor"/>
    <service id="twig.extension.string" class="Twig\Extra\String\StringExtension">
      <tag name="twig.extension"/>
    </service>
    <service id="security.authorization_checker" class="Symfony\Component\Security\Core\Authorization\AuthorizationChecker">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="debug.security.access.decision_manager"/>
      <argument>false</argument>
      <argument>false</argument>
    </service>
    <service id="security.token_storage" class="Symfony\Component\Security\Core\Authentication\Token\Storage\UsageTrackingTokenStorage">
      <tag name="kernel.reset" method="disableUsageTracking"/>
      <tag name="kernel.reset" method="setToken"/>
      <argument type="service" id="security.untracked_token_storage"/>
      <argument type="service" id=".service_locator.LcVn9Hr"/>
    </service>
    <service id="security.untracked_token_storage" class="Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorage"/>
    <service id="security.helper" class="Symfony\Bundle\SecurityBundle\Security">
      <argument type="service" id=".service_locator.e_.xxAP"/>
      <argument type="collection">
        <argument key="dev">null</argument>
        <argument key="main">null</argument>
      </argument>
    </service>
    <service id="security.user_value_resolver" class="Symfony\Component\Security\Http\Controller\UserValueResolver">
      <tag priority="120" name="Symfony\Component\Security\Http\Controller\UserValueResolver">controller.argument_value_resolver</tag>
      <argument type="service" id="security.token_storage"/>
    </service>
    <service id="security.security_token_value_resolver" class="Symfony\Component\Security\Http\Controller\SecurityTokenValueResolver">
      <tag priority="120" name="Symfony\Component\Security\Http\Controller\SecurityTokenValueResolver">controller.argument_value_resolver</tag>
      <argument type="service" id="security.token_storage"/>
    </service>
    <service id="security.authentication.trust_resolver" class="Symfony\Component\Security\Core\Authentication\AuthenticationTrustResolver"/>
    <service id="security.authentication.session_strategy" class="Symfony\Component\Security\Http\Session\SessionAuthenticationStrategy">
      <argument>migrate</argument>
      <argument type="service" id="security.csrf.token_storage" on-invalid="ignore"/>
    </service>
    <service id="security.authentication.session_strategy_noop" class="Symfony\Component\Security\Http\Session\SessionAuthenticationStrategy">
      <argument>none</argument>
    </service>
    <service id="security.user_checker" class="Symfony\Component\Security\Core\User\InMemoryUserChecker"/>
    <service id="security.user_checker_locator" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <argument type="collection">
        <argument key="main" type="service_closure" id="security.user_checker"/>
      </argument>
    </service>
    <service id="security.expression_language" class="Symfony\Component\Security\Core\Authorization\ExpressionLanguage">
      <argument type="service" id="cache.security_expression_language" on-invalid="null"/>
    </service>
    <service id="security.authentication_utils" class="Symfony\Component\Security\Http\Authentication\AuthenticationUtils">
      <argument type="service" id="request_stack"/>
    </service>
    <service id="security.role_hierarchy" class="Symfony\Component\Security\Core\Role\RoleHierarchy">
      <argument type="collection"/>
    </service>
    <service id="security.access.simple_role_voter" class="Symfony\Component\Security\Core\Authorization\Voter\RoleVoter">
      <tag name="security.voter" priority="245"/>
    </service>
    <service id="security.access.authenticated_voter" class="Symfony\Component\Security\Core\Authorization\Voter\AuthenticatedVoter">
      <tag name="security.voter" priority="250"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
    </service>
    <service id="security.access.expression_voter" class="Symfony\Component\Security\Core\Authorization\Voter\ExpressionVoter">
      <tag name="security.voter" priority="245"/>
      <argument type="service" id="security.expression_language"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="service" id="security.authorization_checker"/>
      <argument type="service" id="security.role_hierarchy" on-invalid="null"/>
    </service>
    <service id="security.impersonate_url_generator" class="Symfony\Component\Security\Http\Impersonate\ImpersonateUrlGenerator">
      <argument type="service" id="request_stack"/>
      <argument type="service" id="security.firewall.map"/>
      <argument type="service" id="security.token_storage"/>
    </service>
    <service id="security.firewall.map" class="Symfony\Bundle\SecurityBundle\Security\FirewallMap">
      <argument type="service" id=".service_locator.zJyh7qS"/>
      <argument type="iterator">
        <argument key="security.firewall.map.context.dev" type="service" id=".security.request_matcher.kLbKLHa"/>
        <argument key="security.firewall.map.context.main">null</argument>
      </argument>
    </service>
    <service id="security.firewall.context" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext" abstract="true">
      <argument type="collection"/>
      <argument type="service" id="security.exception_listener"/>
      <argument type="abstract">LogoutListener</argument>
      <argument type="abstract">FirewallConfig</argument>
    </service>
    <service id="security.firewall.lazy_context" class="Symfony\Bundle\SecurityBundle\Security\LazyFirewallContext" abstract="true">
      <argument type="collection"/>
      <argument type="service" id="security.exception_listener"/>
      <argument type="abstract">LogoutListener</argument>
      <argument type="abstract">FirewallConfig</argument>
      <argument type="service" id="security.untracked_token_storage"/>
    </service>
    <service id="security.firewall.config" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig" abstract="true">
      <argument type="abstract">name</argument>
      <argument type="abstract">user_checker</argument>
      <argument type="abstract">request_matcher</argument>
      <argument>false</argument>
      <argument>false</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="collection"/>
      <argument>null</argument>
      <argument>null</argument>
    </service>
    <service id="security.logout_url_generator" class="Symfony\Component\Security\Http\Logout\LogoutUrlGenerator">
      <argument type="service" id="request_stack" on-invalid="null"/>
      <argument type="service" id="router.default" on-invalid="null"/>
      <argument type="service" id="security.token_storage" on-invalid="null"/>
    </service>
    <service id="security.route_loader.logout" class="Symfony\Bundle\SecurityBundle\Routing\LogoutRouteLoader">
      <tag name="routing.route_loader"/>
      <argument type="collection"/>
      <argument>security.logout_uris</argument>
    </service>
    <service id="security.user.provider.missing" class="Symfony\Component\Security\Core\User\MissingUserProvider" abstract="true">
      <argument type="abstract">firewall</argument>
    </service>
    <service id="security.user.provider.in_memory" class="Symfony\Component\Security\Core\User\InMemoryUserProvider" abstract="true"/>
    <service id="security.user.provider.ldap" class="Symfony\Component\Ldap\Security\LdapUserProvider" abstract="true">
      <argument type="abstract">security.ldap.ldap</argument>
      <argument type="abstract">base dn</argument>
      <argument type="abstract">search dn</argument>
      <argument type="abstract">search password</argument>
      <argument type="abstract">default_roles</argument>
      <argument type="abstract">uid key</argument>
      <argument type="abstract">filter</argument>
      <argument type="abstract">password_attribute</argument>
      <argument type="abstract">extra_fields (email etc)</argument>
    </service>
    <service id="security.user.provider.chain" class="Symfony\Component\Security\Core\User\ChainUserProvider" abstract="true"/>
    <service id="security.http_utils" class="Symfony\Component\Security\Http\HttpUtils">
      <argument type="service" id="router.default" on-invalid="null"/>
      <argument type="service" id="router.default" on-invalid="null"/>
      <argument>{^https?://%%s$}i</argument>
      <argument>{^https://%%s$}i</argument>
    </service>
    <service id="security.validator.user_password" class="Symfony\Component\Security\Core\Validator\Constraints\UserPasswordValidator">
      <tag name="validator.constraint_validator" alias="security.validator.user_password"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.password_hasher_factory"/>
    </service>
    <service id="cache.security_expression_language" class="Symfony\Component\Cache\Adapter\TraceableAdapter">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="cache.security_expression_language.recorder_inner"/>
    </service>
    <service id="controller.is_granted_attribute_listener" class="Symfony\Component\Security\Http\EventListener\IsGrantedAttributeListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="security.authorization_checker"/>
      <argument type="service" id="security.is_granted_attribute_expression_language" on-invalid="null"/>
    </service>
    <service id="security.is_granted_attribute_expression_language" class="Symfony\Component\ExpressionLanguage\ExpressionLanguage">
      <argument type="service" id="cache.security_is_granted_attribute_expression_language" on-invalid="null"/>
    </service>
    <service id="cache.security_is_granted_attribute_expression_language" class="Symfony\Component\Cache\Adapter\TraceableAdapter" public="true">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="cache.security_is_granted_attribute_expression_language.recorder_inner"/>
    </service>
    <service id="security.password_hasher_factory" class="Symfony\Component\PasswordHasher\Hasher\PasswordHasherFactory">
      <argument type="collection">
        <argument key="Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface" type="collection">
          <argument key="algorithm">auto</argument>
          <argument key="cost">4</argument>
          <argument key="time_cost">3</argument>
          <argument key="memory_cost">10</argument>
          <argument key="migrate_from" type="collection"/>
          <argument key="hash_algorithm">sha512</argument>
          <argument key="key_length">40</argument>
          <argument key="ignore_case">false</argument>
          <argument key="encode_as_base64">true</argument>
          <argument key="iterations">5000</argument>
        </argument>
      </argument>
    </service>
    <service id="security.user_password_hasher" class="Symfony\Component\PasswordHasher\Hasher\UserPasswordHasher">
      <argument type="service" id="security.password_hasher_factory"/>
    </service>
    <service id="form.listener.password_hasher" class="Symfony\Component\Form\Extension\PasswordHasher\EventListener\PasswordHasherListener">
      <argument type="service" id="security.user_password_hasher"/>
      <argument type="service" id="property_accessor" on-invalid="null"/>
    </service>
    <service id="form.type_extension.form.password_hasher" class="Symfony\Component\Form\Extension\PasswordHasher\Type\FormTypePasswordHasherExtension">
      <tag name="form.type_extension" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
      <argument type="service" id="form.listener.password_hasher"/>
    </service>
    <service id="form.type_extension.password.password_hasher" class="Symfony\Component\Form\Extension\PasswordHasher\Type\PasswordTypePasswordHasherExtension">
      <tag name="form.type_extension" extended-type="Symfony\Component\Form\Extension\Core\Type\PasswordType"/>
      <argument type="service" id="form.listener.password_hasher"/>
    </service>
    <service id="security.channel_listener" class="Symfony\Component\Security\Http\Firewall\ChannelListener">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.access_map"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service">
        <service class="int">
          <factory service="router.request_context" method="getHttpPort"/>
        </service>
      </argument>
      <argument type="service">
        <service class="int">
          <factory service="router.request_context" method="getHttpsPort"/>
        </service>
      </argument>
    </service>
    <service id="security.access_map" class="Symfony\Component\Security\Http\AccessMap"/>
    <service id="security.context_listener" class="Symfony\Component\Security\Http\Firewall\ContextListener">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.untracked_token_storage"/>
      <argument type="iterator">
        <argument type="service" id="security.user.provider.concrete.users_in_memory"/>
      </argument>
      <argument type="abstract">Provider Key</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="collection">
        <argument type="service" id="security.token_storage"/>
        <argument>enableUsageTracking</argument>
      </argument>
    </service>
    <service id="security.logout_listener" class="Symfony\Component\Security\Http\Firewall\LogoutListener" abstract="true">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="abstract">event dispatcher</argument>
      <argument type="collection"/>
    </service>
    <service id="security.logout.listener.session" class="Symfony\Component\Security\Http\EventListener\SessionLogoutListener" abstract="true"/>
    <service id="security.logout.listener.clear_site_data" class="Symfony\Component\Security\Http\EventListener\ClearSiteDataLogoutListener" abstract="true"/>
    <service id="security.logout.listener.cookie_clearing" class="Symfony\Component\Security\Http\EventListener\CookieClearingLogoutListener" abstract="true"/>
    <service id="security.logout.listener.default" class="Symfony\Component\Security\Http\EventListener\DefaultLogoutListener" abstract="true">
      <argument type="service" id="security.http_utils"/>
      <argument type="abstract">target url</argument>
    </service>
    <service id="security.authentication.listener.abstract" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="security.authentication.session_strategy"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="abstract">Provider-shared Key</argument>
      <argument type="service" id="security.authentication.success_handler"/>
      <argument type="service" id="security.authentication.failure_handler"/>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
    </service>
    <service id="security.authentication.custom_success_handler" class="Symfony\Component\Security\Http\Authentication\CustomAuthenticationSuccessHandler" abstract="true">
      <argument type="abstract">The custom success handler service</argument>
      <argument type="collection"/>
      <argument type="abstract">Provider-shared Key</argument>
    </service>
    <service id="security.authentication.success_handler" class="Symfony\Component\Security\Http\Authentication\DefaultAuthenticationSuccessHandler" abstract="true">
      <argument type="service" id="security.http_utils"/>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger" on-invalid="null"/>
    </service>
    <service id="security.authentication.custom_failure_handler" class="Symfony\Component\Security\Http\Authentication\CustomAuthenticationFailureHandler" abstract="true">
      <argument type="abstract">The custom failure handler service</argument>
      <argument type="collection"/>
    </service>
    <service id="security.authentication.failure_handler" class="Symfony\Component\Security\Http\Authentication\DefaultAuthenticationFailureHandler" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="http_kernel"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.exception_listener" class="Symfony\Component\Security\Http\Firewall\ExceptionListener" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="abstract">Provider-shared Key</argument>
      <argument type="service" id="security.authentication.entry_point" on-invalid="null"/>
      <argument>null</argument>
      <argument type="service" id="security.access.denied_handler" on-invalid="null"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>false</argument>
    </service>
    <service id="security.authentication.switchuser_listener" class="Symfony\Component\Security\Http\Firewall\SwitchUserListener" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="abstract">User Provider</argument>
      <argument type="abstract">User Checker</argument>
      <argument type="abstract">Provider Key</argument>
      <argument type="service" id="debug.security.access.decision_manager"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>_switch_user</argument>
      <argument>ROLE_ALLOWED_TO_SWITCH</argument>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument>false</argument>
      <argument type="service" id="router.default" on-invalid="null"/>
      <argument type="abstract">Target Route</argument>
    </service>
    <service id="security.access_listener" class="Symfony\Component\Security\Http\Firewall\AccessListener">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="debug.security.access.decision_manager"/>
      <argument type="service" id="security.access_map"/>
      <argument>false</argument>
    </service>
    <service id="security.firewall.event_dispatcher_locator" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <argument type="collection">
        <argument key="main" type="service_closure" id="debug.security.event_dispatcher.main"/>
      </argument>
    </service>
    <service id="security.authenticator.manager" class="Symfony\Component\Security\Http\Authentication\AuthenticatorManager" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="abstract">authenticators</argument>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="abstract">provider key</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>true</argument>
      <argument>true</argument>
      <argument type="abstract">required badges</argument>
    </service>
    <service id="security.authenticator.managers_locator" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <argument type="collection">
        <argument key="main" type="service_closure" id="security.authenticator.manager.main"/>
      </argument>
    </service>
    <service id="security.user_authenticator" class="Symfony\Bundle\SecurityBundle\Security\UserAuthenticator">
      <argument type="service" id="security.firewall.map"/>
      <argument type="service" id="security.authenticator.managers_locator"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="security.firewall.authenticator" class="Symfony\Component\Security\Http\Firewall\AuthenticatorManagerListener" abstract="true">
      <argument type="abstract">authenticator manager</argument>
    </service>
    <service id="security.listener.check_authenticator_credentials" class="Symfony\Component\Security\Http\EventListener\CheckCredentialsListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="security.password_hasher_factory"/>
    </service>
    <service id="security.listener.user_provider" class="Symfony\Component\Security\Http\EventListener\UserProviderListener">
      <tag name="kernel.event_listener" event="Symfony\Component\Security\Http\Event\CheckPassportEvent" priority="1024" method="checkPassport"/>
      <argument type="service" id="security.user.provider.concrete.users_in_memory"/>
    </service>
    <service id="security.listener.user_provider.abstract" class="Symfony\Component\Security\Http\EventListener\UserProviderListener" abstract="true">
      <argument type="abstract">user provider</argument>
    </service>
    <service id="security.listener.password_migrating" class="Symfony\Component\Security\Http\EventListener\PasswordMigratingListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="security.password_hasher_factory"/>
    </service>
    <service id="security.listener.user_checker" class="Symfony\Component\Security\Http\EventListener\UserCheckerListener" abstract="true">
      <argument type="abstract">user checker</argument>
    </service>
    <service id="security.listener.session" class="Symfony\Component\Security\Http\EventListener\SessionStrategyListener" abstract="true">
      <argument type="service" id="security.authentication.session_strategy"/>
    </service>
    <service id="security.listener.login_throttling" class="Symfony\Component\Security\Http\EventListener\LoginThrottlingListener" abstract="true">
      <argument type="service" id="request_stack"/>
      <argument type="abstract">request rate limiter</argument>
    </service>
    <service id="security.authenticator.http_basic" class="Symfony\Component\Security\Http\Authenticator\HttpBasicAuthenticator" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="abstract">realm name</argument>
      <argument type="abstract">user provider</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.authenticator.form_login" class="Symfony\Component\Security\Http\Authenticator\FormLoginAuthenticator" abstract="true">
      <argument type="service" id="security.http_utils"/>
      <argument type="abstract">user provider</argument>
      <argument type="abstract">authentication success handler</argument>
      <argument type="abstract">authentication failure handler</argument>
      <argument type="abstract">options</argument>
    </service>
    <service id="security.authenticator.json_login" class="Symfony\Component\Security\Http\Authenticator\JsonLoginAuthenticator" abstract="true">
      <argument type="service" id="security.http_utils"/>
      <argument type="abstract">user provider</argument>
      <argument type="abstract">authentication success handler</argument>
      <argument type="abstract">authentication failure handler</argument>
      <argument type="abstract">options</argument>
      <argument type="service" id="property_accessor" on-invalid="null"/>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector" on-invalid="ignore"/>
      </call>
    </service>
    <service id="security.authenticator.x509" class="Symfony\Component\Security\Http\Authenticator\X509Authenticator" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="abstract">user provider</argument>
      <argument type="service" id="security.token_storage"/>
      <argument type="abstract">firewall name</argument>
      <argument type="abstract">user key</argument>
      <argument type="abstract">credentials key</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="abstract">credentials user identifier</argument>
    </service>
    <service id="security.authenticator.remote_user" class="Symfony\Component\Security\Http\Authenticator\RemoteUserAuthenticator" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="abstract">user provider</argument>
      <argument type="service" id="security.token_storage"/>
      <argument type="abstract">firewall name</argument>
      <argument type="abstract">user key</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.access_token_extractor.header" class="Symfony\Component\Security\Http\AccessToken\HeaderAccessTokenExtractor"/>
    <service id="security.access_token_extractor.query_string" class="Symfony\Component\Security\Http\AccessToken\QueryAccessTokenExtractor"/>
    <service id="security.access_token_extractor.request_body" class="Symfony\Component\Security\Http\AccessToken\FormEncodedBodyExtractor"/>
    <service id="security.authenticator.access_token" class="Symfony\Component\Security\Http\Authenticator\AccessTokenAuthenticator" abstract="true">
      <argument type="abstract">access token handler</argument>
      <argument type="abstract">access token extractor</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
    </service>
    <service id="security.authenticator.access_token.chain_extractor" class="Symfony\Component\Security\Http\AccessToken\ChainAccessTokenExtractor" abstract="true">
      <argument type="abstract">access token extractors</argument>
    </service>
    <service id="security.access_token_handler.oidc_user_info.http_client" class="Symfony\Contracts\HttpClient\HttpClientInterface" abstract="true">
      <argument type="abstract">http client options</argument>
      <factory service=".debug.http_client" method="withOptions"/>
    </service>
    <service id="security.access_token_handler.oidc_user_info" class="Symfony\Component\Security\Http\AccessToken\Oidc\OidcUserInfoTokenHandler" abstract="true">
      <argument type="abstract">http client</argument>
      <argument type="service" id="monolog.logger" on-invalid="null"/>
      <argument type="abstract">claim</argument>
    </service>
    <service id="security.access_token_handler.oidc" class="Symfony\Component\Security\Http\AccessToken\Oidc\OidcTokenHandler" abstract="true">
      <argument type="abstract">signature algorithm</argument>
      <argument type="abstract">signature key</argument>
      <argument type="abstract">audience</argument>
      <argument type="abstract">issuers</argument>
      <argument>sub</argument>
      <argument type="service" id="monolog.logger" on-invalid="null"/>
      <argument type="service" id="clock"/>
    </service>
    <service id="security.access_token_handler.oidc.jwk" class="Jose\Component\Core\JWK" constructor="createFromJson" abstract="true">
      <argument type="abstract">signature key</argument>
    </service>
    <service id="security.access_token_handler.oidc.signature" class="Jose\Component\Core\Algorithm" abstract="true">
      <argument type="abstract">signature algorithm</argument>
      <factory class="Symfony\Bundle\SecurityBundle\DependencyInjection\Security\Factory\SignatureAlgorithmFactory" method="create"/>
    </service>
    <service id="security.access_token_handler.oidc.signature.ES256" class="Jose\Component\Signature\Algorithm\ES256">
      <argument>ES256</argument>
      <factory class="Symfony\Bundle\SecurityBundle\DependencyInjection\Security\Factory\SignatureAlgorithmFactory" method="create"/>
    </service>
    <service id="security.access_token_handler.oidc.signature.ES384" class="Jose\Component\Signature\Algorithm\ES384">
      <argument>ES384</argument>
      <factory class="Symfony\Bundle\SecurityBundle\DependencyInjection\Security\Factory\SignatureAlgorithmFactory" method="create"/>
    </service>
    <service id="security.access_token_handler.oidc.signature.ES512" class="Jose\Component\Signature\Algorithm\ES512">
      <argument>ES512</argument>
      <factory class="Symfony\Bundle\SecurityBundle\DependencyInjection\Security\Factory\SignatureAlgorithmFactory" method="create"/>
    </service>
    <service id="twig.extension.logout_url" class="Symfony\Bridge\Twig\Extension\LogoutUrlExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="security.logout_url_generator"/>
    </service>
    <service id="twig.extension.security" class="Symfony\Bridge\Twig\Extension\SecurityExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="security.authorization_checker" on-invalid="ignore"/>
      <argument type="service" id="security.impersonate_url_generator" on-invalid="ignore"/>
    </service>
    <service id="data_collector.security" class="Symfony\Bundle\SecurityBundle\DataCollector\SecurityDataCollector">
      <tag name="data_collector" template="@Security/Collector/security.html.twig" id="security" priority="270"/>
      <argument type="service" id="security.untracked_token_storage"/>
      <argument type="service" id="security.role_hierarchy"/>
      <argument type="service" id="security.logout_url_generator"/>
      <argument type="service" id="debug.security.access.decision_manager"/>
      <argument type="service" id="security.firewall.map"/>
      <argument type="service" id="debug.security.firewall" on-invalid="null"/>
    </service>
    <service id="debug.security.access.decision_manager" class="Symfony\Component\Security\Core\Authorization\TraceableAccessDecisionManager">
      <tag name="container.decorator" id="security.access.decision_manager" inner="debug.security.access.decision_manager.inner"/>
      <argument type="service" id="debug.security.access.decision_manager.inner"/>
    </service>
    <service id="debug.security.voter.vote_listener" class="Symfony\Bundle\SecurityBundle\EventListener\VoteListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="debug.security.access.decision_manager"/>
    </service>
    <service id="debug.security.firewall" class="Symfony\Bundle\SecurityBundle\Debug\TraceableFirewallListener">
      <tag name="kernel.reset" method="reset"/>
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="security.firewall.map"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="security.logout_url_generator"/>
    </service>
    <service id="security.command.debug_firewall" class="Symfony\Bundle\SecurityBundle\Command\DebugFirewallCommand">
      <tag name="console.command" command="debug:firewall"/>
      <tag name="container.no_preload"/>
      <argument>%security.firewalls%</argument>
      <argument type="service" id=".service_locator.zJyh7qS"/>
      <argument type="service" id=".service_locator._1SGciK"/>
      <argument type="collection">
        <argument key="main" type="collection"/>
      </argument>
      <argument>false</argument>
      <call method="setName">
        <argument>debug:firewall</argument>
      </call>
      <call method="setDescription">
        <argument>Display information about your security firewall(s)</argument>
      </call>
    </service>
    <service id="security.user.provider.concrete.users_in_memory" class="Symfony\Component\Security\Core\User\InMemoryUserProvider">
      <argument type="collection"/>
    </service>
    <service id="security.firewall.map.config.dev" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig">
      <argument>dev</argument>
      <argument>security.user_checker</argument>
      <argument>.security.request_matcher.kLbKLHa</argument>
      <argument>false</argument>
      <argument>false</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="collection"/>
      <argument>null</argument>
      <argument>null</argument>
    </service>
    <service id=".security.request_matcher.q1UFWmc" class="Symfony\Component\HttpFoundation\RequestMatcher\PathRequestMatcher">
      <argument>^/(_(profiler|wdt)|css|images|js)/</argument>
    </service>
    <service id=".security.request_matcher.kLbKLHa" class="Symfony\Component\HttpFoundation\ChainRequestMatcher">
      <argument type="collection">
        <argument type="service" id=".security.request_matcher.q1UFWmc"/>
      </argument>
    </service>
    <service id="security.firewall.map.context.dev" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext">
      <argument type="iterator"/>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="service" id="security.firewall.map.config.dev"/>
    </service>
    <service id="security.firewall.map.config.main" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig">
      <argument>main</argument>
      <argument>security.user_checker</argument>
      <argument>null</argument>
      <argument>true</argument>
      <argument>false</argument>
      <argument>security.user.provider.concrete.users_in_memory</argument>
      <argument>main</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="collection"/>
      <argument>null</argument>
      <argument>null</argument>
    </service>
    <service id="security.listener.main.user_provider" class="Symfony\Component\Security\Http\EventListener\UserProviderListener">
      <tag name="kernel.event_listener" dispatcher="debug.security.event_dispatcher.main" event="Symfony\Component\Security\Http\Event\CheckPassportEvent" priority="2048" method="checkPassport"/>
      <argument type="service" id="security.user.provider.concrete.users_in_memory"/>
    </service>
    <service id="security.user_checker.chain.main" class="Symfony\Component\Security\Core\User\ChainUserChecker">
      <argument type="tagged_iterator" tag="security.user_checker.main"/>
    </service>
    <service id="security.context_listener.0" class="Symfony\Component\Security\Http\Firewall\ContextListener">
      <tag name="kernel.event_listener" event="kernel.response" method="onKernelResponse"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="security.untracked_token_storage"/>
      <argument type="iterator">
        <argument type="service" id="security.user.provider.concrete.users_in_memory"/>
      </argument>
      <argument>main</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.security.event_dispatcher.main"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="collection">
        <argument type="service" id="security.token_storage"/>
        <argument>enableUsageTracking</argument>
      </argument>
    </service>
    <service id="security.listener.session.main" class="Symfony\Component\Security\Http\EventListener\SessionStrategyListener">
      <tag name="kernel.event_subscriber" dispatcher="debug.security.event_dispatcher.main"/>
      <argument type="service" id="security.authentication.session_strategy"/>
    </service>
    <service id="security.authenticator.manager.main" class="Symfony\Component\Security\Http\Authentication\AuthenticatorManager">
      <tag name="monolog.logger" channel="security"/>
      <argument type="collection"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="debug.security.event_dispatcher.main"/>
      <argument>main</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>true</argument>
      <argument>true</argument>
      <argument type="collection"/>
    </service>
    <service id="debug.security.firewall.authenticator.main" class="Symfony\Component\Security\Http\Authenticator\Debug\TraceableAuthenticatorManagerListener">
      <tag name="kernel.reset" method="reset"/>
      <tag name="container.decorator" id="security.firewall.authenticator.main" inner="debug.security.firewall.authenticator.main.inner"/>
      <argument type="service" id="debug.security.firewall.authenticator.main.inner"/>
    </service>
    <service id="security.listener.user_checker.main" class="Symfony\Component\Security\Http\EventListener\UserCheckerListener">
      <tag name="kernel.event_subscriber" dispatcher="debug.security.event_dispatcher.main"/>
      <argument type="service" id="security.user_checker"/>
    </service>
    <service id="security.exception_listener.main" class="Symfony\Component\Security\Http\Firewall\ExceptionListener">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="service" id="security.http_utils"/>
      <argument>main</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>false</argument>
    </service>
    <service id="security.firewall.map.context.main" class="Symfony\Bundle\SecurityBundle\Security\LazyFirewallContext">
      <argument type="iterator">
        <argument type="service" id="security.channel_listener"/>
        <argument type="service" id="security.context_listener.0"/>
        <argument type="service" id="debug.security.firewall.authenticator.main"/>
        <argument type="service" id="security.access_listener"/>
      </argument>
      <argument type="service" id="security.exception_listener.main"/>
      <argument>null</argument>
      <argument type="service" id="security.firewall.map.config.main"/>
      <argument type="service" id="security.untracked_token_storage"/>
    </service>
    <service id=".service_locator.zJyh7qS" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="security.firewall.map.context.dev" type="service_closure" id="security.firewall.map.context.dev"/>
        <argument key="security.firewall.map.context.main" type="service_closure" id="security.firewall.map.context.main"/>
      </argument>
    </service>
    <service id="security.command.user_password_hash" class="Symfony\Component\PasswordHasher\Command\UserPasswordHashCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="security.password_hasher_factory"/>
      <argument type="collection">
        <argument>Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface</argument>
      </argument>
      <call method="setName">
        <argument>security:hash-password</argument>
      </call>
      <call method="setDescription">
        <argument>Hash a user password</argument>
      </call>
    </service>
    <service id="monolog.logger" class="Monolog\Logger">
      <argument>app</argument>
      <call method="useMicrosecondTimestamps">
        <argument>true</argument>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator service="debug.debug_logger_configurator" method="pushDebugLogger"/>
    </service>
    <service id="monolog.logger_prototype" class="Monolog\Logger" abstract="true">
      <argument></argument>
      <configurator service="debug.debug_logger_configurator" method="pushDebugLogger"/>
    </service>
    <service id="monolog.activation_strategy.not_found" class="Symfony\Bridge\Monolog\Handler\FingersCrossed\NotFoundActivationStrategy" abstract="true"/>
    <service id="monolog.handler.fingers_crossed.error_level_activation_strategy" class="Monolog\Handler\FingersCrossed\ErrorLevelActivationStrategy" abstract="true"/>
    <service id="monolog.formatter.chrome_php" class="Monolog\Formatter\ChromePHPFormatter"/>
    <service id="monolog.formatter.gelf_message" class="Monolog\Formatter\GelfMessageFormatter"/>
    <service id="monolog.formatter.html" class="Monolog\Formatter\HtmlFormatter"/>
    <service id="monolog.formatter.json" class="Monolog\Formatter\JsonFormatter"/>
    <service id="monolog.formatter.line" class="Monolog\Formatter\LineFormatter"/>
    <service id="monolog.formatter.loggly" class="Monolog\Formatter\LogglyFormatter"/>
    <service id="monolog.formatter.normalizer" class="Monolog\Formatter\NormalizerFormatter"/>
    <service id="monolog.formatter.scalar" class="Monolog\Formatter\ScalarFormatter"/>
    <service id="monolog.formatter.wildfire" class="Monolog\Formatter\WildfireFormatter"/>
    <service id="monolog.formatter.logstash" class="Monolog\Formatter\LogstashFormatter">
      <argument>app</argument>
    </service>
    <service id="monolog.http_client" class="Symfony\Contracts\HttpClient\HttpClientInterface">
      <factory class="Symfony\Component\HttpClient\HttpClient" method="create"/>
    </service>
    <service id="monolog.handler.main.http_code_strategy" class="Symfony\Bridge\Monolog\Handler\FingersCrossed\HttpCodeActivationStrategy">
      <argument type="service" id="request_stack"/>
      <argument type="collection">
        <argument type="collection">
          <argument key="code">404</argument>
          <argument key="urls" type="collection"/>
        </argument>
        <argument type="collection">
          <argument key="code">405</argument>
          <argument key="urls" type="collection"/>
        </argument>
      </argument>
      <argument type="service">
        <service class="Monolog\Handler\FingersCrossed\ErrorLevelActivationStrategy">
          <argument>error</argument>
        </service>
      </argument>
    </service>
    <service id="monolog.handler.main" class="Monolog\Handler\FingersCrossedHandler">
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="monolog.handler.nested"/>
      <argument type="service" id="monolog.handler.main.http_code_strategy"/>
      <argument>0</argument>
      <argument>true</argument>
      <argument>true</argument>
      <argument>null</argument>
    </service>
    <service id="monolog.processor.psr_log_message" class="Monolog\Processor\PsrLogMessageProcessor"/>
    <service id="monolog.handler.nested" class="Monolog\Handler\StreamHandler">
      <argument>/var/www/project/var/log/test.log</argument>
      <argument>debug</argument>
      <argument>true</argument>
      <argument>null</argument>
      <argument>false</argument>
      <call method="pushProcessor">
        <argument type="service" id="monolog.processor.psr_log_message"/>
      </call>
    </service>
    <service id="sonata.twig.flashmessage.manager" class="Sonata\Twig\FlashMessage\FlashManager" public="true">
      <tag name="sonata.status.renderer"/>
      <argument type="service" id="request_stack"/>
      <argument type="collection">
        <argument key="success" type="collection">
          <argument>success</argument>
          <argument>sonata_flash_success</argument>
          <argument>sonata_user_success</argument>
        </argument>
        <argument key="warning" type="collection">
          <argument>warning</argument>
          <argument>sonata_flash_info</argument>
        </argument>
        <argument key="danger" type="collection">
          <argument>error</argument>
          <argument>sonata_flash_error</argument>
          <argument>sonata_user_error</argument>
        </argument>
      </argument>
      <argument type="collection">
        <argument key="success">success</argument>
        <argument key="warning">warning</argument>
        <argument key="danger">danger</argument>
      </argument>
    </service>
    <service id="sonata.twig.flashmessage.twig.runtime" class="Sonata\Twig\Extension\FlashMessageRuntime">
      <tag name="twig.runtime"/>
      <argument type="service" id="sonata.twig.flashmessage.manager"/>
    </service>
    <service id="sonata.twig.flashmessage.twig.extension" class="Sonata\Twig\Extension\FlashMessageExtension" public="true">
      <tag name="twig.extension"/>
    </service>
    <service id="sonata.twig.extension.wrapping" class="Sonata\Twig\Extension\FormTypeExtension">
      <tag name="twig.extension"/>
      <argument>standard</argument>
    </service>
    <service id="sonata.twig.status_runtime" class="Sonata\Twig\Extension\StatusRuntime">
      <tag name="twig.runtime"/>
    </service>
    <service id="sonata.twig.status_extension" class="Sonata\Twig\Extension\StatusExtension">
      <tag name="twig.extension"/>
    </service>
    <service id="sonata.twig.template_extension" class="Sonata\Twig\Extension\TemplateExtension">
      <tag name="twig.extension"/>
      <argument>true</argument>
    </service>
    <service id="sonata.form.date.javascript_format_converter" class="Sonata\Form\Date\JavaScriptFormatConverter"/>
    <service id="sonata.form.type.array" class="Sonata\Form\Type\ImmutableArrayType">
      <tag name="form.type" alias="sonata_type_immutable_array"/>
    </service>
    <service id="sonata.form.type.boolean" class="Sonata\Form\Type\BooleanType">
      <tag name="form.type" alias="sonata_type_boolean"/>
    </service>
    <service id="sonata.form.type.collection" class="Sonata\Form\Type\CollectionType">
      <tag name="form.type" alias="sonata_type_collection"/>
    </service>
    <service id="sonata.form.type.date_range" class="Sonata\Form\Type\DateRangeType">
      <tag name="form.type" alias="sonata_type_date_range"/>
    </service>
    <service id="sonata.form.type.datetime_range" class="Sonata\Form\Type\DateTimeRangeType">
      <tag name="form.type" alias="sonata_type_datetime_range"/>
    </service>
    <service id="sonata.form.type.date_picker" class="Sonata\Form\Type\DatePickerType">
      <tag name="kernel.locale_aware"/>
      <tag name="form.type" alias="sonata_type_date_picker"/>
      <argument type="service" id="sonata.form.date.javascript_format_converter"/>
      <argument>en</argument>
    </service>
    <service id="sonata.form.type.datetime_picker" class="Sonata\Form\Type\DateTimePickerType">
      <tag name="kernel.locale_aware"/>
      <tag name="form.type" alias="sonata_type_datetime_picker"/>
      <argument type="service" id="sonata.form.date.javascript_format_converter"/>
      <argument>en</argument>
    </service>
    <service id="sonata.form.type.date_range_picker" class="Sonata\Form\Type\DateRangePickerType">
      <tag name="form.type" alias="sonata_type_date_range_picker"/>
    </service>
    <service id="sonata.form.type.datetime_range_picker" class="Sonata\Form\Type\DateTimeRangePickerType">
      <tag name="form.type" alias="sonata_type_datetime_range_picker"/>
    </service>
    <service id="sonata.form.validator.inline" class="Sonata\Form\Validator\InlineValidator">
      <tag name="validator.constraint_validator" alias="sonata.form.validator.inline"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="sonata.exporter.writer.csv" class="Sonata\Exporter\Writer\CsvWriter">
      <tag name="sonata.exporter.writer"/>
      <argument>php://output</argument>
      <argument>,</argument>
      <argument>"</argument>
      <argument>\</argument>
      <argument>true</argument>
      <argument>false</argument>
    </service>
    <service id="sonata.exporter.writer.json" class="Sonata\Exporter\Writer\JsonWriter">
      <tag name="sonata.exporter.writer"/>
      <argument>php://output</argument>
    </service>
    <service id="sonata.exporter.writer.xls" class="Sonata\Exporter\Writer\XlsWriter">
      <tag name="sonata.exporter.writer"/>
      <argument>php://output</argument>
      <argument>true</argument>
    </service>
    <service id="sonata.exporter.writer.xml" class="Sonata\Exporter\Writer\XmlWriter">
      <tag name="sonata.exporter.writer"/>
      <argument>php://output</argument>
      <argument>datas</argument>
      <argument>data</argument>
    </service>
    <service id="sonata.exporter.exporter" class="Sonata\Exporter\Exporter" public="true">
      <call method="addWriter">
        <argument type="service" id="sonata.exporter.writer.csv"/>
      </call>
      <call method="addWriter">
        <argument type="service" id="sonata.exporter.writer.json"/>
      </call>
      <call method="addWriter">
        <argument type="service" id="sonata.exporter.writer.xls"/>
      </call>
      <call method="addWriter">
        <argument type="service" id="sonata.exporter.writer.xml"/>
      </call>
    </service>
    <service id="sonata.doctrine.model.adapter.chain" class="Sonata\Doctrine\Adapter\AdapterChain" public="true">
      <call method="addAdapter">
        <argument type="service" id="sonata.doctrine.adapter.doctrine_orm"/>
      </call>
    </service>
    <service id="sonata.doctrine.adapter.doctrine_orm" class="Sonata\Doctrine\Adapter\ORM\DoctrineORMAdapter">
      <argument type="service" id="doctrine"/>
    </service>
    <service id="sonata.doctrine.mapper" class="Sonata\Doctrine\Mapper\ORM\DoctrineORMMapper">
      <tag name="doctrine.event_listener" event="loadClassMetadata" priority="10"/>
    </service>
    <service id="sonata.block.service.container" class="Sonata\BlockBundle\Block\Service\ContainerBlockService">
      <tag name="sonata.block"/>
      <argument type="service" id="twig"/>
    </service>
    <service id="sonata.block.service.empty" class="Sonata\BlockBundle\Block\Service\EmptyBlockService">
      <tag name="sonata.block"/>
      <argument type="service" id="twig"/>
    </service>
    <service id="sonata.block.service.text" class="Sonata\BlockBundle\Block\Service\TextBlockService">
      <tag name="sonata.block"/>
      <argument type="service" id="twig"/>
    </service>
    <service id="sonata.block.service.rss" class="Sonata\BlockBundle\Block\Service\RssBlockService">
      <tag name="sonata.block"/>
      <argument type="service" id="twig"/>
    </service>
    <service id="sonata.block.service.template" class="Sonata\BlockBundle\Block\Service\TemplateBlockService">
      <tag name="sonata.block"/>
      <argument type="service" id="twig"/>
    </service>
    <service id="sonata.block.service.menu" class="Sonata\BlockBundle\Block\Service\MenuBlockService">
      <tag name="sonata.block"/>
      <argument type="service" id="twig"/>
      <argument type="service" id="knp_menu.menu_provider.chain"/>
      <argument type="service" id="sonata.block.menu.registry"/>
    </service>
    <service id="sonata.block.form.type.block" class="Sonata\BlockBundle\Form\Type\ServiceListType">
      <tag name="form.type" alias="sonata_block_service_choice"/>
      <argument type="service" id="sonata.block.manager"/>
    </service>
    <service id="sonata.block.form.type.container_template" class="Sonata\BlockBundle\Form\Type\ContainerTemplateType">
      <tag name="form.type" alias="sonata_type_container_template_choice"/>
      <argument type="collection">
        <argument key="SonataBlockBundle default template">@SonataBlock/Block/block_container.html.twig</argument>
      </argument>
    </service>
    <service id="sonata.block.manager" class="Sonata\BlockBundle\Block\BlockServiceManager" public="true">
      <argument type="service" id=".service_locator.LzUyP7d"/>
      <argument>%sonata.block.container.types%</argument>
      <call method="add">
        <argument>sonata.block.service.container</argument>
        <argument>sonata.block.service.container</argument>
        <argument type="collection"/>
      </call>
      <call method="add">
        <argument>sonata.block.service.empty</argument>
        <argument>sonata.block.service.empty</argument>
        <argument type="collection"/>
      </call>
      <call method="add">
        <argument>sonata.block.service.text</argument>
        <argument>sonata.block.service.text</argument>
        <argument type="collection"/>
      </call>
      <call method="add">
        <argument>sonata.block.service.rss</argument>
        <argument>sonata.block.service.rss</argument>
        <argument type="collection"/>
      </call>
      <call method="add">
        <argument>sonata.block.service.template</argument>
        <argument>sonata.block.service.template</argument>
        <argument type="collection"/>
      </call>
      <call method="add">
        <argument>sonata.block.service.menu</argument>
        <argument>sonata.block.service.menu</argument>
        <argument type="collection"/>
      </call>
      <call method="add">
        <argument>sonata.admin.block.admin_list</argument>
        <argument>sonata.admin.block.admin_list</argument>
        <argument type="collection"/>
      </call>
      <call method="add">
        <argument>sonata.admin.block.search_result</argument>
        <argument>sonata.admin.block.search_result</argument>
        <argument type="collection"/>
      </call>
      <call method="add">
        <argument>sonata.admin.block.stats</argument>
        <argument>sonata.admin.block.stats</argument>
        <argument type="collection"/>
      </call>
      <call method="add">
        <argument>sonata.admin.block.admin_preview</argument>
        <argument>sonata.admin.block.admin_preview</argument>
        <argument type="collection"/>
      </call>
    </service>
    <service id="sonata.block.menu.registry" class="Sonata\BlockBundle\Menu\MenuRegistry" public="true">
      <call method="add">
        <argument>sonata_admin_sidebar</argument>
      </call>
    </service>
    <service id="sonata.block.context_manager.default" class="Sonata\BlockBundle\Block\BlockContextManager" public="true">
      <argument type="service" id="sonata.block.loader.chain"/>
      <argument type="service" id="sonata.block.manager"/>
      <argument type="service" id="monolog.logger" on-invalid="null"/>
    </service>
    <service id="sonata.block.renderer.default" class="Sonata\BlockBundle\Block\BlockRenderer" public="true">
      <argument type="service" id="sonata.block.manager"/>
      <argument type="service" id="sonata.block.exception.strategy.manager"/>
      <argument type="service" id="monolog.logger" on-invalid="null"/>
    </service>
    <service id="sonata.block.twig.extension" class="Sonata\BlockBundle\Twig\Extension\BlockExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="sonata.block.templating.helper"/>
    </service>
    <service id="sonata.block.templating.helper" class="Sonata\BlockBundle\Templating\Helper\BlockHelper">
      <tag name="twig.runtime"/>
      <argument type="service" id="sonata.block.renderer.default"/>
      <argument type="service" id="sonata.block.context_manager.default"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="debug.stopwatch" on-invalid="null"/>
    </service>
    <service id="sonata.block.loader.chain" class="Sonata\BlockBundle\Block\BlockLoaderChain">
      <argument type="collection">
        <argument type="service" id="sonata.block.loader.service"/>
      </argument>
    </service>
    <service id="sonata.block.loader.service" class="Sonata\BlockBundle\Block\Loader\ServiceLoader">
      <tag name="sonata.block.loader"/>
      <argument type="collection">
        <argument>sonata.admin.block.admin_list</argument>
        <argument>sonata.block.service.container</argument>
        <argument>sonata.block.service.empty</argument>
        <argument>sonata.block.service.text</argument>
        <argument>sonata.block.service.rss</argument>
        <argument>sonata.block.service.template</argument>
        <argument>sonata.block.service.menu</argument>
        <argument>sonata.admin.block.search_result</argument>
        <argument>sonata.admin.block.stats</argument>
        <argument>sonata.admin.block.admin_preview</argument>
      </argument>
    </service>
    <service id="sonata.block.twig.global" class="Sonata\BlockBundle\Twig\GlobalVariables">
      <argument type="collection">
        <argument key="block_base">@SonataBlock/Block/block_base.html.twig</argument>
        <argument key="block_container">@SonataBlock/Block/block_container.html.twig</argument>
      </argument>
    </service>
    <service id="sonata.block.exception.strategy.manager" class="Sonata\BlockBundle\Exception\Strategy\StrategyManager">
      <argument type="service" id="service_container"/>
      <argument type="collection">
        <argument key="debug_only">sonata.block.exception.filter.debug_only</argument>
        <argument key="ignore_block_exception">sonata.block.exception.filter.ignore_block_exception</argument>
        <argument key="keep_all">sonata.block.exception.filter.keep_all</argument>
        <argument key="keep_none">sonata.block.exception.filter.keep_none</argument>
      </argument>
      <argument type="collection">
        <argument key="inline">sonata.block.exception.renderer.inline</argument>
        <argument key="inline_debug">sonata.block.exception.renderer.inline_debug</argument>
        <argument key="throw">sonata.block.exception.renderer.throw</argument>
      </argument>
      <argument type="collection"/>
      <argument type="collection"/>
      <call method="setDefaultFilter">
        <argument>debug_only</argument>
      </call>
      <call method="setDefaultRenderer">
        <argument>throw</argument>
      </call>
    </service>
    <service id="sonata.block.exception.filter.keep_none" class="Sonata\BlockBundle\Exception\Filter\KeepNoneFilter" public="true"/>
    <service id="sonata.block.exception.filter.keep_all" class="Sonata\BlockBundle\Exception\Filter\KeepAllFilter" public="true"/>
    <service id="sonata.block.exception.filter.debug_only" class="Sonata\BlockBundle\Exception\Filter\DebugOnlyFilter" public="true">
      <argument>true</argument>
    </service>
    <service id="sonata.block.exception.filter.ignore_block_exception" class="Sonata\BlockBundle\Exception\Filter\IgnoreClassFilter" public="true">
      <argument>Sonata\BlockBundle\Exception\BlockExceptionInterface</argument>
    </service>
    <service id="sonata.block.exception.renderer.inline" class="Sonata\BlockBundle\Exception\Renderer\InlineRenderer" public="true">
      <argument type="service" id="twig"/>
      <argument>@SonataBlock/Block/block_exception.html.twig</argument>
    </service>
    <service id="sonata.block.exception.renderer.inline_debug" class="Sonata\BlockBundle\Exception\Renderer\InlineDebugRenderer" public="true">
      <argument type="service" id="twig"/>
      <argument>@SonataBlock/Block/block_exception_debug.html.twig</argument>
      <argument>true</argument>
      <argument>true</argument>
    </service>
    <service id="sonata.block.exception.renderer.throw" class="Sonata\BlockBundle\Exception\Renderer\MonkeyThrowRenderer" public="true"/>
    <service id="sonata.block.command.debug_blocks" class="Sonata\BlockBundle\Command\DebugBlocksCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="sonata.block.manager"/>
      <call method="setName">
        <argument>debug:sonata:block</argument>
      </call>
      <call method="setDescription">
        <argument>Debug all blocks available, show default settings of each block</argument>
      </call>
    </service>
    <service id="sonata.block.data_collector" class="Sonata\BlockBundle\Profiler\DataCollector\BlockDataCollector">
      <tag name="data_collector" id="block" template="@SonataBlock/Profiler/block.html.twig"/>
      <argument type="service" id="sonata.block.templating.helper"/>
      <argument type="collection">
        <argument>sonata.block.service.container</argument>
        <argument>sonata.page.block.container</argument>
        <argument>sonata.dashboard.block.container</argument>
        <argument>cmf.block.container</argument>
        <argument>cmf.block.slideshow</argument>
      </argument>
    </service>
    <service id="knp_menu.factory" class="Knp\Menu\MenuFactory" public="true">
      <call method="addExtension">
        <argument type="service" id="knp_menu.factory_extension.routing"/>
        <argument>0</argument>
      </call>
    </service>
    <service id="knp_menu.factory_extension.routing" class="Knp\Menu\Integration\Symfony\RoutingExtension">
      <tag name="knp_menu.factory_extension"/>
      <argument type="service" id="router.default"/>
    </service>
    <service id="knp_menu.helper" class="Knp\Menu\Twig\Helper">
      <argument type="service" id="knp_menu.renderer_provider"/>
      <argument type="service" id="knp_menu.menu_provider.chain"/>
      <argument type="service" id="knp_menu.manipulator"/>
      <argument type="service" id="knp_menu.matcher"/>
    </service>
    <service id="knp_menu.matcher" class="Knp\Menu\Matcher\Matcher" public="true">
      <argument type="iterator">
        <argument type="service" id="knp_menu.voter.router"/>
        <argument type="service" id="sonata.admin.menu.matcher.voter.admin"/>
        <argument type="service" id="sonata.admin.menu.matcher.voter.active"/>
      </argument>
    </service>
    <service id="knp_menu.menu_provider.chain" class="Knp\Menu\Provider\ChainProvider">
      <argument type="iterator">
        <argument type="service" id="knp_menu.menu_provider.lazy"/>
        <argument type="service" id="knp_menu.menu_provider.builder_alias"/>
        <argument type="service" id="sonata.admin.menu.group_provider"/>
      </argument>
    </service>
    <service id="knp_menu.menu_provider.lazy" class="Knp\Menu\Provider\LazyProvider">
      <tag name="knp_menu.provider"/>
      <argument type="collection">
        <argument key="sonata_admin_sidebar" type="service_closure" id="sonata.admin.sidebar_menu"/>
      </argument>
    </service>
    <service id="knp_menu.menu_provider.builder_alias" class="Knp\Bundle\MenuBundle\Provider\BuilderAliasProvider">
      <tag name="knp_menu.provider"/>
      <argument type="service" id="kernel"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="knp_menu.factory"/>
    </service>
    <service id="knp_menu.renderer_provider" class="Knp\Menu\Renderer\PsrProvider">
      <argument type="service" id=".service_locator.TWz9UQt"/>
      <argument>twig</argument>
      <argument type="collection"/>
      <argument>false</argument>
    </service>
    <service id="knp_menu.renderer.list" class="Knp\Menu\Renderer\ListRenderer">
      <tag name="knp_menu.renderer" alias="list"/>
      <argument type="service" id="knp_menu.matcher"/>
      <argument type="collection"/>
      <argument>UTF-8</argument>
    </service>
    <service id="knp_menu.voter.router" class="Knp\Menu\Matcher\Voter\RouteVoter">
      <tag name="knp_menu.voter"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="knp_menu.manipulator" class="Knp\Menu\Util\MenuManipulator"/>
    <service id="knp_menu.twig.extension" class="Knp\Menu\Twig\MenuExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="knp_menu.helper"/>
      <argument type="service" id="knp_menu.matcher"/>
      <argument type="service" id="knp_menu.manipulator"/>
    </service>
    <service id="knp_menu.renderer.twig" class="Knp\Menu\Renderer\TwigRenderer">
      <tag name="knp_menu.renderer" alias="twig"/>
      <argument type="service" id="twig"/>
      <argument>@KnpMenu/menu.html.twig</argument>
      <argument type="service" id="knp_menu.matcher"/>
      <argument type="collection"/>
    </service>
    <service id="sonata.admin.action.dashboard" class="Sonata\AdminBundle\Action\DashboardAction" public="true">
      <argument>%sonata.admin.configuration.dashboard_blocks%</argument>
      <argument type="service" id="sonata.admin.global_template_registry"/>
      <argument type="service" id="twig"/>
    </service>
    <service id="sonata.admin.action.search" class="Sonata\AdminBundle\Action\SearchAction" public="true">
      <argument type="service" id="sonata.admin.pool"/>
      <argument type="service" id="sonata.admin.global_template_registry"/>
      <argument type="service" id="twig"/>
    </service>
    <service id="sonata.admin.action.append_form_field_element" class="Sonata\AdminBundle\Action\AppendFormFieldElementAction" public="true">
      <argument type="service" id="twig"/>
      <argument type="service" id="sonata.admin.request.fetcher"/>
      <argument type="service" id="sonata.admin.helper"/>
    </service>
    <service id="sonata.admin.action.retrieve_form_field_element" class="Sonata\AdminBundle\Action\RetrieveFormFieldElementAction" public="true">
      <argument type="service" id="twig"/>
      <argument type="service" id="sonata.admin.request.fetcher"/>
      <argument type="service" id="sonata.admin.helper"/>
    </service>
    <service id="sonata.admin.action.get_short_object_description" class="Sonata\AdminBundle\Action\GetShortObjectDescriptionAction" public="true">
      <argument type="service" id="twig"/>
      <argument type="service" id="sonata.admin.request.fetcher"/>
    </service>
    <service id="sonata.admin.action.set_object_field_value" class="Sonata\AdminBundle\Action\SetObjectFieldValueAction" public="true">
      <argument type="service" id="twig"/>
      <argument type="service" id="sonata.admin.request.fetcher"/>
      <argument type="service" id="debug.validator"/>
      <argument type="service" id="sonata.admin.form.data_transformer_resolver"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="sonata.admin.twig.render_element_runtime"/>
    </service>
    <service id="sonata.admin.action.retrieve_autocomplete_items" class="Sonata\AdminBundle\Action\RetrieveAutocompleteItemsAction" public="true">
      <argument type="service" id="sonata.admin.request.fetcher"/>
    </service>
    <service id="sonata.admin.block.admin_list" class="Sonata\AdminBundle\Block\AdminListBlockService" public="true">
      <tag name="sonata.block"/>
      <argument type="service" id="twig"/>
      <argument type="service" id="sonata.admin.pool"/>
      <argument type="service" id="sonata.admin.global_template_registry"/>
    </service>
    <service id="sonata.admin.block.search_result" class="Sonata\AdminBundle\Block\AdminSearchBlockService" public="true">
      <tag name="sonata.block"/>
      <argument type="service" id="twig"/>
      <argument type="service" id="sonata.admin.pool"/>
      <argument type="service" id="sonata.admin.search.handler"/>
      <argument type="service" id="sonata.admin.global_template_registry"/>
      <argument>show</argument>
      <argument>show</argument>
    </service>
    <service id="sonata.admin.block.stats" class="Sonata\AdminBundle\Block\AdminStatsBlockService" public="true">
      <tag name="sonata.block"/>
      <argument type="service" id="twig"/>
      <argument type="service" id="sonata.admin.pool"/>
    </service>
    <service id="sonata.admin.block.admin_preview" class="Sonata\AdminBundle\Block\AdminPreviewBlockService" public="true">
      <tag name="sonata.block"/>
      <argument type="service" id="twig"/>
      <argument type="service" id="sonata.admin.pool"/>
    </service>
    <service id="sonata.admin.command.explain" class="Sonata\AdminBundle\Command\ExplainAdminCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="sonata.admin.pool"/>
      <call method="setName">
        <argument>sonata:admin:explain</argument>
      </call>
      <call method="setDescription">
        <argument>Explain an admin service</argument>
      </call>
    </service>
    <service id="sonata.admin.command.generate_object_acl" class="Sonata\AdminBundle\Command\GenerateObjectAclCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="sonata.admin.pool"/>
      <argument type="collection">
        <argument key="sonata.admin.manipulator.acl.object.orm" type="service">
          <service class="Sonata\DoctrineORMAdminBundle\Util\ObjectAclManipulator" public="true">
            <argument type="service" id="doctrine"/>
          </service>
        </argument>
      </argument>
      <call method="setName">
        <argument>sonata:admin:generate-object-acl</argument>
      </call>
      <call method="setDescription">
        <argument>Install ACL for the objects of the Admin Classes.</argument>
      </call>
    </service>
    <service id="sonata.admin.command.list" class="Sonata\AdminBundle\Command\ListAdminCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="sonata.admin.pool"/>
      <call method="setName">
        <argument>sonata:admin:list</argument>
      </call>
      <call method="setDescription">
        <argument>List all admin services available</argument>
      </call>
    </service>
    <service id="sonata.admin.command.setup_acl" class="Sonata\AdminBundle\Command\SetupAclCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="sonata.admin.pool"/>
      <argument type="service" id="sonata.admin.manipulator.acl.admin"/>
      <call method="setName">
        <argument>sonata:admin:setup-acl</argument>
      </call>
      <call method="setDescription">
        <argument>Install ACL for Admin Classes</argument>
      </call>
    </service>
    <service id="sonata.admin.pool" class="Sonata\AdminBundle\Admin\Pool">
      <argument type="service" id=".service_locator.X2jl40p"/>
      <argument type="collection">
        <argument>admin.callback</argument>
        <argument>admin.invoice</argument>
      </argument>
      <argument type="collection">
        <argument key="default" type="collection">
          <argument key="label">default</argument>
          <argument key="translation_domain">SonataAdminBundle</argument>
          <argument key="label_catalogue">SonataAdminBundle</argument>
          <argument key="icon">fas fa-folder</argument>
          <argument key="items" type="collection">
            <argument type="collection">
              <argument key="admin">admin.callback</argument>
              <argument key="label">Callback</argument>
              <argument key="route"></argument>
              <argument key="route_params" type="collection"/>
              <argument key="route_absolute">false</argument>
              <argument key="priority">0</argument>
            </argument>
            <argument type="collection">
              <argument key="admin">admin.invoice</argument>
              <argument key="label">Invoice</argument>
              <argument key="route"></argument>
              <argument key="route_params" type="collection"/>
              <argument key="route_absolute">false</argument>
              <argument key="priority">0</argument>
            </argument>
          </argument>
          <argument key="roles" type="collection"/>
          <argument key="on_top">false</argument>
          <argument key="keep_open">false</argument>
          <argument key="priority">0</argument>
        </argument>
      </argument>
      <argument type="collection">
        <argument key="App\Entity\Callback" type="collection">
          <argument>admin.callback</argument>
        </argument>
        <argument key="App\Entity\Invoice" type="collection">
          <argument>admin.invoice</argument>
        </argument>
      </argument>
    </service>
    <service id="sonata.admin.configuration" class="Sonata\AdminBundle\SonataConfiguration">
      <argument>Sonata Admin</argument>
      <argument>bundles/sonataadmin/images/logo_title.png</argument>
      <argument type="collection">
        <argument key="html5_validate">true</argument>
        <argument key="sort_admins">false</argument>
        <argument key="confirm_exit">true</argument>
        <argument key="js_debug">false</argument>
        <argument key="skin">skin-black</argument>
        <argument key="use_select2">true</argument>
        <argument key="use_icheck">true</argument>
        <argument key="use_bootlint">false</argument>
        <argument key="use_stickyforms">true</argument>
        <argument key="pager_links">null</argument>
        <argument key="form_type">standard</argument>
        <argument key="default_admin_route">show</argument>
        <argument key="default_group">default</argument>
        <argument key="default_label_catalogue">SonataAdminBundle</argument>
        <argument key="default_translation_domain">null</argument>
        <argument key="default_icon">fas fa-folder</argument>
        <argument key="dropdown_number_groups_per_colums">2</argument>
        <argument key="logo_content">all</argument>
        <argument key="list_action_button_content">all</argument>
        <argument key="lock_protection">false</argument>
        <argument key="mosaic_background">bundles/sonataadmin/images/default_mosaic_image.png</argument>
        <argument key="javascripts" type="collection">
          <argument>bundles/sonataadmin/app.js</argument>
          <argument>bundles/sonataform/app.js</argument>
        </argument>
        <argument key="stylesheets" type="collection">
          <argument>bundles/sonataadmin/app.css</argument>
          <argument>bundles/sonataform/app.css</argument>
          <argument>bundles/sonataadmin/admin-lte-skins/skin-black.min.css</argument>
        </argument>
        <argument key="role_admin">ROLE_SONATA_ADMIN</argument>
        <argument key="role_super_admin">ROLE_SUPER_ADMIN</argument>
        <argument key="search">true</argument>
      </argument>
    </service>
    <service id="sonata.admin.route_loader" class="Sonata\AdminBundle\Route\AdminPoolLoader">
      <tag name="routing.loader"/>
      <argument type="service" id="sonata.admin.pool"/>
    </service>
    <service id="sonata.admin.helper" class="Sonata\AdminBundle\Admin\AdminHelper">
      <argument type="service" id="property_accessor"/>
    </service>
    <service id="sonata.admin.builder.filter.factory" class="Sonata\AdminBundle\Filter\FilterFactory">
      <argument type="service" id=".service_locator.ejIbxXf"/>
    </service>
    <service id="sonata.admin.breadcrumbs_builder" class="Sonata\AdminBundle\Admin\BreadcrumbsBuilder">
      <argument>%sonata.admin.configuration.breadcrumbs%</argument>
    </service>
    <service id="sonata.admin.label.strategy.bc" class="Sonata\AdminBundle\Translator\BCLabelTranslatorStrategy"/>
    <service id="sonata.admin.label.strategy.native" class="Sonata\AdminBundle\Translator\NativeLabelTranslatorStrategy"/>
    <service id="sonata.admin.label.strategy.noop" class="Sonata\AdminBundle\Translator\NoopLabelTranslatorStrategy"/>
    <service id="sonata.admin.label.strategy.underscore" class="Sonata\AdminBundle\Translator\UnderscoreLabelTranslatorStrategy"/>
    <service id="sonata.admin.label.strategy.form_component" class="Sonata\AdminBundle\Translator\FormLabelTranslatorStrategy"/>
    <service id="sonata.admin.translation_extractor" class="Sonata\AdminBundle\Translator\Extractor\AdminExtractor">
      <tag name="translation.extractor" alias="sonata_admin"/>
      <argument type="service" id="sonata.admin.pool"/>
      <argument type="service" id="sonata.admin.breadcrumbs_builder"/>
    </service>
    <service id="sonata.admin.audit.manager" class="Sonata\AdminBundle\Model\AuditManager">
      <argument type="service" id=".service_locator.Xbsa8iG"/>
    </service>
    <service id="sonata.admin.search.handler" class="Sonata\AdminBundle\Search\SearchHandler">
      <call method="configureAdminSearch">
        <argument type="collection"/>
      </call>
    </service>
    <service id="sonata.admin.controller.crud" class="Sonata\AdminBundle\Controller\CRUDController" public="true">
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.2e6LmLI.sonata.admin.controller.crud"/>
      </call>
    </service>
    <service id="sonata.admin.event.extension" class="Sonata\AdminBundle\Event\AdminEventExtension">
      <tag name="sonata.admin.extension" global="1"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="sonata.admin.filter_persister.session" class="Sonata\AdminBundle\Filter\Persister\SessionFilterPersister">
      <argument type="service" id="request_stack"/>
    </service>
    <service id="sonata.admin.global_template_registry" class="Sonata\AdminBundle\Templating\TemplateRegistry">
      <argument>%sonata.admin.configuration.templates%</argument>
    </service>
    <service id="sonata.admin.request.fetcher" class="Sonata\AdminBundle\Request\AdminFetcher">
      <argument type="service" id="sonata.admin.pool"/>
    </service>
    <service id="sonata.admin.argument_resolver.admin" class="Sonata\AdminBundle\ArgumentResolver\AdminValueResolver">
      <tag name="controller.argument_value_resolver"/>
      <argument type="service" id="sonata.admin.request.fetcher"/>
    </service>
    <service id="sonata.admin.argument_resolver.proxy_query" class="Sonata\AdminBundle\ArgumentResolver\ProxyQueryResolver">
      <tag name="controller.argument_value_resolver"/>
    </service>
    <service id="sonata.admin.event_listener.configure_crud_controller" class="Sonata\AdminBundle\EventListener\ConfigureCRUDControllerListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="sonata.admin.form.type.admin" class="Sonata\AdminBundle\Form\Type\AdminType">
      <tag name="form.type" alias="sonata_type_admin"/>
      <argument type="service" id="sonata.admin.helper"/>
    </service>
    <service id="sonata.admin.form.type.model_choice" class="Sonata\AdminBundle\Form\Type\ModelType">
      <tag name="form.type" alias="sonata_type_model"/>
      <argument type="service" id="property_accessor"/>
    </service>
    <service id="sonata.admin.form.type.model_list" class="Sonata\AdminBundle\Form\Type\ModelListType">
      <tag name="form.type" alias="sonata_type_model_list"/>
    </service>
    <service id="sonata.admin.form.type.model_reference" class="Sonata\AdminBundle\Form\Type\ModelReferenceType">
      <tag name="form.type" alias="sonata_type_model_reference"/>
    </service>
    <service id="sonata.admin.form.type.model_hidden" class="Sonata\AdminBundle\Form\Type\ModelHiddenType">
      <tag name="form.type" alias="sonata_type_model_hidden"/>
    </service>
    <service id="sonata.admin.form.type.model_autocomplete" class="Sonata\AdminBundle\Form\Type\ModelAutocompleteType">
      <tag name="form.type" alias="sonata_type_model_autocomplete"/>
    </service>
    <service id="sonata.admin.form.type.collection" class="Sonata\AdminBundle\Form\Type\CollectionType">
      <tag name="form.type" alias="sonata_type_native_collection"/>
    </service>
    <service id="sonata.admin.doctrine_orm.form.type.choice_field_mask" class="Sonata\AdminBundle\Form\Type\ChoiceFieldMaskType">
      <tag name="form.type" alias="sonata_type_choice_field_mask"/>
    </service>
    <service id="sonata.admin.form.extension.field" class="Sonata\AdminBundle\Form\Extension\Field\Type\FormTypeFieldExtension">
      <tag name="form.type_extension" alias="form" extended_type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
      <argument type="collection">
        <argument key="Symfony\Component\Form\Extension\Core\Type\ChoiceType"></argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\DateType">sonata-medium-date</argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\DateTimeType">sonata-medium-date</argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\EmailType"></argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\IntegerType"></argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\TextareaType"></argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\TextType"></argument>
      </argument>
      <argument type="collection">
        <argument key="html5_validate">true</argument>
        <argument key="sort_admins">false</argument>
        <argument key="confirm_exit">true</argument>
        <argument key="js_debug">false</argument>
        <argument key="skin">skin-black</argument>
        <argument key="use_select2">true</argument>
        <argument key="use_icheck">true</argument>
        <argument key="use_bootlint">false</argument>
        <argument key="use_stickyforms">true</argument>
        <argument key="pager_links">null</argument>
        <argument key="form_type">standard</argument>
        <argument key="default_admin_route">show</argument>
        <argument key="default_group">default</argument>
        <argument key="default_label_catalogue">SonataAdminBundle</argument>
        <argument key="default_translation_domain">null</argument>
        <argument key="default_icon">fas fa-folder</argument>
        <argument key="dropdown_number_groups_per_colums">2</argument>
        <argument key="logo_content">all</argument>
        <argument key="list_action_button_content">all</argument>
        <argument key="lock_protection">false</argument>
        <argument key="mosaic_background">bundles/sonataadmin/images/default_mosaic_image.png</argument>
        <argument key="javascripts" type="collection">
          <argument>bundles/sonataadmin/app.js</argument>
          <argument>bundles/sonataform/app.js</argument>
        </argument>
        <argument key="stylesheets" type="collection">
          <argument>bundles/sonataadmin/app.css</argument>
          <argument>bundles/sonataform/app.css</argument>
          <argument>bundles/sonataadmin/admin-lte-skins/skin-black.min.css</argument>
        </argument>
        <argument key="role_admin">ROLE_SONATA_ADMIN</argument>
        <argument key="role_super_admin">ROLE_SUPER_ADMIN</argument>
        <argument key="search">true</argument>
      </argument>
    </service>
    <service id="sonata.admin.form.extension.field.mopa" class="Sonata\AdminBundle\Form\Extension\Field\Type\MopaCompatibilityTypeFieldExtension">
      <tag name="form.type_extension" alias="form" extended_type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
    </service>
    <service id="sonata.admin.form.extension.choice" class="Sonata\AdminBundle\Form\Extension\ChoiceTypeExtension">
      <tag name="form.type_extension" alias="choice" extended_type="Symfony\Component\Form\Extension\Core\Type\ChoiceType"/>
    </service>
    <service id="sonata.admin.form.filter.type.number" class="Sonata\AdminBundle\Form\Type\Filter\NumberType">
      <tag name="form.type" alias="sonata_type_filter_number"/>
    </service>
    <service id="sonata.admin.form.filter.type.choice" class="Sonata\AdminBundle\Form\Type\Filter\ChoiceType">
      <tag name="form.type" alias="sonata_type_filter_choice"/>
    </service>
    <service id="sonata.admin.form.filter.type.default" class="Sonata\AdminBundle\Form\Type\Filter\DefaultType">
      <tag name="form.type" alias="sonata_type_filter_default"/>
    </service>
    <service id="sonata.admin.form.filter.type.date" class="Sonata\AdminBundle\Form\Type\Filter\DateType">
      <tag name="form.type" alias="sonata_type_filter_date"/>
    </service>
    <service id="sonata.admin.form.filter.type.daterange" class="Sonata\AdminBundle\Form\Type\Filter\DateRangeType">
      <tag name="form.type" alias="sonata_type_filter_date_range"/>
    </service>
    <service id="sonata.admin.form.filter.type.datetime" class="Sonata\AdminBundle\Form\Type\Filter\DateTimeType">
      <tag name="form.type" alias="sonata_type_filter_datetime"/>
    </service>
    <service id="sonata.admin.form.filter.type.datetime_range" class="Sonata\AdminBundle\Form\Type\Filter\DateTimeRangeType">
      <tag name="form.type" alias="sonata_type_filter_datetime_range"/>
    </service>
    <service id="sonata.admin.form.data_transformer.boolean_to_string" class="Sonata\AdminBundle\Form\DataTransformer\BooleanToStringTransformer">
      <argument>1</argument>
    </service>
    <service id="sonata.admin.form.data_transformer_resolver" class="Sonata\AdminBundle\Form\DataTransformerResolver">
      <call method="addCustomGlobalTransformer">
        <argument>boolean</argument>
        <argument type="service" id="sonata.admin.form.data_transformer.boolean_to_string"/>
      </call>
    </service>
    <service id="sonata.admin.menu_builder" class="Sonata\AdminBundle\Menu\MenuBuilder">
      <argument type="service" id="sonata.admin.pool"/>
      <argument type="service" id="knp_menu.factory"/>
      <argument type="service" id="knp_menu.menu_provider.chain"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="sonata.admin.sidebar_menu" class="Knp\Menu\MenuItem" shared="false">
      <tag name="knp_menu.menu" alias="sonata_admin_sidebar"/>
      <factory service="sonata.admin.menu_builder" method="createSidebarMenu"/>
    </service>
    <service id="sonata.admin.menu.group_provider" class="Sonata\AdminBundle\Menu\Provider\GroupMenuProvider">
      <tag name="knp_menu.provider"/>
      <argument type="service" id="knp_menu.factory"/>
      <argument type="service" id="sonata.admin.pool"/>
      <argument type="service" id="security.authorization_checker"/>
    </service>
    <service id="sonata.admin.menu.matcher.voter.admin" class="Sonata\AdminBundle\Menu\Matcher\Voter\AdminVoter">
      <tag name="knp_menu.voter"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="sonata.admin.menu.matcher.voter.active" class="Sonata\AdminBundle\Menu\Matcher\Voter\ActiveVoter">
      <tag name="knp_menu.voter"/>
    </service>
    <service id="sonata.admin.route.path_info" class="Sonata\AdminBundle\Route\PathInfoBuilder">
      <argument type="service" id="sonata.admin.audit.manager"/>
    </service>
    <service id="sonata.admin.route.default_generator" class="Sonata\AdminBundle\Route\DefaultRouteGenerator">
      <argument type="service" id="router.default"/>
      <argument type="service" id="sonata.admin.route.cache"/>
    </service>
    <service id="sonata.admin.route.cache" class="Sonata\AdminBundle\Route\RoutesCache">
      <argument>/var/www/project/var/cache/test/sonata/admin</argument>
      <argument>true</argument>
    </service>
    <service id="sonata.admin.route.cache_warmup" class="Sonata\AdminBundle\Route\RoutesCacheWarmUp">
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id="sonata.admin.route.cache"/>
      <argument type="service" id="sonata.admin.pool"/>
    </service>
    <service id="sonata.admin.twig.sonata_admin_extension" class="Sonata\AdminBundle\Twig\Extension\SonataAdminExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="sonata.admin.twig.sonata_admin_runtime"/>
    </service>
    <service id="sonata.admin.twig.sonata_admin_runtime" class="Sonata\AdminBundle\Twig\SonataAdminRuntime">
      <tag name="twig.runtime"/>
      <argument type="service" id="sonata.admin.pool"/>
    </service>
    <service id="sonata.admin.twig.template_registry_extension" class="Sonata\AdminBundle\Twig\Extension\TemplateRegistryExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="sonata.admin.twig.template_registry_runtime"/>
    </service>
    <service id="sonata.admin.twig.template_registry_runtime" class="Sonata\AdminBundle\Twig\TemplateRegistryRuntime">
      <tag name="twig.runtime"/>
      <argument type="service" id="sonata.admin.global_template_registry"/>
      <argument type="service" id="sonata.admin.pool"/>
    </service>
    <service id="sonata.admin.twig.group_extension" class="Sonata\AdminBundle\Twig\Extension\GroupExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="sonata.admin.twig.group_runtime"/>
    </service>
    <service id="sonata.admin.twig.group_runtime" class="Sonata\AdminBundle\Twig\GroupRuntime">
      <tag name="twig.runtime"/>
      <argument type="service" id="sonata.admin.pool"/>
    </service>
    <service id="sonata.admin.twig.icon_extension" class="Sonata\AdminBundle\Twig\Extension\IconExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="sonata.admin.twig.icon_runtime"/>
    </service>
    <service id="sonata.admin.twig.icon_runtime" class="Sonata\AdminBundle\Twig\IconRuntime">
      <tag name="twig.runtime"/>
    </service>
    <service id="sonata.admin.twig.security_extension" class="Sonata\AdminBundle\Twig\Extension\SecurityExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="sonata.admin.twig.security_runtime"/>
    </service>
    <service id="sonata.admin.twig.security_runtime" class="Sonata\AdminBundle\Twig\SecurityRuntime">
      <tag name="twig.runtime"/>
      <argument type="service" id="security.authorization_checker"/>
    </service>
    <service id="sonata.admin.twig.canonicalize_extension" class="Sonata\AdminBundle\Twig\Extension\CanonicalizeExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="sonata.admin.twig.canonicalize_runtime"/>
    </service>
    <service id="sonata.admin.twig.canonicalize_runtime" class="Sonata\AdminBundle\Twig\CanonicalizeRuntime">
      <tag name="twig.runtime"/>
      <argument type="service" id="request_stack"/>
      <argument>null</argument>
    </service>
    <service id="sonata.admin.twig.xeditable_extension" class="Sonata\AdminBundle\Twig\Extension\XEditableExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="sonata.admin.twig.xeditable_runtime"/>
    </service>
    <service id="sonata.admin.twig.xeditable_runtime" class="Sonata\AdminBundle\Twig\XEditableRuntime">
      <tag name="twig.runtime"/>
      <argument type="service" id="translator.data_collector"/>
      <argument>%sonata.admin.twig.extension.x_editable_type_mapping%</argument>
    </service>
    <service id="sonata.admin.twig.render_element_extension" class="Sonata\AdminBundle\Twig\Extension\RenderElementExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="sonata.admin.twig.render_element_runtime"/>
    </service>
    <service id="sonata.admin.twig.render_element_runtime" class="Sonata\AdminBundle\Twig\RenderElementRuntime">
      <tag name="twig.runtime"/>
      <argument type="service" id="property_accessor"/>
    </service>
    <service id="sonata.admin.twig.breadcrumbs_extension" class="Sonata\AdminBundle\Twig\Extension\BreadcrumbsExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="sonata.admin.twig.breadcrumbs_runtime"/>
    </service>
    <service id="sonata.admin.twig.breadcrumbs_runtime" class="Sonata\AdminBundle\Twig\BreadcrumbsRuntime">
      <tag name="twig.runtime"/>
      <argument type="service" id="sonata.admin.breadcrumbs_builder"/>
    </service>
    <service id="sonata.admin.admin_exporter" class="Sonata\AdminBundle\Bridge\Exporter\AdminExporter">
      <argument type="service" id="sonata.exporter.exporter"/>
    </service>
    <service id="sonata.admin.security.handler.noop" class="Sonata\AdminBundle\Security\Handler\NoopSecurityHandler"/>
    <service id="sonata.admin.security.handler.role" class="Sonata\AdminBundle\Security\Handler\RoleSecurityHandler">
      <argument type="service" id="security.authorization_checker"/>
      <argument>ROLE_SUPER_ADMIN</argument>
    </service>
    <service id="sonata.admin.security.handler.acl" class="Sonata\AdminBundle\Security\Handler\AclSecurityHandler">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authorization_checker"/>
      <argument>null</argument>
      <argument>Sonata\AdminBundle\Security\Acl\Permission\MaskBuilder</argument>
      <argument>ROLE_SUPER_ADMIN</argument>
      <call method="setAdminPermissions">
        <argument>%sonata.admin.configuration.security.admin_permissions%</argument>
      </call>
      <call method="setObjectPermissions">
        <argument>%sonata.admin.configuration.security.object_permissions%</argument>
      </call>
    </service>
    <service id="sonata.admin.manipulator.acl.admin" class="Sonata\AdminBundle\Util\AdminAclManipulator">
      <argument>Sonata\AdminBundle\Security\Acl\Permission\MaskBuilder</argument>
    </service>
    <service id="sonata.admin.object.manipulator.acl.admin" class="Sonata\AdminBundle\Util\AdminObjectAclManipulator">
      <argument type="service" id="form.factory"/>
      <argument>Sonata\AdminBundle\Security\Acl\Permission\MaskBuilder</argument>
    </service>
    <service id="sonata.admin.entity_manager" class="Doctrine\ORM\EntityManager">
      <argument>null</argument>
      <factory service="doctrine" method="getManager"/>
    </service>
    <service id="sonata.admin.manager.orm" class="Sonata\DoctrineORMAdminBundle\Model\ModelManager" public="true">
      <tag name="sonata.admin.manager"/>
      <argument type="service" id="doctrine"/>
      <argument type="service" id="property_accessor"/>
    </service>
    <service id="sonata.admin.builder.orm_form" class="Sonata\DoctrineORMAdminBundle\Builder\FormContractor">
      <argument type="service" id="form.factory"/>
      <argument type="service" id="form.registry"/>
    </service>
    <service id="sonata.admin.builder.orm_list" class="Sonata\DoctrineORMAdminBundle\Builder\ListBuilder">
      <argument type="service" id="sonata.admin.guesser.orm_list_chain"/>
      <argument type="collection">
        <argument key="array">@SonataAdmin/CRUD/list_array.html.twig</argument>
        <argument key="boolean">@SonataAdmin/CRUD/list_boolean.html.twig</argument>
        <argument key="date">@SonataAdmin/CRUD/list_date.html.twig</argument>
        <argument key="time">@SonataAdmin/CRUD/list_time.html.twig</argument>
        <argument key="datetime">@SonataAdmin/CRUD/list_datetime.html.twig</argument>
        <argument key="textarea">@SonataAdmin/CRUD/list_string.html.twig</argument>
        <argument key="email">@SonataAdmin/CRUD/list_email.html.twig</argument>
        <argument key="enum">@SonataAdmin/CRUD/list_enum.html.twig</argument>
        <argument key="trans">@SonataAdmin/CRUD/list_trans.html.twig</argument>
        <argument key="string">@SonataAdmin/CRUD/list_string.html.twig</argument>
        <argument key="integer">@SonataAdmin/CRUD/list_string.html.twig</argument>
        <argument key="float">@SonataAdmin/CRUD/list_string.html.twig</argument>
        <argument key="identifier">@SonataAdmin/CRUD/list_string.html.twig</argument>
        <argument key="currency">@SonataAdmin/CRUD/list_currency.html.twig</argument>
        <argument key="percent">@SonataAdmin/CRUD/list_percent.html.twig</argument>
        <argument key="choice">@SonataAdmin/CRUD/list_choice.html.twig</argument>
        <argument key="url">@SonataAdmin/CRUD/list_url.html.twig</argument>
        <argument key="html">@SonataAdmin/CRUD/list_html.html.twig</argument>
        <argument key="many_to_many">@SonataAdmin/CRUD/Association/list_many_to_many.html.twig</argument>
        <argument key="many_to_one">@SonataAdmin/CRUD/Association/list_many_to_one.html.twig</argument>
        <argument key="one_to_many">@SonataAdmin/CRUD/Association/list_one_to_many.html.twig</argument>
        <argument key="one_to_one">@SonataAdmin/CRUD/Association/list_one_to_one.html.twig</argument>
      </argument>
    </service>
    <service id="sonata.admin.guesser.orm_list" class="Sonata\DoctrineORMAdminBundle\FieldDescription\TypeGuesser">
      <tag name="sonata.admin.guesser.orm_list"/>
    </service>
    <service id="sonata.admin.guesser.orm_list_chain" class="Sonata\AdminBundle\FieldDescription\TypeGuesserChain">
      <argument type="collection">
        <argument type="service" id="sonata.admin.guesser.orm_list"/>
      </argument>
    </service>
    <service id="sonata.admin.builder.orm_show" class="Sonata\DoctrineORMAdminBundle\Builder\ShowBuilder">
      <argument type="service" id="sonata.admin.guesser.orm_show_chain"/>
      <argument type="collection">
        <argument key="array">@SonataAdmin/CRUD/show_array.html.twig</argument>
        <argument key="boolean">@SonataAdmin/CRUD/show_boolean.html.twig</argument>
        <argument key="date">@SonataAdmin/CRUD/show_date.html.twig</argument>
        <argument key="time">@SonataAdmin/CRUD/show_time.html.twig</argument>
        <argument key="datetime">@SonataAdmin/CRUD/show_datetime.html.twig</argument>
        <argument key="email">@SonataAdmin/CRUD/show_email.html.twig</argument>
        <argument key="enum">@SonataAdmin/CRUD/show_enum.html.twig</argument>
        <argument key="trans">@SonataAdmin/CRUD/show_trans.html.twig</argument>
        <argument key="string">@SonataAdmin/CRUD/base_show_field.html.twig</argument>
        <argument key="integer">@SonataAdmin/CRUD/base_show_field.html.twig</argument>
        <argument key="float">@SonataAdmin/CRUD/base_show_field.html.twig</argument>
        <argument key="currency">@SonataAdmin/CRUD/show_currency.html.twig</argument>
        <argument key="percent">@SonataAdmin/CRUD/show_percent.html.twig</argument>
        <argument key="choice">@SonataAdmin/CRUD/show_choice.html.twig</argument>
        <argument key="url">@SonataAdmin/CRUD/show_url.html.twig</argument>
        <argument key="html">@SonataAdmin/CRUD/show_html.html.twig</argument>
        <argument key="many_to_many">@SonataAdmin/CRUD/Association/show_many_to_many.html.twig</argument>
        <argument key="many_to_one">@SonataAdmin/CRUD/Association/show_many_to_one.html.twig</argument>
        <argument key="one_to_many">@SonataAdmin/CRUD/Association/show_one_to_many.html.twig</argument>
        <argument key="one_to_one">@SonataAdmin/CRUD/Association/show_one_to_one.html.twig</argument>
      </argument>
    </service>
    <service id="sonata.admin.guesser.orm_show" class="Sonata\DoctrineORMAdminBundle\FieldDescription\TypeGuesser">
      <tag name="sonata.admin.guesser.orm_show"/>
    </service>
    <service id="sonata.admin.guesser.orm_show_chain" class="Sonata\AdminBundle\FieldDescription\TypeGuesserChain">
      <argument type="collection">
        <argument type="service" id="sonata.admin.guesser.orm_show"/>
      </argument>
    </service>
    <service id="sonata.admin.builder.orm_datagrid" class="Sonata\DoctrineORMAdminBundle\Builder\DatagridBuilder">
      <argument type="service" id="form.factory"/>
      <argument type="service" id="sonata.admin.builder.filter.factory"/>
      <argument type="service" id="sonata.admin.guesser.orm_datagrid_chain"/>
      <argument>true</argument>
    </service>
    <service id="sonata.admin.guesser.orm_datagrid" class="Sonata\DoctrineORMAdminBundle\FieldDescription\FilterTypeGuesser">
      <tag name="sonata.admin.guesser.orm_datagrid"/>
    </service>
    <service id="sonata.admin.guesser.orm_datagrid_chain" class="Sonata\AdminBundle\FieldDescription\TypeGuesserChain">
      <argument type="collection">
        <argument type="service" id="sonata.admin.guesser.orm_datagrid"/>
      </argument>
    </service>
    <service id="sonata.admin.data_source.orm" class="Sonata\DoctrineORMAdminBundle\Exporter\DataSource"/>
    <service id="sonata.admin.field_description_factory.orm" class="Sonata\DoctrineORMAdminBundle\FieldDescription\FieldDescriptionFactory">
      <argument type="service" id="doctrine"/>
    </service>
    <service id="sonata.admin.orm.filter.type.boolean" class="Sonata\DoctrineORMAdminBundle\Filter\BooleanFilter" shared="false">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_boolean"/>
    </service>
    <service id="sonata.admin.orm.filter.type.callback" class="Sonata\DoctrineORMAdminBundle\Filter\CallbackFilter" shared="false">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_callback"/>
    </service>
    <service id="sonata.admin.orm.filter.type.choice" class="Sonata\DoctrineORMAdminBundle\Filter\ChoiceFilter" shared="false">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_choice"/>
    </service>
    <service id="sonata.admin.orm.filter.type.class" class="Sonata\DoctrineORMAdminBundle\Filter\ClassFilter" shared="false">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_class"/>
    </service>
    <service id="sonata.admin.orm.filter.type.count" class="Sonata\DoctrineORMAdminBundle\Filter\CountFilter" shared="false">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_count"/>
    </service>
    <service id="sonata.admin.orm.filter.type.date" class="Sonata\DoctrineORMAdminBundle\Filter\DateFilter" shared="false">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_date"/>
    </service>
    <service id="sonata.admin.orm.filter.type.date_range" class="Sonata\DoctrineORMAdminBundle\Filter\DateRangeFilter" shared="false">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_date_range"/>
    </service>
    <service id="sonata.admin.orm.filter.type.datetime" class="Sonata\DoctrineORMAdminBundle\Filter\DateTimeFilter" shared="false">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_datetime"/>
    </service>
    <service id="sonata.admin.orm.filter.type.datetime_range" class="Sonata\DoctrineORMAdminBundle\Filter\DateTimeRangeFilter" shared="false">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_datetime_range"/>
    </service>
    <service id="sonata.admin.orm.filter.type.empty" class="Sonata\DoctrineORMAdminBundle\Filter\EmptyFilter" shared="false">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_empty"/>
    </service>
    <service id="sonata.admin.orm.filter.type.model" class="Sonata\DoctrineORMAdminBundle\Filter\ModelFilter" shared="false">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_model"/>
    </service>
    <service id="sonata.admin.orm.filter.type.null" class="Sonata\DoctrineORMAdminBundle\Filter\NullFilter" shared="false">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_null"/>
    </service>
    <service id="sonata.admin.orm.filter.type.number" class="Sonata\DoctrineORMAdminBundle\Filter\NumberFilter" shared="false">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_number"/>
    </service>
    <service id="sonata.admin.orm.filter.type.string" class="Sonata\DoctrineORMAdminBundle\Filter\StringFilter" shared="false">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_string"/>
    </service>
    <service id="sonata.admin.orm.filter.type.string_list" class="Sonata\DoctrineORMAdminBundle\Filter\StringListFilter" shared="false">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_string_list"/>
    </service>
    <service id="sonata.admin.orm.filter.type.time" class="Sonata\DoctrineORMAdminBundle\Filter\TimeFilter" shared="false">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_time"/>
    </service>
    <service id="sonata.admin.orm.filter.type.uid" class="Sonata\DoctrineORMAdminBundle\Filter\UidFilter" shared="false">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_uid"/>
    </service>
    <service id="sonata.admin.orm.filter.type.model_autocomplete" class="Sonata\DoctrineORMAdminBundle\Filter\ModelAutocompleteFilter" shared="false">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_model_autocomplete"/>
    </service>
    <service id="sonata.admin.manipulator.acl.object.orm" class="Sonata\DoctrineORMAdminBundle\Util\ObjectAclManipulator" public="true">
      <argument type="service" id="doctrine"/>
    </service>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\CallbackController" class="App\Controller\CallbackController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\CallbackController" class="App\Controller\CallbackController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\CallbackController" class="App\Controller\CallbackController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\InvoiceController" class="App\Controller\InvoiceController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\InvoiceController" class="App\Controller\InvoiceController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\InvoiceController" class="App\Controller\InvoiceController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\CallbackRepository" class="App\Repository\CallbackRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\CallbackRepository" class="App\Repository\CallbackRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\InvoiceRepository" class="App\Repository\InvoiceRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\InvoiceRepository" class="App\Repository\InvoiceRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".service_locator.w7.f4fT" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="base64" type="service_closure" id="container.env_var_processor"/>
        <argument key="bool" type="service_closure" id="container.env_var_processor"/>
        <argument key="const" type="service_closure" id="container.env_var_processor"/>
        <argument key="csv" type="service_closure" id="container.env_var_processor"/>
        <argument key="default" type="service_closure" id="container.env_var_processor"/>
        <argument key="defined" type="service_closure" id="container.env_var_processor"/>
        <argument key="enum" type="service_closure" id="container.env_var_processor"/>
        <argument key="file" type="service_closure" id="container.env_var_processor"/>
        <argument key="float" type="service_closure" id="container.env_var_processor"/>
        <argument key="int" type="service_closure" id="container.env_var_processor"/>
        <argument key="json" type="service_closure" id="container.env_var_processor"/>
        <argument key="key" type="service_closure" id="container.env_var_processor"/>
        <argument key="not" type="service_closure" id="container.env_var_processor"/>
        <argument key="query_string" type="service_closure" id="container.env_var_processor"/>
        <argument key="require" type="service_closure" id="container.env_var_processor"/>
        <argument key="resolve" type="service_closure" id="container.env_var_processor"/>
        <argument key="shuffle" type="service_closure" id="container.env_var_processor"/>
        <argument key="string" type="service_closure" id="container.env_var_processor"/>
        <argument key="trim" type="service_closure" id="container.env_var_processor"/>
        <argument key="url" type="service_closure" id="container.env_var_processor"/>
      </argument>
    </service>
    <service id=".service_locator.y4_Zrx." class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="loader" type="service_closure" id=".errored..service_locator.y4_Zrx..Symfony\Component\Config\Loader\LoaderInterface"/>
      </argument>
    </service>
    <service id=".service_locator.uKj8i7y" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="DTO" type="service_closure" id="App\DTO\CallbackDTO"/>
        <argument key="action" type="service_closure" id="App\Service\Payment\Callback\CallbackAction"/>
        <argument key="validator" type="service_closure" id="debug.validator"/>
      </argument>
    </service>
    <service id=".service_locator.yNJ0lDi" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="invoiceRepository" type="service_closure" id="App\Repository\InvoiceRepository"/>
      </argument>
    </service>
    <service id=".service_locator.QGMB0r." class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="DTO" type="service_closure" id="App\DTO\InvoiceDTO"/>
        <argument key="action" type="service_closure" id="App\Service\Payment\Invoice\CreateInvoiceAction"/>
        <argument key="entityManager" type="service_closure" id="doctrine.orm.default_entity_manager"/>
        <argument key="invoiceFactory" type="service_closure" id="App\Service\Payment\Invoice\InvoiceFactory"/>
        <argument key="validator" type="service_closure" id="debug.validator"/>
      </argument>
    </service>
    <service id=".service_locator.iAuVEDq" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="App\Controller\CallbackController::getCallbackCurlRequestTest" type="service_closure" id=".service_locator.yNJ0lDi"/>
        <argument key="App\Controller\CallbackController::handleCallback" type="service_closure" id=".service_locator.uKj8i7y"/>
        <argument key="App\Controller\InvoiceController::handleInvoice" type="service_closure" id=".service_locator.QGMB0r."/>
        <argument key="App\Kernel::loadRoutes" type="service_closure" id=".service_locator.y4_Zrx."/>
        <argument key="App\Kernel::registerContainerConfiguration" type="service_closure" id=".service_locator.y4_Zrx."/>
        <argument key="kernel::loadRoutes" type="service_closure" id=".service_locator.y4_Zrx."/>
        <argument key="kernel::registerContainerConfiguration" type="service_closure" id=".service_locator.y4_Zrx."/>
        <argument key="App\Controller\CallbackController:getCallbackCurlRequestTest" type="service_closure" id=".service_locator.yNJ0lDi"/>
        <argument key="App\Controller\CallbackController:handleCallback" type="service_closure" id=".service_locator.uKj8i7y"/>
        <argument key="App\Controller\InvoiceController:handleInvoice" type="service_closure" id=".service_locator.QGMB0r."/>
        <argument key="kernel:loadRoutes" type="service_closure" id=".service_locator.y4_Zrx."/>
        <argument key="kernel:registerContainerConfiguration" type="service_closure" id=".service_locator.y4_Zrx."/>
      </argument>
    </service>
    <service id=".service_locator.ratsPLV" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="Sonata\Form\Validator\InlineValidator" type="service_closure" id="sonata.form.validator.inline"/>
        <argument key="Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntityValidator" type="service_closure" id="doctrine.orm.validator.unique"/>
        <argument key="Symfony\Component\Security\Core\Validator\Constraints\UserPasswordValidator" type="service_closure" id="security.validator.user_password"/>
        <argument key="Symfony\Component\Validator\Constraints\EmailValidator" type="service_closure" id="validator.email"/>
        <argument key="Symfony\Component\Validator\Constraints\ExpressionValidator" type="service_closure" id="validator.expression"/>
        <argument key="Symfony\Component\Validator\Constraints\NoSuspiciousCharactersValidator" type="service_closure" id="validator.no_suspicious_characters"/>
        <argument key="Symfony\Component\Validator\Constraints\NotCompromisedPasswordValidator" type="service_closure" id="validator.not_compromised_password"/>
        <argument key="Symfony\Component\Validator\Constraints\WhenValidator" type="service_closure" id="validator.when"/>
        <argument key="doctrine.orm.validator.unique" type="service_closure" id="doctrine.orm.validator.unique"/>
        <argument key="security.validator.user_password" type="service_closure" id="security.validator.user_password"/>
        <argument key="sonata.form.validator.inline" type="service_closure" id="sonata.form.validator.inline"/>
        <argument key="validator.expression" type="service_closure" id="validator.expression"/>
      </argument>
    </service>
    <service id=".service_locator.lLv4pWF" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="inline" type="service_closure" id="fragment.renderer.inline"/>
      </argument>
    </service>
    <service id=".debug.value_resolver.security.user_value_resolver" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <argument type="service" id="security.user_value_resolver"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id=".debug.value_resolver.security.security_token_value_resolver" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <argument type="service" id="security.security_token_value_resolver"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id=".debug.value_resolver.doctrine.orm.entity_value_resolver" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <argument type="service" id="doctrine.orm.entity_value_resolver"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id=".debug.value_resolver.argument_resolver.backed_enum_resolver" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <argument type="service" id="argument_resolver.backed_enum_resolver"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id=".debug.value_resolver.argument_resolver.datetime" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <argument type="service" id="argument_resolver.datetime"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id=".debug.value_resolver.argument_resolver.request_attribute" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <argument type="service" id="argument_resolver.request_attribute"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id=".debug.value_resolver.argument_resolver.request" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <argument type="service" id="argument_resolver.request"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id=".debug.value_resolver.argument_resolver.session" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <argument type="service" id="argument_resolver.session"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id=".debug.value_resolver.sonata.admin.argument_resolver.admin" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <argument type="service" id="sonata.admin.argument_resolver.admin"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id=".debug.value_resolver.sonata.admin.argument_resolver.proxy_query" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <argument type="service" id="sonata.admin.argument_resolver.proxy_query"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id=".debug.value_resolver.argument_resolver.service" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <argument type="service" id="argument_resolver.service"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id=".debug.value_resolver.argument_resolver.default" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <argument type="service" id="argument_resolver.default"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id=".debug.value_resolver.argument_resolver.variadic" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <argument type="service" id="argument_resolver.variadic"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id=".debug.value_resolver.argument_resolver.not_tagged_controller" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <argument type="service" id="argument_resolver.not_tagged_controller"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id=".debug.value_resolver.argument_resolver.request_payload" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <argument type="service" id="argument_resolver.request_payload"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id=".debug.value_resolver.argument_resolver.query_parameter_value_resolver" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <argument type="service" id="argument_resolver.query_parameter_value_resolver"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id=".service_locator..OzUK48" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="Sonata\AdminBundle\Form\Type\AdminType" type="service_closure" id="sonata.admin.form.type.admin"/>
        <argument key="Sonata\AdminBundle\Form\Type\ChoiceFieldMaskType" type="service_closure" id="sonata.admin.doctrine_orm.form.type.choice_field_mask"/>
        <argument key="Sonata\AdminBundle\Form\Type\CollectionType" type="service_closure" id="sonata.admin.form.type.collection"/>
        <argument key="Sonata\AdminBundle\Form\Type\Filter\ChoiceType" type="service_closure" id="sonata.admin.form.filter.type.choice"/>
        <argument key="Sonata\AdminBundle\Form\Type\Filter\DateRangeType" type="service_closure" id="sonata.admin.form.filter.type.daterange"/>
        <argument key="Sonata\AdminBundle\Form\Type\Filter\DateTimeRangeType" type="service_closure" id="sonata.admin.form.filter.type.datetime_range"/>
        <argument key="Sonata\AdminBundle\Form\Type\Filter\DateTimeType" type="service_closure" id="sonata.admin.form.filter.type.datetime"/>
        <argument key="Sonata\AdminBundle\Form\Type\Filter\DateType" type="service_closure" id="sonata.admin.form.filter.type.date"/>
        <argument key="Sonata\AdminBundle\Form\Type\Filter\DefaultType" type="service_closure" id="sonata.admin.form.filter.type.default"/>
        <argument key="Sonata\AdminBundle\Form\Type\Filter\NumberType" type="service_closure" id="sonata.admin.form.filter.type.number"/>
        <argument key="Sonata\AdminBundle\Form\Type\ModelAutocompleteType" type="service_closure" id="sonata.admin.form.type.model_autocomplete"/>
        <argument key="Sonata\AdminBundle\Form\Type\ModelHiddenType" type="service_closure" id="sonata.admin.form.type.model_hidden"/>
        <argument key="Sonata\AdminBundle\Form\Type\ModelListType" type="service_closure" id="sonata.admin.form.type.model_list"/>
        <argument key="Sonata\AdminBundle\Form\Type\ModelReferenceType" type="service_closure" id="sonata.admin.form.type.model_reference"/>
        <argument key="Sonata\AdminBundle\Form\Type\ModelType" type="service_closure" id="sonata.admin.form.type.model_choice"/>
        <argument key="Sonata\BlockBundle\Form\Type\ContainerTemplateType" type="service_closure" id="sonata.block.form.type.container_template"/>
        <argument key="Sonata\BlockBundle\Form\Type\ServiceListType" type="service_closure" id="sonata.block.form.type.block"/>
        <argument key="Sonata\Form\Type\BooleanType" type="service_closure" id="sonata.form.type.boolean"/>
        <argument key="Sonata\Form\Type\CollectionType" type="service_closure" id="sonata.form.type.collection"/>
        <argument key="Sonata\Form\Type\DatePickerType" type="service_closure" id="sonata.form.type.date_picker"/>
        <argument key="Sonata\Form\Type\DateRangePickerType" type="service_closure" id="sonata.form.type.date_range_picker"/>
        <argument key="Sonata\Form\Type\DateRangeType" type="service_closure" id="sonata.form.type.date_range"/>
        <argument key="Sonata\Form\Type\DateTimePickerType" type="service_closure" id="sonata.form.type.datetime_picker"/>
        <argument key="Sonata\Form\Type\DateTimeRangePickerType" type="service_closure" id="sonata.form.type.datetime_range_picker"/>
        <argument key="Sonata\Form\Type\DateTimeRangeType" type="service_closure" id="sonata.form.type.datetime_range"/>
        <argument key="Sonata\Form\Type\ImmutableArrayType" type="service_closure" id="sonata.form.type.array"/>
        <argument key="Symfony\Bridge\Doctrine\Form\Type\EntityType" type="service_closure" id="form.type.entity"/>
        <argument key="Symfony\Component\Form\Extension\Core\Type\ChoiceType" type="service_closure" id="form.type.choice"/>
        <argument key="Symfony\Component\Form\Extension\Core\Type\ColorType" type="service_closure" id="form.type.color"/>
        <argument key="Symfony\Component\Form\Extension\Core\Type\FileType" type="service_closure" id="form.type.file"/>
        <argument key="Symfony\Component\Form\Extension\Core\Type\FormType" type="service_closure" id="form.type.form"/>
      </argument>
    </service>
    <service id="messenger.bus.default.middleware.traceable" class="Symfony\Component\Messenger\Middleware\TraceableMiddleware">
      <argument type="service" id="debug.stopwatch"/>
      <argument>messenger.bus.default</argument>
    </service>
    <service id="messenger.bus.default.middleware.add_bus_name_stamp_middleware" class="Symfony\Component\Messenger\Middleware\AddBusNameStampMiddleware">
      <argument>messenger.bus.default</argument>
    </service>
    <service id="messenger.bus.default.middleware.send_message" class="Symfony\Component\Messenger\Middleware\SendMessageMiddleware">
      <argument type="service" id="messenger.senders_locator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument>true</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.messenger" on-invalid="ignore"/>
      </call>
    </service>
    <service id="messenger.bus.default.middleware.handle_message" class="Symfony\Component\Messenger\Middleware\HandleMessageMiddleware">
      <argument type="service" id="messenger.bus.default.messenger.handlers_locator"/>
      <argument>false</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.messenger" on-invalid="ignore"/>
      </call>
    </service>
    <service id="debug.traced.messenger.bus.default" class="Symfony\Component\Messenger\TraceableMessageBus">
      <tag name="messenger.bus"/>
      <tag name="container.decorator" id="messenger.bus.default" inner="debug.traced.messenger.bus.default.inner"/>
      <argument type="service" id="debug.traced.messenger.bus.default.inner"/>
    </service>
    <service id=".service_locator.5cAhUFF" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="messenger.bus.default" type="service_closure" id="debug.traced.messenger.bus.default"/>
      </argument>
    </service>
    <service id=".service_locator.Y4J.A.e" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="failed" type="service_closure" id="messenger.transport.failed"/>
      </argument>
    </service>
    <service id=".messenger.handler_descriptor.QXXNQ9d" class="Symfony\Component\Messenger\Handler\HandlerDescriptor">
      <argument type="service" id="process.messenger.process_message_handler"/>
      <argument type="collection"/>
    </service>
    <service id=".messenger.handler_descriptor.kEzMhfs" class="Symfony\Component\Messenger\Handler\HandlerDescriptor">
      <argument type="service" id="console.messenger.execute_command_handler"/>
      <argument type="collection"/>
    </service>
    <service id=".messenger.handler_descriptor.6kVvRT." class="Symfony\Component\Messenger\Handler\HandlerDescriptor">
      <argument type="service" id="http_client.messenger.ping_webhook_handler"/>
      <argument type="collection"/>
    </service>
    <service id=".messenger.handler_descriptor.tGvt0LH" class="Symfony\Component\Messenger\Handler\HandlerDescriptor">
      <argument type="service" id="mailer.messenger.message_handler"/>
      <argument type="collection"/>
    </service>
    <service id=".messenger.handler_descriptor.p4Qvabm" class="Symfony\Component\Messenger\Handler\HandlerDescriptor">
      <argument type="service" id="messenger.redispatch_message_handler"/>
      <argument type="collection"/>
    </service>
    <service id=".messenger.handler_descriptor.vMw0m61" class="Symfony\Component\Messenger\Handler\HandlerDescriptor">
      <argument type="service" id="chatter.messenger.chat_handler"/>
      <argument type="collection"/>
    </service>
    <service id=".messenger.handler_descriptor.XZowc.T" class="Symfony\Component\Messenger\Handler\HandlerDescriptor">
      <argument type="service" id="texter.messenger.sms_handler"/>
      <argument type="collection"/>
    </service>
    <service id=".messenger.handler_descriptor.Lml2ICs" class="Symfony\Component\Messenger\Handler\HandlerDescriptor">
      <argument type="service" id="texter.messenger.push_handler"/>
      <argument type="collection"/>
    </service>
    <service id="messenger.bus.default.messenger.handlers_locator" class="Symfony\Component\Messenger\Handler\HandlersLocator">
      <argument type="collection">
        <argument key="Symfony\Component\Process\Messenger\RunProcessMessage" type="iterator">
          <argument type="service" id=".messenger.handler_descriptor.QXXNQ9d"/>
        </argument>
        <argument key="Symfony\Component\Console\Messenger\RunCommandMessage" type="iterator">
          <argument type="service" id=".messenger.handler_descriptor.kEzMhfs"/>
        </argument>
        <argument key="Symfony\Component\HttpClient\Messenger\PingWebhookMessage" type="iterator">
          <argument type="service" id=".messenger.handler_descriptor.6kVvRT."/>
        </argument>
        <argument key="Symfony\Component\Mailer\Messenger\SendEmailMessage" type="iterator">
          <argument type="service" id=".messenger.handler_descriptor.tGvt0LH"/>
        </argument>
        <argument key="Symfony\Component\Messenger\Message\RedispatchMessage" type="iterator">
          <argument type="service" id=".messenger.handler_descriptor.p4Qvabm"/>
        </argument>
        <argument key="Symfony\Component\Notifier\Message\ChatMessage" type="iterator">
          <argument type="service" id=".messenger.handler_descriptor.vMw0m61"/>
        </argument>
        <argument key="Symfony\Component\Notifier\Message\SmsMessage" type="iterator">
          <argument type="service" id=".messenger.handler_descriptor.XZowc.T"/>
        </argument>
        <argument key="Symfony\Component\Notifier\Message\PushMessage" type="iterator">
          <argument type="service" id=".messenger.handler_descriptor.Lml2ICs"/>
        </argument>
      </argument>
    </service>
    <service id=".debug.http_client" class="Symfony\Component\HttpClient\TraceableHttpClient">
      <tag name="http_client.client"/>
      <tag name="kernel.reset" method="reset"/>
      <tag name="container.decorator" id="http_client" inner="http_client.uri_template.inner"/>
      <argument type="service" id="http_client.uri_template"/>
      <argument type="service" id="debug.stopwatch" on-invalid="ignore"/>
    </service>
    <service id=".service_locator.vefZLS1" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="doctrine.orm.default_listeners.attach_entity_listeners" type="service_closure" id="doctrine.orm.default_listeners.attach_entity_listeners"/>
        <argument key="doctrine.orm.listeners.doctrine_dbal_cache_adapter_schema_listener" type="service_closure" id="doctrine.orm.listeners.doctrine_dbal_cache_adapter_schema_listener"/>
        <argument key="doctrine.orm.listeners.doctrine_token_provider_schema_listener" type="service_closure" id="doctrine.orm.listeners.doctrine_token_provider_schema_listener"/>
        <argument key="doctrine.orm.listeners.lock_store_schema_listener" type="service_closure" id="doctrine.orm.listeners.lock_store_schema_listener"/>
        <argument key="doctrine.orm.listeners.pdo_session_handler_schema_listener" type="service_closure" id="doctrine.orm.listeners.pdo_session_handler_schema_listener"/>
        <argument key="doctrine.orm.messenger.doctrine_schema_listener" type="service_closure" id="doctrine.orm.messenger.doctrine_schema_listener"/>
        <argument key="sonata.doctrine.mapper" type="service_closure" id="sonata.doctrine.mapper"/>
      </argument>
    </service>
    <service id=".service_locator.uaRUBdr" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="App\Repository\CallbackRepository" type="service_closure" id="App\Repository\CallbackRepository"/>
        <argument key="App\Repository\InvoiceRepository" type="service_closure" id="App\Repository\InvoiceRepository"/>
      </argument>
    </service>
    <service id=".service_locator.KLVvNIq" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="doctrine.ulid_generator" type="service_closure" id="doctrine.ulid_generator"/>
        <argument key="doctrine.uuid_generator" type="service_closure" id="doctrine.uuid_generator"/>
      </argument>
    </service>
    <service id=".doctrine.orm.default_metadata_driver" class="Doctrine\Bundle\DoctrineBundle\Mapping\MappingDriver">
      <tag name="container.decorator" id="doctrine.orm.default_metadata_driver" inner=".doctrine.orm.default_metadata_driver.inner"/>
      <argument type="service" id=".doctrine.orm.default_metadata_driver.inner"/>
      <argument type="service" id=".service_locator.KLVvNIq"/>
    </service>
    <service id="doctrine.dbal.logging_middleware.default" class="Doctrine\DBAL\Logging\Middleware">
      <tag name="monolog.logger" channel="doctrine"/>
      <argument type="service" id="monolog.logger.doctrine"/>
    </service>
    <service id="doctrine.dbal.debug_middleware.default" class="Doctrine\Bundle\DoctrineBundle\Middleware\DebugMiddleware">
      <argument type="service" id="doctrine.debug_data_holder"/>
      <argument type="service" id="debug.stopwatch" on-invalid="null"/>
      <call method="setConnectionName">
        <argument>default</argument>
      </call>
    </service>
    <service id=".debug.security.voter.security.access.authenticated_voter" class="Symfony\Component\Security\Core\Authorization\Voter\TraceableVoter">
      <argument type="service" id="security.access.authenticated_voter"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id=".debug.security.voter.security.access.simple_role_voter" class="Symfony\Component\Security\Core\Authorization\Voter\TraceableVoter">
      <argument type="service" id="security.access.simple_role_voter"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id=".debug.security.voter.security.access.expression_voter" class="Symfony\Component\Security\Core\Authorization\Voter\TraceableVoter">
      <argument type="service" id="security.access.expression_voter"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="security.listener.csrf_protection" class="Symfony\Component\Security\Http\EventListener\CsrfProtectionListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="security.csrf.token_manager"/>
    </service>
    <service id="security.logout.listener.csrf_token_clearing" class="Symfony\Component\Security\Http\EventListener\CsrfTokenClearingLogoutListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="security.csrf.token_storage"/>
    </service>
    <service id="security.ldap_locator" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <argument type="collection"/>
    </service>
    <service id="monolog.logger.request" class="Monolog\Logger">
      <argument>request</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator service="debug.debug_logger_configurator" method="pushDebugLogger"/>
    </service>
    <service id="monolog.logger.console" class="Monolog\Logger">
      <argument>console</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator service="debug.debug_logger_configurator" method="pushDebugLogger"/>
    </service>
    <service id="monolog.logger.messenger" class="Monolog\Logger">
      <argument>messenger</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator service="debug.debug_logger_configurator" method="pushDebugLogger"/>
    </service>
    <service id="monolog.logger.cache" class="Monolog\Logger">
      <argument>cache</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator service="debug.debug_logger_configurator" method="pushDebugLogger"/>
    </service>
    <service id="monolog.logger.http_client" class="Monolog\Logger">
      <argument>http_client</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator service="debug.debug_logger_configurator" method="pushDebugLogger"/>
    </service>
    <service id="monolog.logger.mailer" class="Monolog\Logger">
      <argument>mailer</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator service="debug.debug_logger_configurator" method="pushDebugLogger"/>
    </service>
    <service id="monolog.logger.translation" class="Monolog\Logger">
      <argument>translation</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator service="debug.debug_logger_configurator" method="pushDebugLogger"/>
    </service>
    <service id="monolog.logger.php" class="Monolog\Logger">
      <argument>php</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator service="debug.debug_logger_configurator" method="pushDebugLogger"/>
    </service>
    <service id="monolog.logger.event" class="Monolog\Logger">
      <argument>event</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.null_internal"/>
      </call>
      <configurator service="debug.debug_logger_configurator" method="pushDebugLogger"/>
    </service>
    <service id="monolog.logger.router" class="Monolog\Logger">
      <argument>router</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator service="debug.debug_logger_configurator" method="pushDebugLogger"/>
    </service>
    <service id="monolog.logger.profiler" class="Monolog\Logger">
      <argument>profiler</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator service="debug.debug_logger_configurator" method="pushDebugLogger"/>
    </service>
    <service id="monolog.logger.doctrine" class="Monolog\Logger">
      <argument>doctrine</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator service="debug.debug_logger_configurator" method="pushDebugLogger"/>
    </service>
    <service id="monolog.logger.security" class="Monolog\Logger">
      <argument>security</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator service="debug.debug_logger_configurator" method="pushDebugLogger"/>
    </service>
    <service id="monolog.logger.deprecation" class="Monolog\Logger" public="true">
      <argument>deprecation</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator service="debug.debug_logger_configurator" method="pushDebugLogger"/>
    </service>
    <service id="monolog.handler.null_internal" class="Monolog\Handler\NullHandler"/>
    <service id=".service_locator.LzUyP7d" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="sonata.admin.block.admin_list" type="service_closure" id="sonata.admin.block.admin_list"/>
        <argument key="sonata.admin.block.admin_preview" type="service_closure" id="sonata.admin.block.admin_preview"/>
        <argument key="sonata.admin.block.search_result" type="service_closure" id="sonata.admin.block.search_result"/>
        <argument key="sonata.admin.block.stats" type="service_closure" id="sonata.admin.block.stats"/>
        <argument key="sonata.block.service.container" type="service_closure" id="sonata.block.service.container"/>
        <argument key="sonata.block.service.empty" type="service_closure" id="sonata.block.service.empty"/>
        <argument key="sonata.block.service.menu" type="service_closure" id="sonata.block.service.menu"/>
        <argument key="sonata.block.service.rss" type="service_closure" id="sonata.block.service.rss"/>
        <argument key="sonata.block.service.template" type="service_closure" id="sonata.block.service.template"/>
        <argument key="sonata.block.service.text" type="service_closure" id="sonata.block.service.text"/>
      </argument>
    </service>
    <service id=".service_locator.TWz9UQt" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="list" type="service_closure" id="knp_menu.renderer.list"/>
        <argument key="twig" type="service_closure" id="knp_menu.renderer.twig"/>
      </argument>
    </service>
    <service id="admin.callback.template_registry" class="Sonata\AdminBundle\Templating\MutableTemplateRegistry" public="true">
      <tag name="sonata.admin.template_registry"/>
      <argument>%sonata.admin.configuration.templates%</argument>
    </service>
    <service id="admin.invoice.template_registry" class="Sonata\AdminBundle\Templating\MutableTemplateRegistry" public="true">
      <tag name="sonata.admin.template_registry"/>
      <argument>%sonata.admin.configuration.templates%</argument>
    </service>
    <service id=".service_locator.X2jl40p" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="admin.callback" type="service_closure" id="admin.callback"/>
        <argument key="admin.invoice" type="service_closure" id="admin.invoice"/>
      </argument>
    </service>
    <service id=".service_locator.ejIbxXf" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="Sonata\DoctrineORMAdminBundle\Filter\BooleanFilter" type="service_closure" id="sonata.admin.orm.filter.type.boolean"/>
        <argument key="Sonata\DoctrineORMAdminBundle\Filter\CallbackFilter" type="service_closure" id="sonata.admin.orm.filter.type.callback"/>
        <argument key="Sonata\DoctrineORMAdminBundle\Filter\ChoiceFilter" type="service_closure" id="sonata.admin.orm.filter.type.choice"/>
        <argument key="Sonata\DoctrineORMAdminBundle\Filter\ClassFilter" type="service_closure" id="sonata.admin.orm.filter.type.class"/>
        <argument key="Sonata\DoctrineORMAdminBundle\Filter\CountFilter" type="service_closure" id="sonata.admin.orm.filter.type.count"/>
        <argument key="Sonata\DoctrineORMAdminBundle\Filter\DateFilter" type="service_closure" id="sonata.admin.orm.filter.type.date"/>
        <argument key="Sonata\DoctrineORMAdminBundle\Filter\DateRangeFilter" type="service_closure" id="sonata.admin.orm.filter.type.date_range"/>
        <argument key="Sonata\DoctrineORMAdminBundle\Filter\DateTimeFilter" type="service_closure" id="sonata.admin.orm.filter.type.datetime"/>
        <argument key="Sonata\DoctrineORMAdminBundle\Filter\DateTimeRangeFilter" type="service_closure" id="sonata.admin.orm.filter.type.datetime_range"/>
        <argument key="Sonata\DoctrineORMAdminBundle\Filter\EmptyFilter" type="service_closure" id="sonata.admin.orm.filter.type.empty"/>
        <argument key="Sonata\DoctrineORMAdminBundle\Filter\ModelAutocompleteFilter" type="service_closure" id="sonata.admin.orm.filter.type.model_autocomplete"/>
        <argument key="Sonata\DoctrineORMAdminBundle\Filter\ModelFilter" type="service_closure" id="sonata.admin.orm.filter.type.model"/>
        <argument key="Sonata\DoctrineORMAdminBundle\Filter\NullFilter" type="service_closure" id="sonata.admin.orm.filter.type.null"/>
        <argument key="Sonata\DoctrineORMAdminBundle\Filter\NumberFilter" type="service_closure" id="sonata.admin.orm.filter.type.number"/>
        <argument key="Sonata\DoctrineORMAdminBundle\Filter\StringFilter" type="service_closure" id="sonata.admin.orm.filter.type.string"/>
        <argument key="Sonata\DoctrineORMAdminBundle\Filter\StringListFilter" type="service_closure" id="sonata.admin.orm.filter.type.string_list"/>
        <argument key="Sonata\DoctrineORMAdminBundle\Filter\TimeFilter" type="service_closure" id="sonata.admin.orm.filter.type.time"/>
        <argument key="Sonata\DoctrineORMAdminBundle\Filter\UidFilter" type="service_closure" id="sonata.admin.orm.filter.type.uid"/>
      </argument>
    </service>
    <service id=".service_locator.Xbsa8iG" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection"/>
    </service>
    <service id=".service_locator.yY.p4P7" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="translation.loader.csv" type="service_closure" id="translation.loader.csv"/>
        <argument key="translation.loader.dat" type="service_closure" id="translation.loader.dat"/>
        <argument key="translation.loader.ini" type="service_closure" id="translation.loader.ini"/>
        <argument key="translation.loader.json" type="service_closure" id="translation.loader.json"/>
        <argument key="translation.loader.mo" type="service_closure" id="translation.loader.mo"/>
        <argument key="translation.loader.php" type="service_closure" id="translation.loader.php"/>
        <argument key="translation.loader.po" type="service_closure" id="translation.loader.po"/>
        <argument key="translation.loader.qt" type="service_closure" id="translation.loader.qt"/>
        <argument key="translation.loader.res" type="service_closure" id="translation.loader.res"/>
        <argument key="translation.loader.xliff" type="service_closure" id="translation.loader.xliff"/>
        <argument key="translation.loader.yml" type="service_closure" id="translation.loader.yml"/>
      </argument>
    </service>
    <service id="debug.security.event_dispatcher.main" class="Symfony\Component\EventDispatcher\Debug\TraceableEventDispatcher">
      <tag name="security.event_dispatcher.main">event_dispatcher.dispatcher</tag>
      <tag name="container.decorator" id="security.event_dispatcher.main" inner="debug.security.event_dispatcher.main.inner"/>
      <argument type="service" id="debug.security.event_dispatcher.main.inner"/>
      <argument type="service" id="debug.stopwatch"/>
      <argument type="service" id="monolog.logger" on-invalid="null"/>
      <argument type="service" id="request_stack" on-invalid="null"/>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\CheckPassportEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.listener.main.user_provider"/>
          <argument>checkPassport</argument>
        </argument>
        <argument>2048</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\LoginSuccessEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.listener.session.main"/>
          <argument>onSuccessfulLogin</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\CheckPassportEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.listener.user_checker.main"/>
          <argument>preCheckCredentials</argument>
        </argument>
        <argument>256</argument>
      </call>
      <call method="addListener">
        <argument>security.authentication.success</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.listener.user_checker.main"/>
          <argument>postCheckCredentials</argument>
        </argument>
        <argument>256</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\CheckPassportEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.listener.user_provider"/>
          <argument>checkPassport</argument>
        </argument>
        <argument>1024</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\CheckPassportEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.listener.check_authenticator_credentials"/>
          <argument>checkPassport</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\LoginSuccessEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.listener.password_migrating"/>
          <argument>onLoginSuccess</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\CheckPassportEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.listener.csrf_protection"/>
          <argument>checkPassport</argument>
        </argument>
        <argument>512</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\LogoutEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.logout.listener.csrf_token_clearing"/>
          <argument>onLogout</argument>
        </argument>
        <argument>0</argument>
      </call>
    </service>
    <service id=".service_locator.O2p6Lk7" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="form.factory" type="service_closure" id="form.factory" on-invalid="ignore"/>
        <argument key="http_kernel" type="service_closure" id="http_kernel" on-invalid="ignore"/>
        <argument key="parameter_bag" type="service_closure" id="parameter_bag" on-invalid="ignore"/>
        <argument key="request_stack" type="service_closure" id="request_stack" on-invalid="ignore"/>
        <argument key="router" type="service_closure" id="router.default" on-invalid="ignore"/>
        <argument key="security.authorization_checker" type="service_closure" id="security.authorization_checker" on-invalid="ignore"/>
        <argument key="security.csrf.token_manager" type="service_closure" id="security.csrf.token_manager" on-invalid="ignore"/>
        <argument key="security.token_storage" type="service_closure" id="security.token_storage" on-invalid="ignore"/>
        <argument key="serializer" type="service_closure" id="serializer" on-invalid="ignore"/>
        <argument key="twig" type="service_closure" id="twig" on-invalid="ignore"/>
        <argument key="web_link.http_header_serializer" type="service_closure" id="web_link.http_header_serializer" on-invalid="ignore"/>
      </argument>
    </service>
    <service id=".service_locator.O2p6Lk7.App\Controller\CallbackController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\CallbackController"/>
      <argument>App\Controller\CallbackController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.O2p6Lk7" method="withContext"/>
    </service>
    <service id=".service_locator.O2p6Lk7.App\Controller\InvoiceController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\InvoiceController"/>
      <argument>App\Controller\InvoiceController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.O2p6Lk7" method="withContext"/>
    </service>
    <service id=".service_locator.fuYM_Z." class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="translator" type="service_closure" id="translator.data_collector"/>
      </argument>
    </service>
    <service id=".service_locator.fuYM_Z..translation.warmer" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="translation.warmer"/>
      <argument>translation.warmer</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.fuYM_Z." method="withContext"/>
    </service>
    <service id=".service_locator.otfny_1" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="routing.loader" type="service_closure" id="routing.loader"/>
      </argument>
    </service>
    <service id=".service_locator.otfny_1.router.default" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="router.default"/>
      <argument>router.default</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.otfny_1" method="withContext"/>
    </service>
    <service id=".service_locator.cUcW89y" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="router" type="service_closure" id="router.default"/>
      </argument>
    </service>
    <service id=".service_locator.cUcW89y.router.cache_warmer" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="router.cache_warmer"/>
      <argument>router.cache_warmer</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.cUcW89y" method="withContext"/>
    </service>
    <service id=".service_locator.etVElvN" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="twig" type="service_closure" id="twig"/>
      </argument>
    </service>
    <service id=".service_locator.etVElvN.twig.template_cache_warmer" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="twig.template_cache_warmer"/>
      <argument>twig.template_cache_warmer</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.etVElvN" method="withContext"/>
    </service>
    <service id=".service_locator.2e6LmLI" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="controller_resolver" type="service_closure" id="debug.controller_resolver"/>
        <argument key="form.factory" type="service_closure" id="form.factory" on-invalid="ignore"/>
        <argument key="http_kernel" type="service_closure" id="http_kernel"/>
        <argument key="logger" type="service_closure" id="monolog.logger" on-invalid="ignore"/>
        <argument key="parameter_bag" type="service_closure" id="parameter_bag" on-invalid="ignore"/>
        <argument key="request_stack" type="service_closure" id="request_stack" on-invalid="ignore"/>
        <argument key="router" type="service_closure" id="router.default" on-invalid="ignore"/>
        <argument key="security.authorization_checker" type="service_closure" id="security.authorization_checker" on-invalid="ignore"/>
        <argument key="security.csrf.token_manager" type="service_closure" id="security.csrf.token_manager" on-invalid="ignore"/>
        <argument key="security.token_storage" type="service_closure" id="security.token_storage" on-invalid="ignore"/>
        <argument key="serializer" type="service_closure" id="serializer" on-invalid="ignore"/>
        <argument key="sonata.admin.admin_exporter" type="service_closure" id="sonata.admin.admin_exporter" on-invalid="ignore"/>
        <argument key="sonata.admin.audit.manager" type="service_closure" id="sonata.admin.audit.manager"/>
        <argument key="sonata.admin.object.manipulator.acl.admin" type="service_closure" id="sonata.admin.object.manipulator.acl.admin"/>
        <argument key="sonata.admin.pool" type="service_closure" id="sonata.admin.pool"/>
        <argument key="sonata.admin.request.fetcher" type="service_closure" id="sonata.admin.request.fetcher"/>
        <argument key="sonata.exporter.exporter" type="service_closure" id="sonata.exporter.exporter" on-invalid="ignore"/>
        <argument key="translator" type="service_closure" id="translator.data_collector"/>
        <argument key="twig" type="service_closure" id="twig" on-invalid="ignore"/>
        <argument key="web_link.http_header_serializer" type="service_closure" id="web_link.http_header_serializer" on-invalid="ignore"/>
      </argument>
    </service>
    <service id=".service_locator.2e6LmLI.sonata.admin.controller.crud" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="sonata.admin.controller.crud"/>
      <argument>sonata.admin.controller.crud</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.2e6LmLI" method="withContext"/>
    </service>
    <service id=".service_locator.2dbgUIS" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="Symfony\Bridge\Doctrine\ArgumentResolver\EntityValueResolver" type="service_closure" id=".debug.value_resolver.doctrine.orm.entity_value_resolver"/>
        <argument key="Symfony\Component\HttpKernel\Controller\ArgumentResolver\BackedEnumValueResolver" type="service_closure" id=".debug.value_resolver.argument_resolver.backed_enum_resolver"/>
        <argument key="Symfony\Component\HttpKernel\Controller\ArgumentResolver\DateTimeValueResolver" type="service_closure" id=".debug.value_resolver.argument_resolver.datetime"/>
        <argument key="Symfony\Component\HttpKernel\Controller\ArgumentResolver\DefaultValueResolver" type="service_closure" id=".debug.value_resolver.argument_resolver.default"/>
        <argument key="Symfony\Component\HttpKernel\Controller\ArgumentResolver\QueryParameterValueResolver" type="service_closure" id=".debug.value_resolver.argument_resolver.query_parameter_value_resolver"/>
        <argument key="Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestAttributeValueResolver" type="service_closure" id=".debug.value_resolver.argument_resolver.request_attribute"/>
        <argument key="Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestPayloadValueResolver" type="service_closure" id=".debug.value_resolver.argument_resolver.request_payload"/>
        <argument key="Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestValueResolver" type="service_closure" id=".debug.value_resolver.argument_resolver.request"/>
        <argument key="Symfony\Component\HttpKernel\Controller\ArgumentResolver\ServiceValueResolver" type="service_closure" id=".debug.value_resolver.argument_resolver.service"/>
        <argument key="Symfony\Component\HttpKernel\Controller\ArgumentResolver\SessionValueResolver" type="service_closure" id=".debug.value_resolver.argument_resolver.session"/>
        <argument key="Symfony\Component\HttpKernel\Controller\ArgumentResolver\VariadicValueResolver" type="service_closure" id=".debug.value_resolver.argument_resolver.variadic"/>
        <argument key="Symfony\Component\Security\Http\Controller\SecurityTokenValueResolver" type="service_closure" id=".debug.value_resolver.security.security_token_value_resolver"/>
        <argument key="Symfony\Component\Security\Http\Controller\UserValueResolver" type="service_closure" id=".debug.value_resolver.security.user_value_resolver"/>
        <argument key="argument_resolver.not_tagged_controller" type="service_closure" id=".debug.value_resolver.argument_resolver.not_tagged_controller"/>
        <argument key="sonata.admin.argument_resolver.admin" type="service_closure" id=".debug.value_resolver.sonata.admin.argument_resolver.admin"/>
        <argument key="sonata.admin.argument_resolver.proxy_query" type="service_closure" id=".debug.value_resolver.sonata.admin.argument_resolver.proxy_query"/>
      </argument>
    </service>
    <service id=".service_locator.XXv1IfR" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="reverse_container" type="service_closure" id="reverse_container" on-invalid="ignore_uninitialized"/>
      </argument>
    </service>
    <service id=".service_locator.NBUFN6A" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="cache.app" type="service_closure" id="cache.app.taggable"/>
      </argument>
    </service>
    <service id=".service_locator._1SGciK" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="event_dispatcher" type="service_closure" id="debug.event_dispatcher"/>
        <argument key="security.event_dispatcher.main" type="service_closure" id="debug.security.event_dispatcher.main"/>
      </argument>
    </service>
    <service id=".service_locator.AQBflHD" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="session_factory" type="service_closure" id="session.factory" on-invalid="ignore"/>
      </argument>
    </service>
    <service id=".service_locator.LD5oJC8" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="kernel" type="service_closure" id="kernel"/>
        <argument key="security.route_loader.logout" type="service_closure" id="security.route_loader.logout"/>
      </argument>
    </service>
    <service id=".service_locator.Kl0E_Fe" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="env" type="service_closure" id="container.getenv"/>
        <argument key="service" type="service_closure" id="container.get_routing_condition_service"/>
      </argument>
    </service>
    <service id=".service_locator.0TACwl3" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="browser" type="service_closure" id="notifier.channel.browser"/>
        <argument key="chat" type="service_closure" id="notifier.channel.chat"/>
        <argument key="email" type="service_closure" id="notifier.channel.email"/>
        <argument key="push" type="service_closure" id="notifier.channel.push"/>
        <argument key="sms" type="service_closure" id="notifier.channel.sms"/>
      </argument>
    </service>
    <service id=".service_locator.LcVn9Hr" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="request_stack" type="service_closure" id="request_stack"/>
      </argument>
    </service>
    <service id=".service_locator.e_.xxAP" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="request_stack" type="service_closure" id="request_stack"/>
        <argument key="security.authenticator.managers_locator" type="service_closure" id="security.authenticator.managers_locator" on-invalid="ignore"/>
        <argument key="security.authorization_checker" type="service_closure" id="security.authorization_checker"/>
        <argument key="security.csrf.token_manager" type="service_closure" id="security.csrf.token_manager" on-invalid="ignore"/>
        <argument key="security.firewall.event_dispatcher_locator" type="service_closure" id="security.firewall.event_dispatcher_locator"/>
        <argument key="security.firewall.map" type="service_closure" id="security.firewall.map"/>
        <argument key="security.token_storage" type="service_closure" id="security.token_storage"/>
        <argument key="security.user_checker_locator" type="service_closure" id="security.user_checker_locator"/>
      </argument>
    </service>
    <service id="debug.validator.inner" class="Symfony\Component\Validator\Validator\ValidatorInterface">
      <factory service="validator.builder" method="getValidator"/>
    </service>
    <service id="http_client.uri_template.inner" class="Symfony\Contracts\HttpClient\HttpClientInterface">
      <argument type="collection">
        <argument type="service" id="http_client.transport"/>
      </argument>
      <factory function="current"/>
    </service>
    <service id="debug.event_dispatcher.inner" class="Symfony\Component\EventDispatcher\EventDispatcher"/>
    <service id="debug.controller_resolver.inner" class="Symfony\Bundle\FrameworkBundle\Controller\ControllerResolver">
      <argument type="service" id="service_container"/>
      <argument type="service" id="monolog.logger.request" on-invalid="ignore"/>
      <call method="allowControllers">
        <argument type="collection">
          <argument>Symfony\Bundle\FrameworkBundle\Controller\AbstractController</argument>
          <argument>Symfony\Bundle\FrameworkBundle\Controller\TemplateController</argument>
        </argument>
      </call>
      <call method="allowControllers">
        <argument type="collection">
          <argument>App\Kernel</argument>
          <argument>App\Controller\CallbackController</argument>
          <argument>App\Controller\InvoiceController</argument>
          <argument>Doctrine\Bundle\DoctrineBundle\Controller\ProfilerController</argument>
        </argument>
      </call>
    </service>
    <service id="debug.argument_resolver.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver">
      <argument type="service" id="argument_metadata_factory"/>
      <argument type="iterator">
        <argument type="service" id=".debug.value_resolver.security.user_value_resolver"/>
        <argument type="service" id=".debug.value_resolver.security.security_token_value_resolver"/>
        <argument type="service" id=".debug.value_resolver.doctrine.orm.entity_value_resolver"/>
        <argument type="service" id=".debug.value_resolver.argument_resolver.backed_enum_resolver"/>
        <argument type="service" id=".debug.value_resolver.argument_resolver.datetime"/>
        <argument type="service" id=".debug.value_resolver.argument_resolver.request_attribute"/>
        <argument type="service" id=".debug.value_resolver.argument_resolver.request"/>
        <argument type="service" id=".debug.value_resolver.argument_resolver.session"/>
        <argument type="service" id=".debug.value_resolver.sonata.admin.argument_resolver.admin"/>
        <argument type="service" id=".debug.value_resolver.sonata.admin.argument_resolver.proxy_query"/>
        <argument type="service" id=".debug.value_resolver.argument_resolver.service"/>
        <argument type="service" id=".debug.value_resolver.argument_resolver.default"/>
        <argument type="service" id=".debug.value_resolver.argument_resolver.variadic"/>
        <argument type="service" id=".debug.value_resolver.argument_resolver.not_tagged_controller"/>
      </argument>
      <argument type="service" id=".service_locator.2dbgUIS"/>
    </service>
    <service id="doctrine.migrations.container_aware_migrations_factory.inner" class="Doctrine\Migrations\Version\MigrationFactory">
      <factory service="doctrine.migrations.dependency_factory" method="getMigrationFactory"/>
    </service>
    <service id="debug.security.access.decision_manager.inner" class="Symfony\Component\Security\Core\Authorization\AccessDecisionManager">
      <argument type="iterator">
        <argument type="service" id=".debug.security.voter.security.access.authenticated_voter"/>
        <argument type="service" id=".debug.security.voter.security.access.simple_role_voter"/>
        <argument type="service" id=".debug.security.voter.security.access.expression_voter"/>
      </argument>
      <argument type="service">
        <service class="Symfony\Component\Security\Core\Authorization\Strategy\AffirmativeStrategy">
          <argument>false</argument>
        </service>
      </argument>
    </service>
    <service id="debug.security.firewall.authenticator.main.inner" class="Symfony\Component\Security\Http\Firewall\AuthenticatorManagerListener">
      <argument type="service" id="security.authenticator.manager.main"/>
    </service>
    <service id="debug.traced.messenger.bus.default.inner" class="Symfony\Component\Messenger\MessageBus">
      <argument type="iterator">
        <argument type="service" id="messenger.bus.default.middleware.traceable"/>
        <argument type="service" id="messenger.bus.default.middleware.add_bus_name_stamp_middleware"/>
        <argument type="service" id="messenger.middleware.reject_redelivered_message_middleware"/>
        <argument type="service" id="messenger.middleware.dispatch_after_current_bus"/>
        <argument type="service" id="messenger.middleware.failed_message_processing_middleware"/>
        <argument type="service" id="messenger.bus.default.middleware.send_message"/>
        <argument type="service" id="messenger.bus.default.middleware.handle_message"/>
      </argument>
    </service>
    <service id=".doctrine.orm.default_metadata_driver.inner" class="Doctrine\Persistence\Mapping\Driver\MappingDriverChain">
      <call method="addDriver">
        <argument type="service" id="doctrine.orm.default_attribute_metadata_driver"/>
        <argument>App\Entity</argument>
      </call>
    </service>
    <service id="debug.security.event_dispatcher.main.inner" class="Symfony\Component\EventDispatcher\EventDispatcher"/>
    <service id=".errored..service_locator.y4_Zrx..Symfony\Component\Config\Loader\LoaderInterface" class="Symfony\Component\Config\Loader\LoaderInterface">
      <tag name="container.error" message="Cannot autowire service &quot;.service_locator.y4_Zrx.&quot;: it needs an instance of &quot;Symfony\Component\Config\Loader\LoaderInterface&quot; but this type has been excluded from autowiring."/>
    </service>
    <service id=".console.command.about.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>about</argument>
      <argument type="collection"/>
      <argument>Display information about the current project</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.about"/>
    </service>
    <service id=".console.command.assets_install.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>assets:install</argument>
      <argument type="collection"/>
      <argument>Install bundle's web assets under a public directory</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.assets_install"/>
    </service>
    <service id=".console.command.cache_clear.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>cache:clear</argument>
      <argument type="collection"/>
      <argument>Clear the cache</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.cache_clear"/>
    </service>
    <service id=".console.command.cache_pool_clear.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>cache:pool:clear</argument>
      <argument type="collection"/>
      <argument>Clear cache pools</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.cache_pool_clear"/>
    </service>
    <service id=".console.command.cache_pool_prune.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>cache:pool:prune</argument>
      <argument type="collection"/>
      <argument>Prune cache pools</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.cache_pool_prune"/>
    </service>
    <service id=".console.command.cache_pool_invalidate_tags.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>cache:pool:invalidate-tags</argument>
      <argument type="collection"/>
      <argument>Invalidate cache tags for all or a specific pool</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.cache_pool_invalidate_tags"/>
    </service>
    <service id=".console.command.cache_pool_delete.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>cache:pool:delete</argument>
      <argument type="collection"/>
      <argument>Delete an item from a cache pool</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.cache_pool_delete"/>
    </service>
    <service id=".console.command.cache_pool_list.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>cache:pool:list</argument>
      <argument type="collection"/>
      <argument>List available cache pools</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.cache_pool_list"/>
    </service>
    <service id=".console.command.cache_warmup.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>cache:warmup</argument>
      <argument type="collection"/>
      <argument>Warm up an empty cache</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.cache_warmup"/>
    </service>
    <service id=".console.command.config_debug.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:config</argument>
      <argument type="collection"/>
      <argument>Dump the current configuration for an extension</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.config_debug"/>
    </service>
    <service id=".console.command.config_dump_reference.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>config:dump-reference</argument>
      <argument type="collection"/>
      <argument>Dump the default configuration for an extension</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.config_dump_reference"/>
    </service>
    <service id=".console.command.container_debug.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:container</argument>
      <argument type="collection"/>
      <argument>Display current services for an application</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.container_debug"/>
    </service>
    <service id=".console.command.container_lint.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>lint:container</argument>
      <argument type="collection"/>
      <argument>Ensure that arguments injected into services match type declarations</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.container_lint"/>
    </service>
    <service id=".console.command.debug_autowiring.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:autowiring</argument>
      <argument type="collection"/>
      <argument>List classes/interfaces you can use for autowiring</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.debug_autowiring"/>
    </service>
    <service id=".console.command.dotenv_debug.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:dotenv</argument>
      <argument type="collection"/>
      <argument>List all dotenv files with variables and values</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.dotenv_debug"/>
    </service>
    <service id=".console.command.event_dispatcher_debug.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:event-dispatcher</argument>
      <argument type="collection"/>
      <argument>Display configured listeners for an application</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.event_dispatcher_debug"/>
    </service>
    <service id=".console.command.messenger_consume_messages.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>messenger:consume</argument>
      <argument type="collection"/>
      <argument>Consume messages</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.messenger_consume_messages"/>
    </service>
    <service id=".console.command.messenger_setup_transports.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>messenger:setup-transports</argument>
      <argument type="collection"/>
      <argument>Prepare the required infrastructure for the transport</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.messenger_setup_transports"/>
    </service>
    <service id=".console.command.messenger_debug.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:messenger</argument>
      <argument type="collection"/>
      <argument>List messages you can dispatch using the message buses</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.messenger_debug"/>
    </service>
    <service id=".console.command.messenger_stop_workers.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>messenger:stop-workers</argument>
      <argument type="collection"/>
      <argument>Stop workers after their current message</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.messenger_stop_workers"/>
    </service>
    <service id=".console.command.messenger_failed_messages_retry.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>messenger:failed:retry</argument>
      <argument type="collection"/>
      <argument>Retry one or more messages from the failure transport</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.messenger_failed_messages_retry"/>
    </service>
    <service id=".console.command.messenger_failed_messages_show.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>messenger:failed:show</argument>
      <argument type="collection"/>
      <argument>Show one or more messages from the failure transport</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.messenger_failed_messages_show"/>
    </service>
    <service id=".console.command.messenger_failed_messages_remove.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>messenger:failed:remove</argument>
      <argument type="collection"/>
      <argument>Remove given messages from the failure transport</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.messenger_failed_messages_remove"/>
    </service>
    <service id=".console.command.messenger_stats.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>messenger:stats</argument>
      <argument type="collection"/>
      <argument>Show the message count for one or more transports</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.messenger_stats"/>
    </service>
    <service id=".console.command.router_debug.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:router</argument>
      <argument type="collection"/>
      <argument>Display current routes for an application</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.router_debug"/>
    </service>
    <service id=".console.command.router_match.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>router:match</argument>
      <argument type="collection"/>
      <argument>Help debug routes by simulating a path info match</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.router_match"/>
    </service>
    <service id=".console.command.serializer_debug.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:serializer</argument>
      <argument type="collection"/>
      <argument>Display serialization information for classes</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.serializer_debug"/>
    </service>
    <service id=".console.command.translation_debug.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:translation</argument>
      <argument type="collection"/>
      <argument>Display translation messages information</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.translation_debug"/>
    </service>
    <service id=".console.command.translation_extract.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>translation:extract</argument>
      <argument type="collection"/>
      <argument>Extract missing translations keys from code to translation files</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.translation_extract"/>
    </service>
    <service id=".console.command.validator_debug.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:validator</argument>
      <argument type="collection"/>
      <argument>Display validation constraints for classes</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.validator_debug"/>
    </service>
    <service id=".console.command.translation_pull.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>translation:pull</argument>
      <argument type="collection"/>
      <argument>Pull translations from a given provider.</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.translation_pull"/>
    </service>
    <service id=".console.command.translation_push.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>translation:push</argument>
      <argument type="collection"/>
      <argument>Push translations to a given provider.</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.translation_push"/>
    </service>
    <service id=".console.command.xliff_lint.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>lint:xliff</argument>
      <argument type="collection"/>
      <argument>Lint an XLIFF file and outputs encountered errors</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.xliff_lint"/>
    </service>
    <service id=".console.command.yaml_lint.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>lint:yaml</argument>
      <argument type="collection"/>
      <argument>Lint a YAML file and outputs encountered errors</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.yaml_lint"/>
    </service>
    <service id=".console.command.form_debug.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:form</argument>
      <argument type="collection"/>
      <argument>Display form type information</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.form_debug"/>
    </service>
    <service id=".console.command.secrets_set.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>secrets:set</argument>
      <argument type="collection"/>
      <argument>Set a secret in the vault</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.secrets_set"/>
    </service>
    <service id=".console.command.secrets_remove.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>secrets:remove</argument>
      <argument type="collection"/>
      <argument>Remove a secret from the vault</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.secrets_remove"/>
    </service>
    <service id=".console.command.secrets_generate_key.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>secrets:generate-keys</argument>
      <argument type="collection"/>
      <argument>Generate new encryption keys</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.secrets_generate_key"/>
    </service>
    <service id=".console.command.secrets_list.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>secrets:list</argument>
      <argument type="collection"/>
      <argument>List all secrets</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.secrets_list"/>
    </service>
    <service id=".console.command.secrets_decrypt_to_local.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>secrets:decrypt-to-local</argument>
      <argument type="collection"/>
      <argument>Decrypt all secrets and stores them in the local vault</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.secrets_decrypt_to_local"/>
    </service>
    <service id=".console.command.secrets_encrypt_from_local.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>secrets:encrypt-from-local</argument>
      <argument type="collection"/>
      <argument>Encrypt all local secrets to the vault</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.secrets_encrypt_from_local"/>
    </service>
    <service id=".console.command.mailer_test.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>mailer:test</argument>
      <argument type="collection"/>
      <argument>Test Mailer transports by sending an email</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.mailer_test"/>
    </service>
    <service id=".doctrine_migrations.diff_command.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>doctrine:migrations:diff</argument>
      <argument type="collection"/>
      <argument>Generate a migration by comparing your current database to your mapping information.</argument>
      <argument>false</argument>
      <argument type="service_closure" id="doctrine_migrations.diff_command"/>
    </service>
    <service id=".doctrine_migrations.sync_metadata_command.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>doctrine:migrations:sync-metadata-storage</argument>
      <argument type="collection"/>
      <argument>Ensures that the metadata storage is at the latest version.</argument>
      <argument>false</argument>
      <argument type="service_closure" id="doctrine_migrations.sync_metadata_command"/>
    </service>
    <service id=".doctrine_migrations.versions_command.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>doctrine:migrations:list</argument>
      <argument type="collection"/>
      <argument>Display a list of all available migrations and their status.</argument>
      <argument>false</argument>
      <argument type="service_closure" id="doctrine_migrations.versions_command"/>
    </service>
    <service id=".doctrine_migrations.current_command.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>doctrine:migrations:current</argument>
      <argument type="collection"/>
      <argument>Outputs the current version</argument>
      <argument>false</argument>
      <argument type="service_closure" id="doctrine_migrations.current_command"/>
    </service>
    <service id=".doctrine_migrations.dump_schema_command.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>doctrine:migrations:dump-schema</argument>
      <argument type="collection"/>
      <argument>Dump the schema for your database to a migration.</argument>
      <argument>false</argument>
      <argument type="service_closure" id="doctrine_migrations.dump_schema_command"/>
    </service>
    <service id=".doctrine_migrations.execute_command.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>doctrine:migrations:execute</argument>
      <argument type="collection"/>
      <argument>Execute one or more migration versions up or down manually.</argument>
      <argument>false</argument>
      <argument type="service_closure" id="doctrine_migrations.execute_command"/>
    </service>
    <service id=".doctrine_migrations.generate_command.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>doctrine:migrations:generate</argument>
      <argument type="collection"/>
      <argument>Generate a blank migration class.</argument>
      <argument>false</argument>
      <argument type="service_closure" id="doctrine_migrations.generate_command"/>
    </service>
    <service id=".doctrine_migrations.latest_command.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>doctrine:migrations:latest</argument>
      <argument type="collection"/>
      <argument>Outputs the latest version</argument>
      <argument>false</argument>
      <argument type="service_closure" id="doctrine_migrations.latest_command"/>
    </service>
    <service id=".doctrine_migrations.migrate_command.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>doctrine:migrations:migrate</argument>
      <argument type="collection"/>
      <argument>Execute a migration to a specified version or the latest available version.</argument>
      <argument>false</argument>
      <argument type="service_closure" id="doctrine_migrations.migrate_command"/>
    </service>
    <service id=".doctrine_migrations.rollup_command.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>doctrine:migrations:rollup</argument>
      <argument type="collection"/>
      <argument>Rollup migrations by deleting all tracked versions and insert the one version that exists.</argument>
      <argument>false</argument>
      <argument type="service_closure" id="doctrine_migrations.rollup_command"/>
    </service>
    <service id=".doctrine_migrations.status_command.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>doctrine:migrations:status</argument>
      <argument type="collection"/>
      <argument>View the status of a set of migrations.</argument>
      <argument>false</argument>
      <argument type="service_closure" id="doctrine_migrations.status_command"/>
    </service>
    <service id=".doctrine_migrations.up_to_date_command.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>doctrine:migrations:up-to-date</argument>
      <argument type="collection"/>
      <argument>Tells you if your schema is up-to-date.</argument>
      <argument>false</argument>
      <argument type="service_closure" id="doctrine_migrations.up_to_date_command"/>
    </service>
    <service id=".doctrine_migrations.version_command.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>doctrine:migrations:version</argument>
      <argument type="collection"/>
      <argument>Manually add and delete migration versions from the version table.</argument>
      <argument>false</argument>
      <argument type="service_closure" id="doctrine_migrations.version_command"/>
    </service>
    <service id=".twig.command.debug.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:twig</argument>
      <argument type="collection"/>
      <argument>Show a list of twig functions, filters, globals and tests</argument>
      <argument>false</argument>
      <argument type="service_closure" id="twig.command.debug"/>
    </service>
    <service id=".twig.command.lint.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>lint:twig</argument>
      <argument type="collection"/>
      <argument>Lint a Twig template and outputs encountered errors</argument>
      <argument>false</argument>
      <argument type="service_closure" id="twig.command.lint"/>
    </service>
    <service id=".security.command.debug_firewall.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:firewall</argument>
      <argument type="collection"/>
      <argument>Display information about your security firewall(s)</argument>
      <argument>false</argument>
      <argument type="service_closure" id="security.command.debug_firewall"/>
    </service>
    <service id=".security.command.user_password_hash.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>security:hash-password</argument>
      <argument type="collection"/>
      <argument>Hash a user password</argument>
      <argument>false</argument>
      <argument type="service_closure" id="security.command.user_password_hash"/>
    </service>
    <service id=".sonata.block.command.debug_blocks.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:sonata:block</argument>
      <argument type="collection"/>
      <argument>Debug all blocks available, show default settings of each block</argument>
      <argument>false</argument>
      <argument type="service_closure" id="sonata.block.command.debug_blocks"/>
    </service>
    <service id=".sonata.admin.command.explain.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>sonata:admin:explain</argument>
      <argument type="collection"/>
      <argument>Explain an admin service</argument>
      <argument>false</argument>
      <argument type="service_closure" id="sonata.admin.command.explain"/>
    </service>
    <service id=".sonata.admin.command.generate_object_acl.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>sonata:admin:generate-object-acl</argument>
      <argument type="collection"/>
      <argument>Install ACL for the objects of the Admin Classes.</argument>
      <argument>false</argument>
      <argument type="service_closure" id="sonata.admin.command.generate_object_acl"/>
    </service>
    <service id=".sonata.admin.command.list.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>sonata:admin:list</argument>
      <argument type="collection"/>
      <argument>List all admin services available</argument>
      <argument>false</argument>
      <argument type="service_closure" id="sonata.admin.command.list"/>
    </service>
    <service id=".sonata.admin.command.setup_acl.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>sonata:admin:setup-acl</argument>
      <argument type="collection"/>
      <argument>Install ACL for Admin Classes</argument>
      <argument>false</argument>
      <argument type="service_closure" id="sonata.admin.command.setup_acl"/>
    </service>
    <service id="console.command_loader" class="Symfony\Component\Console\CommandLoader\ContainerCommandLoader" public="true">
      <tag name="container.no_preload"/>
      <argument type="service" id=".service_locator.zoTMJrk"/>
      <argument type="collection">
        <argument key="about">console.command.about</argument>
        <argument key="assets:install">console.command.assets_install</argument>
        <argument key="cache:clear">console.command.cache_clear</argument>
        <argument key="cache:pool:clear">console.command.cache_pool_clear</argument>
        <argument key="cache:pool:prune">console.command.cache_pool_prune</argument>
        <argument key="cache:pool:invalidate-tags">console.command.cache_pool_invalidate_tags</argument>
        <argument key="cache:pool:delete">console.command.cache_pool_delete</argument>
        <argument key="cache:pool:list">console.command.cache_pool_list</argument>
        <argument key="cache:warmup">console.command.cache_warmup</argument>
        <argument key="debug:config">console.command.config_debug</argument>
        <argument key="config:dump-reference">console.command.config_dump_reference</argument>
        <argument key="debug:container">console.command.container_debug</argument>
        <argument key="lint:container">console.command.container_lint</argument>
        <argument key="debug:autowiring">console.command.debug_autowiring</argument>
        <argument key="debug:dotenv">console.command.dotenv_debug</argument>
        <argument key="debug:event-dispatcher">console.command.event_dispatcher_debug</argument>
        <argument key="messenger:consume">console.command.messenger_consume_messages</argument>
        <argument key="messenger:setup-transports">console.command.messenger_setup_transports</argument>
        <argument key="debug:messenger">console.command.messenger_debug</argument>
        <argument key="messenger:stop-workers">console.command.messenger_stop_workers</argument>
        <argument key="messenger:failed:retry">console.command.messenger_failed_messages_retry</argument>
        <argument key="messenger:failed:show">console.command.messenger_failed_messages_show</argument>
        <argument key="messenger:failed:remove">console.command.messenger_failed_messages_remove</argument>
        <argument key="messenger:stats">console.command.messenger_stats</argument>
        <argument key="debug:router">console.command.router_debug</argument>
        <argument key="router:match">console.command.router_match</argument>
        <argument key="debug:serializer">console.command.serializer_debug</argument>
        <argument key="debug:translation">console.command.translation_debug</argument>
        <argument key="translation:extract">console.command.translation_extract</argument>
        <argument key="debug:validator">console.command.validator_debug</argument>
        <argument key="translation:pull">console.command.translation_pull</argument>
        <argument key="translation:push">console.command.translation_push</argument>
        <argument key="lint:xliff">console.command.xliff_lint</argument>
        <argument key="lint:yaml">console.command.yaml_lint</argument>
        <argument key="debug:form">console.command.form_debug</argument>
        <argument key="secrets:set">console.command.secrets_set</argument>
        <argument key="secrets:remove">console.command.secrets_remove</argument>
        <argument key="secrets:generate-keys">console.command.secrets_generate_key</argument>
        <argument key="secrets:list">console.command.secrets_list</argument>
        <argument key="secrets:decrypt-to-local">console.command.secrets_decrypt_to_local</argument>
        <argument key="secrets:encrypt-from-local">console.command.secrets_encrypt_from_local</argument>
        <argument key="mailer:test">console.command.mailer_test</argument>
        <argument key="doctrine:database:create">doctrine.database_create_command</argument>
        <argument key="doctrine:database:drop">doctrine.database_drop_command</argument>
        <argument key="doctrine:query:sql">doctrine.query_sql_command</argument>
        <argument key="dbal:run-sql">Doctrine\DBAL\Tools\Console\Command\RunSqlCommand</argument>
        <argument key="doctrine:cache:clear-metadata">doctrine.cache_clear_metadata_command</argument>
        <argument key="doctrine:cache:clear-query">doctrine.cache_clear_query_cache_command</argument>
        <argument key="doctrine:cache:clear-result">doctrine.cache_clear_result_command</argument>
        <argument key="doctrine:cache:clear-collection-region">doctrine.cache_collection_region_command</argument>
        <argument key="doctrine:schema:create">doctrine.schema_create_command</argument>
        <argument key="doctrine:schema:drop">doctrine.schema_drop_command</argument>
        <argument key="doctrine:cache:clear-entity-region">doctrine.clear_entity_region_command</argument>
        <argument key="doctrine:mapping:info">doctrine.mapping_info_command</argument>
        <argument key="doctrine:cache:clear-query-region">doctrine.clear_query_region_command</argument>
        <argument key="doctrine:query:dql">doctrine.query_dql_command</argument>
        <argument key="doctrine:schema:update">doctrine.schema_update_command</argument>
        <argument key="doctrine:schema:validate">doctrine.schema_validate_command</argument>
        <argument key="doctrine:migrations:diff">doctrine_migrations.diff_command</argument>
        <argument key="doctrine:migrations:sync-metadata-storage">doctrine_migrations.sync_metadata_command</argument>
        <argument key="doctrine:migrations:list">doctrine_migrations.versions_command</argument>
        <argument key="doctrine:migrations:current">doctrine_migrations.current_command</argument>
        <argument key="doctrine:migrations:dump-schema">doctrine_migrations.dump_schema_command</argument>
        <argument key="doctrine:migrations:execute">doctrine_migrations.execute_command</argument>
        <argument key="doctrine:migrations:generate">doctrine_migrations.generate_command</argument>
        <argument key="doctrine:migrations:latest">doctrine_migrations.latest_command</argument>
        <argument key="doctrine:migrations:migrate">doctrine_migrations.migrate_command</argument>
        <argument key="doctrine:migrations:rollup">doctrine_migrations.rollup_command</argument>
        <argument key="doctrine:migrations:status">doctrine_migrations.status_command</argument>
        <argument key="doctrine:migrations:up-to-date">doctrine_migrations.up_to_date_command</argument>
        <argument key="doctrine:migrations:version">doctrine_migrations.version_command</argument>
        <argument key="debug:twig">twig.command.debug</argument>
        <argument key="lint:twig">twig.command.lint</argument>
        <argument key="debug:firewall">security.command.debug_firewall</argument>
        <argument key="security:hash-password">security.command.user_password_hash</argument>
        <argument key="debug:sonata:block">sonata.block.command.debug_blocks</argument>
        <argument key="sonata:admin:explain">sonata.admin.command.explain</argument>
        <argument key="sonata:admin:generate-object-acl">sonata.admin.command.generate_object_acl</argument>
        <argument key="sonata:admin:list">sonata.admin.command.list</argument>
        <argument key="sonata:admin:setup-acl">sonata.admin.command.setup_acl</argument>
      </argument>
    </service>
    <service id=".service_locator.zoTMJrk" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="console.command.about" type="service_closure" id=".console.command.about.lazy"/>
        <argument key="console.command.assets_install" type="service_closure" id=".console.command.assets_install.lazy"/>
        <argument key="console.command.cache_clear" type="service_closure" id=".console.command.cache_clear.lazy"/>
        <argument key="console.command.cache_pool_clear" type="service_closure" id=".console.command.cache_pool_clear.lazy"/>
        <argument key="console.command.cache_pool_prune" type="service_closure" id=".console.command.cache_pool_prune.lazy"/>
        <argument key="console.command.cache_pool_invalidate_tags" type="service_closure" id=".console.command.cache_pool_invalidate_tags.lazy"/>
        <argument key="console.command.cache_pool_delete" type="service_closure" id=".console.command.cache_pool_delete.lazy"/>
        <argument key="console.command.cache_pool_list" type="service_closure" id=".console.command.cache_pool_list.lazy"/>
        <argument key="console.command.cache_warmup" type="service_closure" id=".console.command.cache_warmup.lazy"/>
        <argument key="console.command.config_debug" type="service_closure" id=".console.command.config_debug.lazy"/>
        <argument key="console.command.config_dump_reference" type="service_closure" id=".console.command.config_dump_reference.lazy"/>
        <argument key="console.command.container_debug" type="service_closure" id=".console.command.container_debug.lazy"/>
        <argument key="console.command.container_lint" type="service_closure" id=".console.command.container_lint.lazy"/>
        <argument key="console.command.debug_autowiring" type="service_closure" id=".console.command.debug_autowiring.lazy"/>
        <argument key="console.command.dotenv_debug" type="service_closure" id=".console.command.dotenv_debug.lazy"/>
        <argument key="console.command.event_dispatcher_debug" type="service_closure" id=".console.command.event_dispatcher_debug.lazy"/>
        <argument key="console.command.messenger_consume_messages" type="service_closure" id=".console.command.messenger_consume_messages.lazy"/>
        <argument key="console.command.messenger_setup_transports" type="service_closure" id=".console.command.messenger_setup_transports.lazy"/>
        <argument key="console.command.messenger_debug" type="service_closure" id=".console.command.messenger_debug.lazy"/>
        <argument key="console.command.messenger_stop_workers" type="service_closure" id=".console.command.messenger_stop_workers.lazy"/>
        <argument key="console.command.messenger_failed_messages_retry" type="service_closure" id=".console.command.messenger_failed_messages_retry.lazy"/>
        <argument key="console.command.messenger_failed_messages_show" type="service_closure" id=".console.command.messenger_failed_messages_show.lazy"/>
        <argument key="console.command.messenger_failed_messages_remove" type="service_closure" id=".console.command.messenger_failed_messages_remove.lazy"/>
        <argument key="console.command.messenger_stats" type="service_closure" id=".console.command.messenger_stats.lazy"/>
        <argument key="console.command.router_debug" type="service_closure" id=".console.command.router_debug.lazy"/>
        <argument key="console.command.router_match" type="service_closure" id=".console.command.router_match.lazy"/>
        <argument key="console.command.serializer_debug" type="service_closure" id=".console.command.serializer_debug.lazy"/>
        <argument key="console.command.translation_debug" type="service_closure" id=".console.command.translation_debug.lazy"/>
        <argument key="console.command.translation_extract" type="service_closure" id=".console.command.translation_extract.lazy"/>
        <argument key="console.command.validator_debug" type="service_closure" id=".console.command.validator_debug.lazy"/>
        <argument key="console.command.translation_pull" type="service_closure" id=".console.command.translation_pull.lazy"/>
        <argument key="console.command.translation_push" type="service_closure" id=".console.command.translation_push.lazy"/>
        <argument key="console.command.xliff_lint" type="service_closure" id=".console.command.xliff_lint.lazy"/>
        <argument key="console.command.yaml_lint" type="service_closure" id=".console.command.yaml_lint.lazy"/>
        <argument key="console.command.form_debug" type="service_closure" id=".console.command.form_debug.lazy"/>
        <argument key="console.command.secrets_set" type="service_closure" id=".console.command.secrets_set.lazy"/>
        <argument key="console.command.secrets_remove" type="service_closure" id=".console.command.secrets_remove.lazy"/>
        <argument key="console.command.secrets_generate_key" type="service_closure" id=".console.command.secrets_generate_key.lazy"/>
        <argument key="console.command.secrets_list" type="service_closure" id=".console.command.secrets_list.lazy"/>
        <argument key="console.command.secrets_decrypt_to_local" type="service_closure" id=".console.command.secrets_decrypt_to_local.lazy"/>
        <argument key="console.command.secrets_encrypt_from_local" type="service_closure" id=".console.command.secrets_encrypt_from_local.lazy"/>
        <argument key="console.command.mailer_test" type="service_closure" id=".console.command.mailer_test.lazy"/>
        <argument key="doctrine.database_create_command" type="service_closure" id="doctrine.database_create_command"/>
        <argument key="doctrine.database_drop_command" type="service_closure" id="doctrine.database_drop_command"/>
        <argument key="doctrine.query_sql_command" type="service_closure" id="doctrine.query_sql_command"/>
        <argument key="Doctrine\DBAL\Tools\Console\Command\RunSqlCommand" type="service_closure" id="Doctrine\DBAL\Tools\Console\Command\RunSqlCommand"/>
        <argument key="doctrine.cache_clear_metadata_command" type="service_closure" id="doctrine.cache_clear_metadata_command"/>
        <argument key="doctrine.cache_clear_query_cache_command" type="service_closure" id="doctrine.cache_clear_query_cache_command"/>
        <argument key="doctrine.cache_clear_result_command" type="service_closure" id="doctrine.cache_clear_result_command"/>
        <argument key="doctrine.cache_collection_region_command" type="service_closure" id="doctrine.cache_collection_region_command"/>
        <argument key="doctrine.schema_create_command" type="service_closure" id="doctrine.schema_create_command"/>
        <argument key="doctrine.schema_drop_command" type="service_closure" id="doctrine.schema_drop_command"/>
        <argument key="doctrine.clear_entity_region_command" type="service_closure" id="doctrine.clear_entity_region_command"/>
        <argument key="doctrine.mapping_info_command" type="service_closure" id="doctrine.mapping_info_command"/>
        <argument key="doctrine.clear_query_region_command" type="service_closure" id="doctrine.clear_query_region_command"/>
        <argument key="doctrine.query_dql_command" type="service_closure" id="doctrine.query_dql_command"/>
        <argument key="doctrine.schema_update_command" type="service_closure" id="doctrine.schema_update_command"/>
        <argument key="doctrine.schema_validate_command" type="service_closure" id="doctrine.schema_validate_command"/>
        <argument key="doctrine_migrations.diff_command" type="service_closure" id=".doctrine_migrations.diff_command.lazy"/>
        <argument key="doctrine_migrations.sync_metadata_command" type="service_closure" id=".doctrine_migrations.sync_metadata_command.lazy"/>
        <argument key="doctrine_migrations.versions_command" type="service_closure" id=".doctrine_migrations.versions_command.lazy"/>
        <argument key="doctrine_migrations.current_command" type="service_closure" id=".doctrine_migrations.current_command.lazy"/>
        <argument key="doctrine_migrations.dump_schema_command" type="service_closure" id=".doctrine_migrations.dump_schema_command.lazy"/>
        <argument key="doctrine_migrations.execute_command" type="service_closure" id=".doctrine_migrations.execute_command.lazy"/>
        <argument key="doctrine_migrations.generate_command" type="service_closure" id=".doctrine_migrations.generate_command.lazy"/>
        <argument key="doctrine_migrations.latest_command" type="service_closure" id=".doctrine_migrations.latest_command.lazy"/>
        <argument key="doctrine_migrations.migrate_command" type="service_closure" id=".doctrine_migrations.migrate_command.lazy"/>
        <argument key="doctrine_migrations.rollup_command" type="service_closure" id=".doctrine_migrations.rollup_command.lazy"/>
        <argument key="doctrine_migrations.status_command" type="service_closure" id=".doctrine_migrations.status_command.lazy"/>
        <argument key="doctrine_migrations.up_to_date_command" type="service_closure" id=".doctrine_migrations.up_to_date_command.lazy"/>
        <argument key="doctrine_migrations.version_command" type="service_closure" id=".doctrine_migrations.version_command.lazy"/>
        <argument key="twig.command.debug" type="service_closure" id=".twig.command.debug.lazy"/>
        <argument key="twig.command.lint" type="service_closure" id=".twig.command.lint.lazy"/>
        <argument key="security.command.debug_firewall" type="service_closure" id=".security.command.debug_firewall.lazy"/>
        <argument key="security.command.user_password_hash" type="service_closure" id=".security.command.user_password_hash.lazy"/>
        <argument key="sonata.block.command.debug_blocks" type="service_closure" id=".sonata.block.command.debug_blocks.lazy"/>
        <argument key="sonata.admin.command.explain" type="service_closure" id=".sonata.admin.command.explain.lazy"/>
        <argument key="sonata.admin.command.generate_object_acl" type="service_closure" id=".sonata.admin.command.generate_object_acl.lazy"/>
        <argument key="sonata.admin.command.list" type="service_closure" id=".sonata.admin.command.list.lazy"/>
        <argument key="sonata.admin.command.setup_acl" type="service_closure" id=".sonata.admin.command.setup_acl.lazy"/>
      </argument>
    </service>
    <service id="cache.app.recorder_inner" class="Symfony\Component\Cache\Adapter\FilesystemAdapter">
      <argument>yDi1h6Azyj</argument>
      <argument>0</argument>
      <argument>/var/www/project/var/cache/test/pools/app</argument>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.system.recorder_inner" class="Symfony\Component\Cache\Adapter\AdapterInterface">
      <argument>kjk5EHhEkH</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/var/www/project/var/cache/test/pools/system</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.validator.recorder_inner" class="Symfony\Component\Cache\Adapter\AdapterInterface">
      <argument>tjjQtRdfsQ</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/var/www/project/var/cache/test/pools/system</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.serializer.recorder_inner" class="Symfony\Component\Cache\Adapter\AdapterInterface">
      <argument>IQL+2g7nUH</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/var/www/project/var/cache/test/pools/system</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.annotations.recorder_inner" class="Symfony\Component\Cache\Adapter\AdapterInterface">
      <argument>JJ1zaEz2hT</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/var/www/project/var/cache/test/pools/system</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.property_info.recorder_inner" class="Symfony\Component\Cache\Adapter\AdapterInterface">
      <argument>zdZ3TxXuJz</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/var/www/project/var/cache/test/pools/system</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.messenger.restart_workers_signal.recorder_inner" class="Symfony\Component\Cache\Adapter\FilesystemAdapter">
      <argument>Y7QbjfPNzp</argument>
      <argument>0</argument>
      <argument>/var/www/project/var/cache/test/pools/app</argument>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.validator_expression_language.recorder_inner" class="Symfony\Component\Cache\Adapter\AdapterInterface">
      <argument>8xkq0ZpxRy</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/var/www/project/var/cache/test/pools/system</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.doctrine.orm.default.result.recorder_inner" class="Symfony\Component\Cache\Adapter\ArrayAdapter"/>
    <service id="cache.doctrine.orm.default.query.recorder_inner" class="Symfony\Component\Cache\Adapter\ArrayAdapter"/>
    <service id="cache.security_expression_language.recorder_inner" class="Symfony\Component\Cache\Adapter\AdapterInterface">
      <argument>dRNppss6+S</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/var/www/project/var/cache/test/pools/system</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.security_is_granted_attribute_expression_language.recorder_inner" class="Symfony\Component\Cache\Adapter\AdapterInterface">
      <argument>eyBn40Numq</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/var/www/project/var/cache/test/pools/system</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id=".service_locator.PsmHLgS" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="Symfony\Bridge\Twig\Extension\CsrfRuntime" type="service_closure" id="twig.runtime.security_csrf"/>
        <argument key="Symfony\Bridge\Twig\Extension\HttpKernelRuntime" type="service_closure" id="twig.runtime.httpkernel"/>
        <argument key="Symfony\Bridge\Twig\Extension\SerializerRuntime" type="service_closure" id="twig.runtime.serializer"/>
        <argument key="Symfony\Component\Form\FormRenderer" type="service_closure" id="twig.form.renderer"/>
        <argument key="Sonata\Twig\Extension\FlashMessageRuntime" type="service_closure" id="sonata.twig.flashmessage.twig.runtime"/>
        <argument key="Sonata\Twig\Extension\StatusRuntime" type="service_closure" id="sonata.twig.status_runtime"/>
        <argument key="Sonata\BlockBundle\Templating\Helper\BlockHelper" type="service_closure" id="sonata.block.templating.helper"/>
        <argument key="Sonata\AdminBundle\Twig\SonataAdminRuntime" type="service_closure" id="sonata.admin.twig.sonata_admin_runtime"/>
        <argument key="Sonata\AdminBundle\Twig\TemplateRegistryRuntime" type="service_closure" id="sonata.admin.twig.template_registry_runtime"/>
        <argument key="Sonata\AdminBundle\Twig\GroupRuntime" type="service_closure" id="sonata.admin.twig.group_runtime"/>
        <argument key="Sonata\AdminBundle\Twig\IconRuntime" type="service_closure" id="sonata.admin.twig.icon_runtime"/>
        <argument key="Sonata\AdminBundle\Twig\SecurityRuntime" type="service_closure" id="sonata.admin.twig.security_runtime"/>
        <argument key="Sonata\AdminBundle\Twig\CanonicalizeRuntime" type="service_closure" id="sonata.admin.twig.canonicalize_runtime"/>
        <argument key="Sonata\AdminBundle\Twig\XEditableRuntime" type="service_closure" id="sonata.admin.twig.xeditable_runtime"/>
        <argument key="Sonata\AdminBundle\Twig\RenderElementRuntime" type="service_closure" id="sonata.admin.twig.render_element_runtime"/>
        <argument key="Sonata\AdminBundle\Twig\BreadcrumbsRuntime" type="service_closure" id="sonata.admin.twig.breadcrumbs_runtime"/>
      </argument>
    </service>
    <service id="App\Kernel" alias="kernel" public="true"/>
    <service id="Symfony\Component\DependencyInjection\ParameterBag\ContainerBagInterface" alias="parameter_bag"/>
    <service id="Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface" alias="parameter_bag"/>
    <service id="Symfony\Component\EventDispatcher\EventDispatcherInterface" alias="debug.event_dispatcher"/>
    <service id="Symfony\Contracts\EventDispatcher\EventDispatcherInterface" alias="debug.event_dispatcher"/>
    <service id="Psr\EventDispatcher\EventDispatcherInterface" alias="debug.event_dispatcher"/>
    <service id="Symfony\Component\HttpKernel\HttpKernelInterface" alias="http_kernel"/>
    <service id="Symfony\Component\HttpFoundation\RequestStack" alias="request_stack"/>
    <service id="Symfony\Component\HttpKernel\HttpCache\StoreInterface" alias="http_cache.store"/>
    <service id="Symfony\Component\HttpFoundation\UrlHelper" alias="url_helper"/>
    <service id="Symfony\Component\HttpKernel\KernelInterface" alias="kernel"/>
    <service id="Symfony\Component\Filesystem\Filesystem" alias="filesystem"/>
    <service id="Symfony\Component\HttpKernel\Config\FileLocator" alias="file_locator"/>
    <service id="Symfony\Component\HttpFoundation\UriSigner" alias="uri_signer"/>
    <service id="Symfony\Component\HttpKernel\UriSigner" alias="uri_signer">
      <deprecated package="symfony/framework-bundle" version="6.4">The "%alias_id%" alias is deprecated, use "Symfony\Component\HttpFoundation\UriSigner" instead.</deprecated>
    </service>
    <service id="Symfony\Component\DependencyInjection\ReverseContainer" alias="reverse_container"/>
    <service id="Symfony\Component\String\Slugger\SluggerInterface" alias="slugger"/>
    <service id="Symfony\Component\Clock\ClockInterface" alias="clock"/>
    <service id="Psr\Clock\ClockInterface" alias="clock"/>
    <service id="Symfony\Component\HttpKernel\Fragment\FragmentUriGeneratorInterface" alias="fragment.uri_generator"/>
    <service id="error_renderer.html" alias="twig.error_renderer.html"/>
    <service id="error_renderer" alias="error_handler.error_renderer.serializer"/>
    <service id=".Psr\Container\ContainerInterface $parameter_bag" alias="parameter_bag"/>
    <service id="Psr\Container\ContainerInterface $parameterBag" alias="parameter_bag"/>
    <service id="cache.app_clearer" alias="cache.default_clearer" public="true"/>
    <service id="Psr\Cache\CacheItemPoolInterface" alias="cache.app"/>
    <service id="Symfony\Contracts\Cache\CacheInterface" alias="cache.app"/>
    <service id="Symfony\Contracts\Cache\TagAwareCacheInterface" alias="cache.app.taggable"/>
    <service id="Symfony\Contracts\Translation\TranslatorInterface" alias="translator.data_collector"/>
    <service id="Symfony\Component\Asset\Packages" alias="assets.packages"/>
    <service id="Symfony\Contracts\HttpClient\HttpClientInterface" alias=".debug.http_client"/>
    <service id="mailer" alias="mailer.mailer"/>
    <service id="Symfony\Component\Mailer\MailerInterface" alias="mailer.mailer"/>
    <service id="Symfony\Component\Mailer\Transport\TransportInterface" alias="mailer.default_transport"/>
    <service id="Symfony\Component\Translation\Reader\TranslationReaderInterface" alias="translation.reader"/>
    <service id="Symfony\Component\Translation\Extractor\ExtractorInterface" alias="translation.extractor"/>
    <service id="Symfony\Component\Translation\Writer\TranslationWriterInterface" alias="translation.writer"/>
    <service id="Symfony\Contracts\Translation\LocaleAwareInterface" alias="translation.locale_switcher"/>
    <service id="Symfony\Component\Translation\LocaleSwitcher" alias="translation.locale_switcher"/>
    <service id="translator" alias="translator.data_collector" public="true"/>
    <service id="translator.formatter" alias="translator.formatter.default"/>
    <service id="Symfony\Component\ErrorHandler\ErrorRenderer\FileLinkFormatter" alias="debug.file_link_formatter"/>
    <service id="Symfony\Component\Stopwatch\Stopwatch" alias="debug.stopwatch"/>
    <service id="routing.loader.annotation" alias="routing.loader.attribute">
      <deprecated package="symfony/routing" version="6.4">The "%alias_id%" service is deprecated, use the "routing.loader.attribute" service instead.</deprecated>
    </service>
    <service id="routing.loader.annotation.directory" alias="routing.loader.attribute.directory">
      <deprecated package="symfony/routing" version="6.4">The "%alias_id%" service is deprecated, use the "routing.loader.attribute.directory" service instead.</deprecated>
    </service>
    <service id="routing.loader.annotation.file" alias="routing.loader.attribute.file">
      <deprecated package="symfony/routing" version="6.4">The "%alias_id%" service is deprecated, use the "routing.loader.attribute.file" service instead.</deprecated>
    </service>
    <service id="router" alias="router.default" public="true"/>
    <service id="Symfony\Component\Routing\RouterInterface" alias="router.default"/>
    <service id="Symfony\Component\Routing\Generator\UrlGeneratorInterface" alias="router.default"/>
    <service id="Symfony\Component\Routing\Matcher\UrlMatcherInterface" alias="router.default"/>
    <service id="Symfony\Component\Routing\RequestContextAwareInterface" alias="router.default"/>
    <service id="Symfony\Component\Routing\RequestContext" alias="router.request_context"/>
    <service id="Symfony\Component\PropertyAccess\PropertyAccessorInterface" alias="property_accessor"/>
    <service id="Symfony\Component\Serializer\SerializerInterface" alias="serializer"/>
    <service id="Symfony\Component\Serializer\Normalizer\NormalizerInterface" alias="serializer"/>
    <service id="Symfony\Component\Serializer\Normalizer\DenormalizerInterface" alias="serializer"/>
    <service id="Symfony\Component\Serializer\Encoder\EncoderInterface" alias="serializer"/>
    <service id="Symfony\Component\Serializer\Encoder\DecoderInterface" alias="serializer"/>
    <service id="serializer.property_accessor" alias="property_accessor"/>
    <service id="Symfony\Component\Serializer\Mapping\ClassDiscriminatorResolverInterface" alias="serializer.mapping.class_discriminator_resolver"/>
    <service id="Symfony\Component\Serializer\Normalizer\ObjectNormalizer" alias="serializer.normalizer.object">
      <deprecated package="symfony/serializer" version="6.2">The "%alias_id%" service alias is deprecated, type-hint against "Symfony\Component\Serializer\Normalizer\NormalizerInterface" or implement "Symfony\Component\Serializer\Normalizer\NormalizerAwareInterface" instead.</deprecated>
    </service>
    <service id="Symfony\Component\Serializer\Normalizer\PropertyNormalizer" alias="serializer.normalizer.property">
      <deprecated package="symfony/serializer" version="6.2">The "%alias_id%" service alias is deprecated, type-hint against "Symfony\Component\Serializer\Normalizer\NormalizerInterface" or implement "Symfony\Component\Serializer\Normalizer\NormalizerAwareInterface" instead.</deprecated>
    </service>
    <service id="Symfony\Component\Serializer\Mapping\Factory\ClassMetadataFactoryInterface" alias="serializer.mapping.class_metadata_factory"/>
    <service id="error_renderer.serializer" alias="error_handler.error_renderer.serializer"/>
    <service id="Symfony\Component\PropertyInfo\PropertyAccessExtractorInterface" alias="property_info"/>
    <service id="Symfony\Component\PropertyInfo\PropertyDescriptionExtractorInterface" alias="property_info"/>
    <service id="Symfony\Component\PropertyInfo\PropertyInfoExtractorInterface" alias="property_info"/>
    <service id="Symfony\Component\PropertyInfo\PropertyTypeExtractorInterface" alias="property_info"/>
    <service id="Symfony\Component\PropertyInfo\PropertyListExtractorInterface" alias="property_info"/>
    <service id="Symfony\Component\PropertyInfo\PropertyInitializableExtractorInterface" alias="property_info"/>
    <service id="Symfony\Component\PropertyInfo\PropertyReadInfoExtractorInterface" alias="property_info.reflection_extractor"/>
    <service id="Symfony\Component\PropertyInfo\PropertyWriteInfoExtractorInterface" alias="property_info.reflection_extractor"/>
    <service id="Symfony\Component\WebLink\HttpHeaderSerializer" alias="web_link.http_header_serializer"/>
    <service id="cache.default_redis_provider" alias=".cache_connection.GD_MSZC"/>
    <service id="cache.default_memcached_provider" alias=".cache_connection.JKE6keX"/>
    <service id="cache.default_doctrine_dbal_provider" alias="doctrine.dbal.default_connection"/>
    <service id="SessionHandlerInterface" alias="session.handler.native"/>
    <service id="session.storage.factory" alias="session.storage.factory.mock_file"/>
    <service id="session.handler" alias="session.handler.native"/>
    <service id="session_listener" alias="test.session.listener"/>
    <service id="Symfony\Component\Security\Csrf\TokenGenerator\TokenGeneratorInterface" alias="security.csrf.token_generator"/>
    <service id="Symfony\Component\Security\Csrf\TokenStorage\TokenStorageInterface" alias="security.csrf.token_storage"/>
    <service id="Symfony\Component\Security\Csrf\CsrfTokenManagerInterface" alias="security.csrf.token_manager"/>
    <service id="Symfony\Component\Form\ResolvedFormTypeFactoryInterface" alias="form.resolved_type_factory"/>
    <service id="Symfony\Component\Form\FormRegistryInterface" alias="form.registry"/>
    <service id="Symfony\Component\Form\FormFactoryInterface" alias="form.factory"/>
    <service id="form.property_accessor" alias="property_accessor"/>
    <service id="form.choice_list_factory" alias="form.choice_list_factory.cached"/>
    <service id="Symfony\Component\Validator\Validator\ValidatorInterface" alias="debug.validator"/>
    <service id="validator.mapping.class_metadata_factory" alias="debug.validator"/>
    <service id="Symfony\Component\Messenger\Transport\Serialization\SerializerInterface" alias="messenger.transport.native_php_serializer"/>
    <service id="messenger.default_serializer" alias="messenger.transport.native_php_serializer"/>
    <service id="messenger.listener.stop_worker_on_sigterm_signal_listener" alias="messenger.listener.stop_worker_signals_listener">
      <deprecated package="6.3" version="symfony/messenger">The "%alias_id%" service is deprecated, use the "Symfony\Component\Console\Command\SignalableCommandInterface" instead.</deprecated>
    </service>
    <service id="messenger.default_bus" alias="debug.traced.messenger.bus.default" public="true"/>
    <service id="Symfony\Component\Messenger\MessageBusInterface" alias="debug.traced.messenger.bus.default"/>
    <service id="messenger.failure_transports.default" alias="messenger.transport.failed"/>
    <service id="Symfony\Component\Notifier\NotifierInterface" alias="notifier"/>
    <service id="notifier.logger_notification_listener" alias="notifier.notification_logger_listener">
      <deprecated package="symfony/framework-bundle" version="6.3">The "%alias_id%" service is deprecated, use "notifier.notification_logger_listener" instead.</deprecated>
    </service>
    <service id="Symfony\Component\Mime\MimeTypesInterface" alias="mime_types"/>
    <service id="Symfony\Component\Mime\MimeTypeGuesserInterface" alias="mime_types"/>
    <service id="Doctrine\DBAL\Connection" alias="doctrine.dbal.default_connection"/>
    <service id="Doctrine\Persistence\ManagerRegistry" alias="doctrine"/>
    <service id="Doctrine\Common\Persistence\ManagerRegistry" alias="doctrine"/>
    <service id="database_connection" alias="doctrine.dbal.default_connection" public="true"/>
    <service id="doctrine.dbal.event_manager" alias="doctrine.dbal.default_connection.event_manager"/>
    <service id="Doctrine\DBAL\Connection $defaultConnection" alias="doctrine.dbal.default_connection"/>
    <service id="Doctrine\ORM\EntityManagerInterface" alias="doctrine.orm.default_entity_manager"/>
    <service id="doctrine.orm.entity_manager" alias="doctrine.orm.default_entity_manager" public="true"/>
    <service id="doctrine.orm.default_metadata_cache" alias="cache.doctrine.orm.default.metadata"/>
    <service id="doctrine.orm.default_result_cache" alias="cache.doctrine.orm.default.result"/>
    <service id="doctrine.orm.default_query_cache" alias="cache.doctrine.orm.default.query"/>
    <service id="Doctrine\ORM\EntityManagerInterface $defaultEntityManager" alias="doctrine.orm.default_entity_manager"/>
    <service id="doctrine.orm.default_entity_manager.event_manager" alias="doctrine.dbal.default_connection.event_manager"/>
    <service id="doctrine.migrations.metadata_storage" alias="doctrine.migrations.storage.table_storage"/>
    <service id="Twig_Environment" alias="twig">
      <deprecated package="symfony/twig-bundle" version="6.3">The "%alias_id%" service alias is deprecated, use "Twig\Environment" or "twig" instead.</deprecated>
    </service>
    <service id="Twig\Environment" alias="twig"/>
    <service id="Symfony\Component\Mime\BodyRendererInterface" alias="twig.mime_body_renderer"/>
    <service id="Symfony\Component\Security\Core\Authorization\AuthorizationCheckerInterface" alias="security.authorization_checker"/>
    <service id="Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorageInterface" alias="security.token_storage"/>
    <service id="Symfony\Bundle\SecurityBundle\Security" alias="security.helper"/>
    <service id="Symfony\Component\Security\Core\Security" alias="security.helper">
      <deprecated package="symfony/security-bundle" version="6.2">The "%alias_id%" service alias is deprecated, use "Symfony\Bundle\SecurityBundle\Security" instead.</deprecated>
    </service>
    <service id="Symfony\Component\Security\Http\Session\SessionAuthenticationStrategyInterface" alias="security.authentication.session_strategy"/>
    <service id="Symfony\Component\Security\Http\Authentication\AuthenticationUtils" alias="security.authentication_utils"/>
    <service id="Symfony\Component\Security\Core\Authorization\AccessDecisionManagerInterface" alias="debug.security.access.decision_manager"/>
    <service id="Symfony\Component\Security\Core\Role\RoleHierarchyInterface" alias="security.role_hierarchy"/>
    <service id="Symfony\Component\Security\Http\Firewall" alias="debug.security.firewall"/>
    <service id="Symfony\Component\Security\Http\FirewallMapInterface" alias="security.firewall.map"/>
    <service id="Symfony\Component\Security\Http\HttpUtils" alias="security.http_utils"/>
    <service id="Symfony\Component\PasswordHasher\Hasher\PasswordHasherFactoryInterface" alias="security.password_hasher_factory"/>
    <service id="security.password_hasher" alias="security.user_password_hasher"/>
    <service id="Symfony\Component\PasswordHasher\Hasher\UserPasswordHasherInterface" alias="security.user_password_hasher"/>
    <service id="Symfony\Component\Security\Http\Authentication\UserAuthenticatorInterface" alias="security.user_authenticator"/>
    <service id="security.firewall" alias="debug.security.firewall"/>
    <service id="security.user_providers" alias="security.user.provider.concrete.users_in_memory"/>
    <service id="Symfony\Component\Security\Core\User\UserProviderInterface" alias="security.user.provider.concrete.users_in_memory"/>
    <service id="security.authentication.session_strategy.main" alias="security.authentication.session_strategy"/>
    <service id="security.user_checker.main" alias="security.user_checker"/>
    <service id="security.firewall.context_locator" alias=".service_locator.zJyh7qS"/>
    <service id="Symfony\Component\Security\Core\User\UserCheckerInterface" alias="security.user_checker"/>
    <service id="logger" alias="monolog.logger"/>
    <service id="Psr\Log\LoggerInterface" alias="monolog.logger"/>
    <service id="Sonata\Exporter\Exporter" alias="sonata.exporter.exporter"/>
    <service id="Sonata\Exporter\ExporterInterface" alias="sonata.exporter.exporter"/>
    <service id="Sonata\BlockBundle\Templating\Helper\BlockHelper" alias="sonata.block.templating.helper"/>
    <service id="sonata.block.context_manager" alias="sonata.block.context_manager.default"/>
    <service id="sonata.block.renderer" alias="sonata.block.renderer.default"/>
    <service id="Knp\Menu\Provider\MenuProviderInterface" alias="knp_menu.menu_provider.chain"/>
    <service id="Knp\Menu\FactoryInterface" alias="knp_menu.factory"/>
    <service id="Knp\Menu\Matcher\MatcherInterface" alias="knp_menu.matcher"/>
    <service id="Knp\Menu\Util\MenuManipulator" alias="knp_menu.manipulator"/>
    <service id="Sonata\AdminBundle\Admin\Pool" alias="sonata.admin.pool"/>
    <service id="Sonata\AdminBundle\Filter\FilterFactoryInterface" alias="sonata.admin.builder.filter.factory"/>
    <service id="Sonata\AdminBundle\Admin\BreadcrumbsBuilderInterface" alias="sonata.admin.breadcrumbs_builder"/>
    <service id="Sonata\AdminBundle\Translator\LabelTranslatorStrategyInterface" alias="sonata.admin.label.strategy.native"/>
    <service id="Sonata\AdminBundle\Model\AuditManagerInterface" alias="sonata.admin.audit.manager"/>
    <service id="Sonata\AdminBundle\Search\SearchHandlerInterface" alias="sonata.admin.search.handler"/>
    <service id="Sonata\AdminBundle\Filter\Persister\FilterPersisterInterface" alias="sonata.admin.filter_persister.session"/>
    <service id="Sonata\AdminBundle\Request\AdminFetcherInterface" alias="sonata.admin.request.fetcher"/>
    <service id="sonata.admin.twig.extension" alias="sonata.admin.twig.sonata_admin_extension">
      <deprecated package="sonata-project/admin-bundle" version="4.7">The "%alias_id%" alias is deprecated since sonata-project/admin-bundle 4.7 and will be removed in 5.0.</deprecated>
    </service>
    <service id="sonata.templates.twig.extension" alias="sonata.admin.twig.template_registry_extension">
      <deprecated package="sonata-project/admin-bundle" version="4.7">The "%alias_id%" alias is deprecated since sonata-project/admin-bundle 4.7 and will be removed in 5.0.</deprecated>
    </service>
    <service id="sonata.admin.group.extension" alias="sonata.admin.twig.group_extension">
      <deprecated package="sonata-project/admin-bundle" version="4.7">The "%alias_id%" alias is deprecated since sonata-project/admin-bundle 4.7 and will be removed in 5.0.</deprecated>
    </service>
    <service id="sonata.security.twig.extension" alias="sonata.admin.twig.security_extension">
      <deprecated package="sonata-project/admin-bundle" version="4.7">The "%alias_id%" alias is deprecated since sonata-project/admin-bundle 4.7 and will be removed in 5.0.</deprecated>
    </service>
    <service id="sonata.canonicalize.twig.extension" alias="sonata.admin.twig.canonicalize_extension">
      <deprecated package="sonata-project/admin-bundle" version="4.7">The "%alias_id%" alias is deprecated since sonata-project/admin-bundle 4.7 and will be removed in 5.0.</deprecated>
    </service>
    <service id="sonata.xeditable.twig.extension" alias="sonata.admin.twig.xeditable_extension">
      <deprecated package="sonata-project/admin-bundle" version="4.7">The "%alias_id%" alias is deprecated since sonata-project/admin-bundle 4.7 and will be removed in 5.0.</deprecated>
    </service>
    <service id="sonata.render_element.twig.extension" alias="sonata.admin.twig.render_element_extension">
      <deprecated package="sonata-project/admin-bundle" version="4.7">The "%alias_id%" alias is deprecated since sonata-project/admin-bundle 4.7 and will be removed in 5.0.</deprecated>
    </service>
    <service id="Sonata\AdminBundle\Bridge\Exporter\AdminExporter" alias="sonata.admin.admin_exporter"/>
    <service id="sonata.admin.security.handler" alias="sonata.admin.security.handler.noop"/>
    <service id="Sonata\AdminBundle\Util\AdminObjectAclManipulator" alias="sonata.admin.object.manipulator.acl.admin"/>
    <service id="container.env_var_processors_locator" alias=".service_locator.w7.f4fT" public="true"/>
    <service id="twig.loader.filesystem" alias="twig.loader.native_filesystem"/>
    <service id="argument_resolver.controller_locator" alias=".service_locator.iAuVEDq"/>
    <service id="doctrine.id_generator_locator" alias=".service_locator.KLVvNIq"/>
    <service id="twig.loader" alias="twig.loader.native_filesystem"/>
    <service id="Psr\Log\LoggerInterface $requestLogger" alias="monolog.logger.request"/>
    <service id="Psr\Log\LoggerInterface $consoleLogger" alias="monolog.logger.console"/>
    <service id="Psr\Log\LoggerInterface $messengerLogger" alias="monolog.logger.messenger"/>
    <service id="Psr\Log\LoggerInterface $cacheLogger" alias="monolog.logger.cache"/>
    <service id=".Psr\Log\LoggerInterface $http_clientLogger" alias="monolog.logger.http_client"/>
    <service id="Psr\Log\LoggerInterface $httpClientLogger" alias="monolog.logger.http_client"/>
    <service id="Psr\Log\LoggerInterface $mailerLogger" alias="monolog.logger.mailer"/>
    <service id="Psr\Log\LoggerInterface $translationLogger" alias="monolog.logger.translation"/>
    <service id="Psr\Log\LoggerInterface $phpLogger" alias="monolog.logger.php"/>
    <service id="Psr\Log\LoggerInterface $eventLogger" alias="monolog.logger.event"/>
    <service id="Psr\Log\LoggerInterface $routerLogger" alias="monolog.logger.router"/>
    <service id="Psr\Log\LoggerInterface $profilerLogger" alias="monolog.logger.profiler"/>
    <service id="Psr\Log\LoggerInterface $doctrineLogger" alias="monolog.logger.doctrine"/>
    <service id="Psr\Log\LoggerInterface $securityLogger" alias="monolog.logger.security"/>
    <service id="Psr\Log\LoggerInterface $deprecationLogger" alias="monolog.logger.deprecation"/>
    <service id="knp_menu.menu_provider" alias="knp_menu.menu_provider.chain"/>
    <service id=".service_locator.80edgLI" alias="messenger.receiver_locator"/>
    <service id=".service_locator.h8Jkkd2" alias="messenger.retry_strategy_locator"/>
    <service id=".service_locator.bJ.4HC5" alias=".service_locator.w7.f4fT"/>
    <service id=".service_locator.flAcHh1" alias=".service_locator.uKj8i7y"/>
    <service id=".service_locator.Vor34Ru" alias=".service_locator.QGMB0r."/>
    <service id=".service_locator.aiauwtZ" alias=".service_locator.iAuVEDq"/>
    <service id=".service_locator.9zBcwIA" alias=".service_locator.ratsPLV"/>
    <service id=".service_locator.7ykflaK" alias=".service_locator..OzUK48"/>
    <service id=".service_locator.g4QkKXl" alias=".service_locator.vefZLS1"/>
    <service id=".service_locator.BxgC0D5" alias=".service_locator.LzUyP7d"/>
    <service id=".service_locator.fLLFP2j" alias=".service_locator.ejIbxXf"/>
    <service id=".service_locator.O24_MAy" alias=".service_locator.yY.p4P7"/>
    <service id=".service_locator.jUv.zyj" alias=".service_locator.O2p6Lk7"/>
    <service id=".service_locator.MrPwCJ0" alias=".service_locator.2e6LmLI"/>
    <service id="validator" alias="debug.validator"/>
    <service id="http_client" alias=".debug.http_client"/>
    <service id=".debug.http_client.inner" alias="http_client.uri_template"/>
    <service id="event_dispatcher" alias="debug.event_dispatcher" public="true"/>
    <service id="controller_resolver" alias="debug.controller_resolver"/>
    <service id="argument_resolver" alias="debug.argument_resolver"/>
    <service id="translator.data_collector.inner" alias="translator.default"/>
    <service id="doctrine.migrations.migrations_factory" alias="doctrine.migrations.container_aware_migrations_factory"/>
    <service id="twig.error_renderer.html.inner" alias="error_handler.error_renderer.html"/>
    <service id="security.access.decision_manager" alias="debug.security.access.decision_manager"/>
    <service id="security.firewall.authenticator.main" alias="debug.security.firewall.authenticator.main"/>
    <service id="messenger.bus.default" alias="debug.traced.messenger.bus.default"/>
    <service id="doctrine.orm.default_metadata_driver" alias=".doctrine.orm.default_metadata_driver"/>
    <service id="security.event_dispatcher.main" alias="debug.security.event_dispatcher.main"/>
    <service id=".service_locator.gFlme_s" alias=".service_locator.y4_Zrx."/>
    <service id=".service_locator.dwsvwr9" alias=".service_locator.uKj8i7y"/>
    <service id=".service_locator.f7d4lMJ" alias=".service_locator.yNJ0lDi"/>
    <service id=".service_locator.ZPSTecC" alias=".service_locator.QGMB0r."/>
    <service id=".service_locator.Q1z.f9O" alias=".service_locator.O2p6Lk7"/>
    <service id=".service_locator.4CfrfXU" alias=".service_locator.2e6LmLI"/>
    <service id=".service_locator.AQNbyKz" alias=".service_locator.2dbgUIS"/>
    <service id=".service_locator.hnz5ZNh" alias=".service_locator.0TACwl3"/>
    <service id=".service_locator..Fs8Kd7" alias=".service_locator.e_.xxAP"/>
  </services>
</container>
