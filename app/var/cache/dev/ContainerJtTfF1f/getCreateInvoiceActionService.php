<?php

namespace ContainerJtTfF1f;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getCreateInvoiceActionService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'App\Service\Payment\Invoice\CreateInvoiceAction' shared autowired service.
     *
     * @return \App\Service\Payment\Invoice\CreateInvoiceAction
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/src/Service/Payment/Invoice/CreateInvoiceAction.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/http-client-contracts/ResponseInterface.php';
        include_once \dirname(__DIR__, 4).'/src/Service/Payment/Invoice/Mock/MockInterface.php';
        include_once \dirname(__DIR__, 4).'/src/Service/Payment/Invoice/Mock/AbstractCreateInvoiceResponseMock.php';
        include_once \dirname(__DIR__, 4).'/src/Service/Payment/Invoice/Mock/Response/SuccessResponseResponseMock.php';

        $a = ($container->services['router'] ?? self::getRouterService($container));

        if (isset($container->privates['App\\Service\\Payment\\Invoice\\CreateInvoiceAction'])) {
            return $container->privates['App\\Service\\Payment\\Invoice\\CreateInvoiceAction'];
        }

        return $container->privates['App\\Service\\Payment\\Invoice\\CreateInvoiceAction'] = new \App\Service\Payment\Invoice\CreateInvoiceAction(($container->privates['App\\Service\\Payment\\SignatureService'] ?? $container->load('getSignatureServiceService')), ($container->privates['.debug.http_client'] ?? self::get_Debug_HttpClientService($container)), new \App\Service\Payment\Invoice\Mock\Response\SuccessResponseResponseMock(), $a);
    }
}
