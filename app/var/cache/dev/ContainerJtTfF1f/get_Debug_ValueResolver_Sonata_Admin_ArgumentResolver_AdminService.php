<?php

namespace ContainerJtTfF1f;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class get_Debug_ValueResolver_Sonata_Admin_ArgumentResolver_AdminService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private '.debug.value_resolver.sonata.admin.argument_resolver.admin' shared service.
     *
     * @return \Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/http-kernel/Controller/ArgumentValueResolverInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/http-kernel/Controller/ValueResolverInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/http-kernel/Controller/ArgumentResolver/TraceableValueResolver.php';
        include_once \dirname(__DIR__, 4).'/vendor/sonata-project/admin-bundle/src/ArgumentResolver/CompatibleValueResolverInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/sonata-project/admin-bundle/src/ArgumentResolver/AdminValueResolver.php';

        $a = ($container->privates['sonata.admin.request.fetcher'] ?? $container->load('getSonata_Admin_Request_FetcherService'));

        if (isset($container->privates['.debug.value_resolver.sonata.admin.argument_resolver.admin'])) {
            return $container->privates['.debug.value_resolver.sonata.admin.argument_resolver.admin'];
        }

        return $container->privates['.debug.value_resolver.sonata.admin.argument_resolver.admin'] = new \Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver(new \Sonata\AdminBundle\ArgumentResolver\AdminValueResolver($a), ($container->services['debug.stopwatch'] ??= new \Symfony\Component\Stopwatch\Stopwatch(true)));
    }
}
